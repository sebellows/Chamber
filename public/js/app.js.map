{"version":3,"sources":["navigation.js","skip-link-focus-fix.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"app.js","sourcesContent":["/**\n * File navigation.js.\n *\n * Handles toggling the navigation menu for small screens and enables TAB key\n * navigation support for dropdown menus.\n */\n( function() {\n\n  const ROOT     = document.documentElement,\n        BODY     = document.body,\n        NAV      = document.querySelector( '.section-navigation' );\n\n  if ( ! NAV ) {\n    return;\n  }\n\n  /**\n   * Sets or removes .focus class on an element.\n   */\n  const CLOSE_BUTTON = `\n      <button class=\"menu-toggle-close\" aria-controls=\"dept-menu\" aria-expanded=\"true\">\n        <span class=\"screen-reader-text\">Close menu</span>\n        <span class=\"icon\" m-Icon=\"close large\" aria-hidden=\"true\"><svg role=\"presentation\" viewBox=\"0 1 24 24\"><use xlink:href=\"#icon-close\"></use></svg></span>\n      </button>\n  `;\n\n  /**\n   * Create a Close button for dismissing the menu modal.\n   * \n   * @return object\n   */\n  function createCloseButton() {\n    var toggleClose = document.createElement('div');\n\n    toggleClose.style.cssText +=';'+ 'position:absolute;top:3rem;right:2rem;z-index:1201;';\n    toggleClose.innerHTML = CLOSE_BUTTON;\n\n    return toggleClose;\n  }\n\n  /**\n   * Create the menu modal for displaying the section-navigation\n   * on small screens.\n   * \n   * @return object\n   */\n  function createModalBackground() {\n    var modalBg = document.createElement('div');\n\n    modalBg.classList.add('menu-modal');\n    modalBg.setAttribute('aria-ignore', 'true');\n    modalBg.style.cssText +=';'+ 'position:absolute;top:0;left:0;width:100vw;height:100vh;';\n\n    return modalBg;\n  }\n\n  /**\n   * Menu-related constants.\n   *\n   * @var mixed\n   */\n  const BUTTON   = document.querySelector( '.menu-toggle' ),\n        MASTHEAD = document.querySelector( '#masthead' ),\n        MENU     = NAV.getElementsByTagName( 'ul' )[0],\n        LINKS    = MENU.getElementsByTagName( 'a' ),\n        SUBMENUS = MENU.getElementsByTagName( 'ul' ),\n        CLOSE    = createCloseButton(),\n        MODAL    = createModalBackground();\n\n  // Return early if the process if `section-navigation` is not present\n  // or if the `menu-toggle` button is undefined.\n  if ( ! NAV || 'undefined' === typeof BUTTON ) {\n    return;\n  }\n\n  // Hide menu toggle button if `section-navigation` is empty and return early.\n  if ( 'undefined' === typeof MENU ) {\n    BUTTON.style.display = 'none';\n    return;\n  }\n\n  MENU.setAttribute( 'aria-expanded', 'false' );\n  if ( -1 === MENU.className.indexOf( 'nav-menu' ) ) {\n    MENU.className += ' nav-menu';\n  }\n\n  /**\n   * Onclick event handler for toggling OPEN the `section-navigation`.\n   */\n  BUTTON.onclick = function() {\n    NAV.className += ' is-active';\n    BODY.appendChild(MODAL);\n    BUTTON.setAttribute( 'aria-expanded', 'true' );\n    MENU.setAttribute( 'aria-expanded', 'true' );\n    BODY.appendChild(CLOSE);\n    BODY.className += ' navigation-is-open';\n    MASTHEAD.style.zIndex = 'initial';\n  };\n\n  /**\n   * Onclick event handler for toggling CLOSED the `section-navigation`.\n   */\n  CLOSE.onclick = function() {\n    if ( -1 !== NAV.className.indexOf( 'is-active' ) ) {\n      NAV.className = NAV.className.replace( ' is-active', '' );\n      BODY.removeChild(MODAL);\n      BUTTON.setAttribute( 'aria-expanded', 'false' );\n      MENU.setAttribute( 'aria-expanded', 'false' );\n      BODY.className = BODY.className.replace( ' navigation-is-open', '' );\n      MASTHEAD.removeAttribute('style');\n      BODY.removeChild(CLOSE);\n    }\n  };\n\n  // Get all the link elements within the menu.\n  var i, len;\n\n  // Set menu items with submenus to aria-haspopup=\"true\".\n  for ( i = 0, len = SUBMENUS.length; i < len; i++ ) {\n    SUBMENUS[i].parentNode.setAttribute( 'aria-haspopup', 'true' );\n  }\n\n  // Each time a menu link is focused or blurred, toggle focus.\n  for ( i = 0, len = LINKS.length; i < len; i++ ) {\n    LINKS[i].addEventListener( 'focus', toggleFocus, true );\n    LINKS[i].addEventListener( 'blur', toggleFocus, true );\n  }\n\n  /**\n   * Sets or removes .focus class on an element.\n   */\n  function toggleFocus() {\n    var self = this;\n\n    // Move up through the ancestors of the current link until we hit .nav-menu.\n    while ( -1 === self.className.indexOf( 'nav-menu' ) ) {\n\n      // On li elements toggle the class .focus.\n      if ( 'li' === self.tagName.toLowerCase() ) {\n        if ( -1 !== self.className.indexOf( 'focus' ) ) {\n          self.className = self.className.replace( ' focus', '' );\n        } else {\n          self.className += ' focus';\n        }\n      }\n\n      self = self.parentElement;\n    }\n  }\n\n  /**\n   * Toggles `focus` class to allow submenu access on tablets.\n   */\n  ( function( NAV ) {\n    var touchStartFn, i,\n      parentLink = NAV.querySelectorAll( '.menu-item-has-children > a, .page_item_has_children > a' );\n\n    if ( 'ontouchstart' in window ) {\n      touchStartFn = function( e ) {\n        var menuItem = this.parentNode, i;\n\n        if ( ! menuItem.classList.contains( 'focus' ) ) {\n          e.preventDefault();\n          for ( i = 0; i < menuItem.parentNode.children.length; ++i ) {\n            if ( menuItem === menuItem.parentNode.children[i] ) {\n              continue;\n            }\n            menuItem.parentNode.children[i].classList.remove( 'focus' );\n          }\n          menuItem.classList.add( 'focus' );\n        } else {\n          menuItem.classList.remove( 'focus' );\n        }\n      };\n\n      for ( i = 0; i < parentLink.length; ++i ) {\n        parentLink[i].addEventListener( 'touchstart', touchStartFn, false );\n      }\n    }\n  }( NAV ) );\n} )();\n","/**\n * File skip-link-focus-fix.js.\n *\n * Helps with accessibility for keyboard only users.\n *\n * Learn more: https://git.io/vWdr2\n */\n( function() {\n\tvar isWebkit = navigator.userAgent.toLowerCase().indexOf( 'webkit' ) > -1,\n\t    isOpera  = navigator.userAgent.toLowerCase().indexOf( 'opera' )  > -1,\n\t    isIe     = navigator.userAgent.toLowerCase().indexOf( 'msie' )   > -1;\n\n\tif ( ( isWebkit || isOpera || isIe ) && document.getElementById && window.addEventListener ) {\n\t\twindow.addEventListener( 'hashchange', function() {\n\t\t\tvar id = location.hash.substring( 1 ),\n\t\t\t\telement;\n\n\t\t\tif ( ! ( /^[A-z0-9_-]+$/.test( id ) ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telement = document.getElementById( id );\n\n\t\t\tif ( element ) {\n\t\t\t\tif ( ! ( /^(?:a|select|input|button|textarea)$/i.test( element.tagName ) ) ) {\n\t\t\t\t\telement.tabIndex = -1;\n\t\t\t\t}\n\n\t\t\t\telement.focus();\n\t\t\t}\n\t\t}, false );\n\t}\n})();\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n    // Use this variable to set up the common and page specific functions. If you\n    // rename this variable, you will also need to rename the namespace below.\n    var Chamber = {\n        // All pages\n        'common': {\n            init: function() {\n                // JavaScript to be fired on all pages\n                \n                // toggle the searchform in the global header\n                if ($(\"#searchForm\").length > 0) {\n                    new Foundation.Toggler($(\"#searchForm\"));\n                }\n\n                // Add scroll-scope.js to flickity captions\n                $(document).scrollScope();\n\n                // Add YouTube video to modal to prevent it from slowing down page rendering\n                if ($(\".mediabox .media\").length > 0) {\n                    createReveal();\n                }\n\n                if ($(\".reveal\").length > 0) {\n                    new Foundation.Reveal( $(\".reveal\") );\n                }\n\n                function createReveal() {\n                    var $reveal     =   '<div class=\"reveal\" id=\"videoPlayerReveal\" data-reveal>'+\n                                        '<div id=\"videoBox\" class=\"flex-video widescreen media\"></div>'+\n                                        '</div>';\n                    var closeButton =   '<button class=\"close-button\" data-close aria-label=\"Close modal\">'+\n                                        '<span class=\"screen-reader-text\">Close modal</span>'+\n                                        '<span class=\"icon\" m-Icon=\"close large\" aria-hidden=\"true\">'+\n                                        '<svg role=\"presentation\" viewBox=\"0 1 24 24\"><use xlink:href=\"#icon-close\"></use></svg>'+\n                                        '</span>'+\n                                        '</button>';\n\n                    $('body').append($reveal);\n\n                    // Use `setTimeout` due to delay in `.reveal` getting wrapped by overlay\n                    // Close button was moved to prevent it overlapping the video.\n                    setTimeout(function() {\n                        $('.reveal-overlay').prepend(closeButton);                        \n                    }, 500);\n                }\n\n                $(document).on('click', \"[data-open]\", function(e) {\n                    var target = $(this).attr(\"data-open\");\n                    var mediaAttrs  = atob($(this).attr(\"data-media\"));\n\n                    // Append the iframe attributes to an iframe in the `#videoBox`\n                    $(\"#videoBox\").append('<iframe ' + mediaAttrs + '></iframe>');\n                    $(\"#\" + target).css('opacity', '1');\n                    \n                });\n\n                $(document).on(\n                    'closed.zf.reveal', function() {\n                        $(\"#videoBox iframe\").remove();\n                    }\n                );\n            },\n            finalize: function() {\n                // JavaScript to be fired on all pages, after page specific JS is fired\n            }\n        },\n        // Home page\n        'home': {\n            init: function() {\n                // JavaScript to be fired on the home page\n            },\n            finalize: function() {\n                // JavaScript to be fired on the home page, after the init JS\n            }\n        },\n        'blog': {\n            init: function() {\n                // Make click on social sharing buttons open up small pop-up window instead of another tab.\n                $('body').on('click', 'a[m-button~=\"share\"]', function(event) {\n                    console.log('It was clicked!');\n                    event.preventDefault();\n                    var url = $(this).attr('href');\n                    window.open(url, 'social_share_window', 'height=320, width=560, toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, directories=no, status=no');\n                });\n\n                // Set images in `.entry-content` to non-floating blocks if they're horizontal\n                $('.entry-content img').each( function ( $w, $h ) {\n                    $w = $(this).width();\n                    $h = $(this).height();\n                    ($w > $h) ? $(this).addClass('inline-image-h') : $(this).addClass('inline-image-v');\n                });\n            },\n            finalize: function() {\n                //\n            }\n        },\n        'archive': {\n            init: (function() {\n                // The ID for the list with all the blog posts\n                var $container = $('.card-grid');\n\n                //Isotope options, 'Card' matches the class in the PHP\n                $container.imagesLoaded( function(){\n                    $container.isotope({\n                        itemSelector : '.Card', \n                            layoutMode : 'masonry'\n                    });\n                });\n             \n                // Add the class selected to the Card that is clicked, and remove from the others\n                var $optionSets = $('.isotope-sortable-menu'),\n                $optionLinks = $optionSets.find('a');\n\n                $optionLinks.click(function() {\n                    var $this = $(this);\n                    // don't proceed if already selected\n                    if ( $this.hasClass('is-selected') ) {\n                        return false;\n                    }\n                    var $optionSet = $this.parents('.isotope-sortable-menu');\n                    $optionSets.find('.is-selected').removeClass('is-selected');\n                    $this.addClass('is-selected');\n                 \n                    // When a Card is clicked, sort the items.\n                    var selector = $(this).attr('data-filter');\n                    $container.isotope({ filter: selector });\n\n                    return false;\n                });\n            }),\n            finalize: function() {\n                //\n            }\n        },\n        // About us page, note the change from about-us to about_us.\n        'about_us': {\n            init: function() {\n                // JavaScript to be fired on the about us page\n            },\n            finalize: function() {\n                //\n            }\n        },\n        'data_grid_attractions': {\n            init: function() {\n                var $table = $('#dataGrid'),\n                    $alertBtn = $('#alertButton'),\n                    full_screen = false;\n                    \n                $().ready(function(){\n                    $table.chamberDataGrid({\n                        toolbar: \".toolbar\",\n                \n                        showRefresh: true,\n                        search: true,\n                        showToggle: true,\n                        showColumns: true,\n                        pagination: true,\n                        striped: true,\n                        pageSize: 10,\n                        pageList: [10,25,50,100],\n                        \n                        formatShowingRows: function(pageFrom, pageTo, totalRows){\n                            //do nothing here, we don't want to show the text \"showing x of y from...\" \n                        },\n                        formatRecordsPerPage: function(pageNumber){\n                            return pageNumber + \" rows visible\";\n                        },\n                        icons: {\n                            refresh: 'refresh',\n                            toggle: 'list',\n                            columns: 'columns',\n                            detailOpen: 'plus-circle',\n                            detailClose: 'minus-circle'\n                        }\n                    });\n                    \n                                \n                    \n                    $(window).resize(function () {\n                        $table.chamberDataGrid('resetView');\n                    });\n\n                    $alertButton.click(function () {\n                        alert(\"You pressed on Alert\");\n                    });\n                    \n                });\n            },\n            finalize: function() {\n                //\n            }\n        }\n    };\n\n    // The routing fires all common scripts, followed by the page specific scripts.\n    // Add additional events for more control over timing e.g. a finalize event\n    var UTIL = {\n        fire: function(func, funcname, args) {\n            var fire;\n            var namespace = Chamber;\n            funcname = (funcname === undefined) ? 'init' : funcname;\n            fire = func !== '';\n            fire = fire && namespace[func];\n            fire = fire && typeof namespace[func][funcname] === 'function';\n\n            if (fire) {\n                namespace[func][funcname](args);\n            }\n        },\n        loadEvents: function() {\n            // Fire common init JS\n            UTIL.fire('common');\n\n            // Fire page-specific init JS, and then finalize JS\n            $.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n                UTIL.fire(classnm);\n                UTIL.fire(classnm, 'finalize');\n            });\n\n            // Fire common finalize JS\n            UTIL.fire('common', 'finalize');\n        }\n    };\n\n    // Load Events\n    $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"/source/"}