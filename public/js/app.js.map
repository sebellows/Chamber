{"version":3,"sources":["navigation.js","skip-link-focus-fix.js","app.js"],"names":[],"mappingsxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/**\n * File navigation.js.\n *\n * Handles toggling the navigation menu for small screens and enables TAB key\n * navigation support for dropdown menus.\n */\n( function() {\n\n  const ROOT     = document.documentElement,\n        BODY     = document.body,\n        NAV      = document.querySelector( '#deptNavigation' );\n\n  if ( ! NAV ) {\n  // if ( document.getElementById( 'deptNavigation' ) !== 'undefined' ) {\n    return;\n  }\n\n  const BUTTON   = document.querySelector( '.menu-toggle' ),\n        MASTHEAD = document.querySelector( '#masthead' ),\n        MENU     = NAV.getElementsByTagName( 'ul' )[0],\n        LINKS    = MENU.getElementsByTagName( 'a' ),\n        SUBMENUS = MENU.getElementsByTagName( 'ul' );\n\n  if ( ! NAV || 'undefined' === typeof BUTTON ) {\n    return;\n  }\n\n  // Hide menu toggle button if menu is empty and return early.\n  if ( 'undefined' === typeof MENU ) {\n    BUTTON.style.display = 'none';\n    return;\n  }\n\n  MENU.setAttribute( 'aria-expanded', 'false' );\n  if ( -1 === MENU.className.indexOf( 'nav-menu' ) ) {\n    MENU.className += ' nav-menu';\n  }\n\n  BUTTON.onclick = function() {\n    if ( -1 !== NAV.className.indexOf( 'is-active' ) ) {\n      NAV.className = NAV.className.replace( ' is-active', '' );\n      BUTTON.setAttribute( 'aria-expanded', 'false' );\n      MENU.setAttribute( 'aria-expanded', 'false' );\n      MASTHEAD.removeAttribute('style');\n    } else {\n      NAV.className += ' is-active';\n      BUTTON.setAttribute( 'aria-expanded', 'true' );\n      MENU.setAttribute( 'aria-expanded', 'true' );\n      BODY.classList.add('dept-navigation-is-open');\n      MASTHEAD.style.zIndex = 'initial';\n    }\n  };\n\n  // Get all the link elements within the menu.\n  var i, len;\n\n  // Set menu items with submenus to aria-haspopup=\"true\".\n  for ( i = 0, len = SUBMENUS.length; i < len; i++ ) {\n    SUBMENUS[i].parentNode.setAttribute( 'aria-haspopup', 'true' );\n  }\n\n  // Each time a menu link is focused or blurred, toggle focus.\n  for ( i = 0, len = LINKS.length; i < len; i++ ) {\n    LINKS[i].addEventListener( 'focus', toggleFocus, true );\n    LINKS[i].addEventListener( 'blur', toggleFocus, true );\n  }\n\n  /**\n   * Sets or removes .focus class on an element.\n   */\n  function toggleFocus() {\n    var self = this;\n\n    // Move up through the ancestors of the current link until we hit .nav-menu.\n    while ( -1 === self.className.indexOf( 'nav-menu' ) ) {\n\n      // On li elements toggle the class .focus.\n      if ( 'li' === self.tagName.toLowerCase() ) {\n        if ( -1 !== self.className.indexOf( 'focus' ) ) {\n          self.className = self.className.replace( ' focus', '' );\n        } else {\n          self.className += ' focus';\n        }\n      }\n\n      self = self.parentElement;\n    }\n  }\n\n  /**\n   * Toggles `focus` class to allow submenu access on tablets.\n   */\n  ( function( NAV ) {\n    var touchStartFn, i,\n      parentLink = NAV.querySelectorAll( '.menu-item-has-children > a, .page_item_has_children > a' );\n\n    if ( 'ontouchstart' in window ) {\n      touchStartFn = function( e ) {\n        var menuItem = this.parentNode, i;\n\n        if ( ! menuItem.classList.contains( 'focus' ) ) {\n          e.preventDefault();\n          for ( i = 0; i < menuItem.parentNode.children.length; ++i ) {\n            if ( menuItem === menuItem.parentNode.children[i] ) {\n              continue;\n            }\n            menuItem.parentNode.children[i].classList.remove( 'focus' );\n          }\n          menuItem.classList.add( 'focus' );\n        } else {\n          menuItem.classList.remove( 'focus' );\n        }\n      };\n\n      for ( i = 0; i < parentLink.length; ++i ) {\n        parentLink[i].addEventListener( 'touchstart', touchStartFn, false );\n      }\n    }\n  }( NAV ) );\n} )();\n","/**\n * File skip-link-focus-fix.js.\n *\n * Helps with accessibility for keyboard only users.\n *\n * Learn more: https://git.io/vWdr2\n */\n( function() {\n\tvar isWebkit = navigator.userAgent.toLowerCase().indexOf( 'webkit' ) > -1,\n\t    isOpera  = navigator.userAgent.toLowerCase().indexOf( 'opera' )  > -1,\n\t    isIe     = navigator.userAgent.toLowerCase().indexOf( 'msie' )   > -1;\n\n\tif ( ( isWebkit || isOpera || isIe ) && document.getElementById && window.addEventListener ) {\n\t\twindow.addEventListener( 'hashchange', function() {\n\t\t\tvar id = location.hash.substring( 1 ),\n\t\t\t\telement;\n\n\t\t\tif ( ! ( /^[A-z0-9_-]+$/.test( id ) ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telement = document.getElementById( id );\n\n\t\t\tif ( element ) {\n\t\t\t\tif ( ! ( /^(?:a|select|input|button|textarea)$/i.test( element.tagName ) ) ) {\n\t\t\t\t\telement.tabIndex = -1;\n\t\t\t\t}\n\n\t\t\t\telement.focus();\n\t\t\t}\n\t\t}, false );\n\t}\n})();\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n\t// Use this variable to set up the common and page specific functions. If you\n\t// rename this variable, you will also need to rename the namespace below.\n\tvar Chamber = {\n\t\t// All pages\n\t\t'common': {\n\t\t\tinit: function() {\n\t\t\t\t// JavaScript to be fired on all pages\n\t\t\t\t\n\t\t\t\t// toggle the searchform in the global header\n\t\t\t\tif ($(\"#searchForm\").length > 0) {\n\t\t\t\t  new Foundation.Toggler($(\"#searchForm\"));\n\t\t\t\t}\n\n\t\t\t\t// toggle the phone number in the header on mobile\n\t\t\t\tif ($('#phoneNumber').length > 0 && $('.no-touchevents')) {\n\t\t\t\t\tnew Foundation.Toggler($(\"#phoneNumber\"));\n\t\t\t\t}\n\t\t\t},\n\t\t\tfinalize: function() {\n\t\t\t\t// JavaScript to be fired on all pages, after page specific JS is fired\n\t\t\t}\n\t\t},\n\t\t// Home page\n\t\t'home': {\n\t\t\tinit: function() {\n\t\t\t\t// JavaScript to be fired on the home page\n\t\t\t},\n\t\t\tfinalize: function() {\n\t\t\t\t// JavaScript to be fired on the home page, after the init JS\n\t\t\t}\n\t\t},\n\t\t// About us page, note the change from about-us to about_us.\n\t\t'about_us': {\n\t\t\tinit: function() {\n\t\t\t\t// JavaScript to be fired on the about us page\n\t\t\t}\n\t\t}\n\t};\n\n\t// The routing fires all common scripts, followed by the page specific scripts.\n\t// Add additional events for more control over timing e.g. a finalize event\n\tvar UTIL = {\n\t\tfire: function(func, funcname, args) {\n\t\t\tvar fire;\n\t\t\tvar namespace = Chamber;\n\t\t\tfuncname = (funcname === undefined) ? 'init' : funcname;\n\t\t\tfire = func !== '';\n\t\t\tfire = fire && namespace[func];\n\t\t\tfire = fire && typeof namespace[func][funcname] === 'function';\n\n\t\t\tif (fire) {\n\t\t\t\tnamespace[func][funcname](args);\n\t\t\t}\n\t\t},\n\t\tloadEvents: function() {\n\t\t\t// Fire common init JS\n\t\t\tUTIL.fire('common');\n\n\t\t\t// Fire page-specific init JS, and then finalize JS\n\t\t\t$.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n\t\t\t\tUTIL.fire(classnm);\n\t\t\t\tUTIL.fire(classnm, 'finalize');\n\t\t\t});\n\n\t\t\t// Fire common finalize JS\n\t\t\tUTIL.fire('common', 'finalize');\n\t\t}\n\t};\n\n\t// Load Events\n\t$(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"/source/"}