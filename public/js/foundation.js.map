{"version":3,"file":"foundation.js","sources":["resources/assets/js/foundation.js"],"sourcesContent":["!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.2.4';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function () {\n      return $('html').attr('dir') === 'rtl';\n    },\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function (plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(plugin);\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n      var attrName = hyphenate(className);\n\n      // Add to the Foundation object and the plugins list (for reflowing)\n      this._plugins[attrName] = this[className] = plugin;\n    },\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function (plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr('data-' + pluginName)) {\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\n      }\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\n       * Fires when the plugin has initialized.\n       * @event Plugin#init\n       */\n      plugin.$element.trigger('init.zf.' + pluginName);\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function (plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n      /**\n       * Fires when the plugin has been destroyed.\n       * @event Plugin#destroyed\n       */\n      .trigger('destroyed.zf.' + pluginName);\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n      return;\n    },\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function (plugins) {\n      var isJQ = plugins instanceof $;\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = typeof plugins,\n              _this = this,\n              fns = {\n            'object': function (plgs) {\n              plgs.forEach(function (p) {\n                p = hyphenate(p);\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function () {\n              plugins = hyphenate(plugins);\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function () {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function (length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n    },\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function (elem, plugins) {\n\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      }\n      // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this;\n\n      // Iterate through each plugin\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name];\n\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n        // For each plugin found, initialize it\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {};\n          // Don't double-dip on plugins\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function ($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function (func, delay) {\n      var timer = null;\n\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n  var foundation = function (method) {\n    var type = typeof method,\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function () {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function () {},\n          fBound = function () {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  // Default set of media queries\n  var defaultQueries = {\n    'default': 'only screen',\n    landscape: 'only screen and (orientation: landscape)',\n    portrait: 'only screen and (orientation: portrait)',\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\n  };\n\n  var MediaQuery = {\n    queries: [],\n\n    current: '',\n\n    /**\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n     * @function\n     * @private\n     */\n    _init: function () {\n      var self = this;\n      var extractedStyles = $('.foundation-mq').css('font-family');\n      var namedQueries;\n\n      namedQueries = parseStyleToObject(extractedStyles);\n\n      for (var key in namedQueries) {\n        if (namedQueries.hasOwnProperty(key)) {\n          self.queries.push({\n            name: key,\n            value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n          });\n        }\n      }\n\n      this.current = this._getCurrentSize();\n\n      this._watcher();\n    },\n\n\n    /**\n     * Checks if the screen is at least as wide as a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to check.\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n     */\n    atLeast: function (size) {\n      var query = this.get(size);\n\n      if (query) {\n        return window.matchMedia(query).matches;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Gets the media query of a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to get.\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n     */\n    get: function (size) {\n      for (var i in this.queries) {\n        if (this.queries.hasOwnProperty(i)) {\n          var query = this.queries[i];\n          if (size === query.name) return query.value;\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n     * @function\n     * @private\n     * @returns {String} Name of the current breakpoint.\n     */\n    _getCurrentSize: function () {\n      var matched;\n\n      for (var i = 0; i < this.queries.length; i++) {\n        var query = this.queries[i];\n\n        if (window.matchMedia(query.value).matches) {\n          matched = query;\n        }\n      }\n\n      if (typeof matched === 'object') {\n        return matched.name;\n      } else {\n        return matched;\n      }\n    },\n\n\n    /**\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n     * @function\n     * @private\n     */\n    _watcher: function () {\n      var _this = this;\n\n      $(window).on('resize.zf.mediaquery', function () {\n        var newSize = _this._getCurrentSize(),\n            currentSize = _this.current;\n\n        if (newSize !== currentSize) {\n          // Change the current media query\n          _this.current = newSize;\n\n          // Broadcast the media query change on the window\n          $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n        }\n      });\n    }\n  };\n\n  Foundation.MediaQuery = MediaQuery;\n\n  // matchMedia() polyfill - Test a CSS media type/query in JS.\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\n  window.matchMedia || (window.matchMedia = function () {\n    'use strict';\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n\n    var styleMedia = window.styleMedia || window.media;\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n      var style = document.createElement('style'),\n          script = document.getElementsByTagName('script')[0],\n          info = null;\n\n      style.type = 'text/css';\n      style.id = 'matchmediajs-test';\n\n      script && script.parentNode && script.parentNode.insertBefore(style, script);\n\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n      styleMedia = {\n        matchMedium: function (media) {\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n          if (style.styleSheet) {\n            style.styleSheet.cssText = text;\n          } else {\n            style.textContent = text;\n          }\n\n          // Test if media query is true or false\n          return info.width === '1px';\n        }\n      };\n    }\n\n    return function (media) {\n      return {\n        matches: styleMedia.matchMedium(media || 'all'),\n        media: media || 'all'\n      };\n    };\n  }());\n\n  // Thank you: https://github.com/sindresorhus/query-string\n  function parseStyleToObject(str) {\n    var styleObject = {};\n\n    if (typeof str !== 'string') {\n      return styleObject;\n    }\n\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n    if (!str) {\n      return styleObject;\n    }\n\n    styleObject = str.split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key);\n\n      // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n      return ret;\n    }, {});\n\n    return styleObject;\n  }\n\n  Foundation.MediaQuery = MediaQuery;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  Foundation.Box = {\n    ImNotTouchingYou: ImNotTouchingYou,\n    GetDimensions: GetDimensions,\n    GetOffsets: GetOffsets\n  };\n\n  /**\n   * Compares the dimensions of an element to a container and determines collision events with container.\n   * @function\n   * @param {jQuery} element - jQuery object to test for collisions.\n   * @param {jQuery} parent - jQuery object to use as bounding container.\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n   * @default if no parent object passed, detects collisions with `window`.\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\n   */\n  function ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n    var eleDims = GetDimensions(element),\n        top,\n        bottom,\n        left,\n        right;\n\n    if (parent) {\n      var parDims = GetDimensions(parent);\n\n      bottom = eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top;\n      top = eleDims.offset.top >= parDims.offset.top;\n      left = eleDims.offset.left >= parDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left;\n    } else {\n      bottom = eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top;\n      top = eleDims.offset.top >= eleDims.windowDims.offset.top;\n      left = eleDims.offset.left >= eleDims.windowDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= eleDims.windowDims.width;\n    }\n\n    var allDirs = [bottom, top, left, right];\n\n    if (lrOnly) {\n      return left === right === true;\n    }\n\n    if (tbOnly) {\n      return top === bottom === true;\n    }\n\n    return allDirs.indexOf(false) === -1;\n  };\n\n  /**\n   * Uses native methods to return an object of dimension values.\n   * @function\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n   * @returns {Object} - nested object of integer pixel values\n   * TODO - if element is window, return only those values.\n   */\n  function GetDimensions(elem, test) {\n    elem = elem.length ? elem[0] : elem;\n\n    if (elem === window || elem === document) {\n      throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n    }\n\n    var rect = elem.getBoundingClientRect(),\n        parRect = elem.parentNode.getBoundingClientRect(),\n        winRect = document.body.getBoundingClientRect(),\n        winY = window.pageYOffset,\n        winX = window.pageXOffset;\n\n    return {\n      width: rect.width,\n      height: rect.height,\n      offset: {\n        top: rect.top + winY,\n        left: rect.left + winX\n      },\n      parentDims: {\n        width: parRect.width,\n        height: parRect.height,\n        offset: {\n          top: parRect.top + winY,\n          left: parRect.left + winX\n        }\n      },\n      windowDims: {\n        width: winRect.width,\n        height: winRect.height,\n        offset: {\n          top: winY,\n          left: winX\n        }\n      }\n    };\n  }\n\n  /**\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\n   * such as: Tooltip, Reveal, and Dropdown\n   * @function\n   * @param {jQuery} element - jQuery object for the element being positioned.\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\n   */\n  function GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n    var $eleDims = GetDimensions(element),\n        $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n    switch (position) {\n      case 'top':\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'center top':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'center bottom':\n        return {\n          left: isOverflow ? hOffset : $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'center left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center':\n        return {\n          left: $eleDims.windowDims.offset.left + $eleDims.windowDims.width / 2 - $eleDims.width / 2,\n          top: $eleDims.windowDims.offset.top + $eleDims.windowDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'reveal':\n        return {\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n          top: $eleDims.windowDims.offset.top + vOffset\n        };\n      case 'reveal full':\n        return {\n          left: $eleDims.windowDims.offset.left,\n          top: $eleDims.windowDims.offset.top\n        };\n        break;\n      case 'left bottom':\n        return {\n          left: $anchorDims.offset.left,\n          top: $anchorDims.offset.top + $anchorDims.height\n        };\n        break;\n      case 'right bottom':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\n          top: $anchorDims.offset.top + $anchorDims.height\n        };\n        break;\n      default:\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left + hOffset,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n    }\n  }\n}(jQuery);\n/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n\n'use strict';\n\n!function ($) {\n\n  var keyCodes = {\n    9: 'TAB',\n    13: 'ENTER',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'ARROW_LEFT',\n    38: 'ARROW_UP',\n    39: 'ARROW_RIGHT',\n    40: 'ARROW_DOWN'\n  };\n\n  var commands = {};\n\n  var Keyboard = {\n    keys: getKeyCodes(keyCodes),\n\n    /**\n     * Parses the (keyboard) event and returns a String that represents its key\n     * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n     * @param {Event} event - the event generated by the event handler\n     * @return String key - String that represents the key pressed\n     */\n    parseKey: function (event) {\n      var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n      if (event.shiftKey) key = 'SHIFT_' + key;\n      if (event.ctrlKey) key = 'CTRL_' + key;\n      if (event.altKey) key = 'ALT_' + key;\n      return key;\n    },\n\n\n    /**\n     * Handles the given (keyboard) event\n     * @param {Event} event - the event generated by the event handler\n     * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n     * @param {Objects} functions - collection of functions that are to be executed\n     */\n    handleKey: function (event, component, functions) {\n      var commandList = commands[component],\n          keyCode = this.parseKey(event),\n          cmds,\n          command,\n          fn;\n\n      if (!commandList) return console.warn('Component not defined!');\n\n      if (typeof commandList.ltr === 'undefined') {\n        // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n      } else {\n        // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n        if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n      }\n      command = cmds[keyCode];\n\n      fn = functions[command];\n      if (fn && typeof fn === 'function') {\n        // execute function  if exists\n        var returnValue = fn.apply();\n        if (functions.handled || typeof functions.handled === 'function') {\n          // execute function when event was handled\n          functions.handled(returnValue);\n        }\n      } else {\n        if (functions.unhandled || typeof functions.unhandled === 'function') {\n          // execute function when event was not handled\n          functions.unhandled();\n        }\n      }\n    },\n\n\n    /**\n     * Finds all focusable elements within the given `$element`\n     * @param {jQuery} $element - jQuery object to search within\n     * @return {jQuery} $focusable - all focusable elements within `$element`\n     */\n    findFocusable: function ($element) {\n      return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function () {\n        if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) {\n          return false;\n        } //only have visible elements and those that have a tabindex greater or equal 0\n        return true;\n      });\n    },\n\n\n    /**\n     * Returns the component name name\n     * @param {Object} component - Foundation component, e.g. Slider or Reveal\n     * @return String componentName\n     */\n\n    register: function (componentName, cmds) {\n      commands[componentName] = cmds;\n    }\n  };\n\n  /*\n   * Constants for easier comparing.\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   */\n  function getKeyCodes(kcs) {\n    var k = {};\n    for (var kc in kcs) {\n      k[kcs[kc]] = kcs[kc];\n    }return k;\n  }\n\n  Foundation.Keyboard = Keyboard;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  /**\n   * Motion module.\n   * @module foundation.motion\n   */\n\n  var initClasses = ['mui-enter', 'mui-leave'];\n  var activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n  var Motion = {\n    animateIn: function (element, animation, cb) {\n      animate(true, element, animation, cb);\n    },\n\n    animateOut: function (element, animation, cb) {\n      animate(false, element, animation, cb);\n    }\n  };\n\n  function Move(duration, elem, fn) {\n    var anim,\n        prog,\n        start = null;\n    // console.log('called');\n\n    function move(ts) {\n      if (!start) start = window.performance.now();\n      // console.log(start, ts);\n      prog = ts - start;\n      fn.apply(elem);\n\n      if (prog < duration) {\n        anim = window.requestAnimationFrame(move, elem);\n      } else {\n        window.cancelAnimationFrame(anim);\n        elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      }\n    }\n    anim = window.requestAnimationFrame(move);\n  }\n\n  /**\n   * Animates an element in or out using a CSS transition class.\n   * @function\n   * @private\n   * @param {Boolean} isIn - Defines if the animation is in or out.\n   * @param {Object} element - jQuery or HTML object to animate.\n   * @param {String} animation - CSS class to use.\n   * @param {Function} cb - Callback to run when animation is finished.\n   */\n  function animate(isIn, element, animation, cb) {\n    element = $(element).eq(0);\n\n    if (!element.length) return;\n\n    var initClass = isIn ? initClasses[0] : initClasses[1];\n    var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n    // Set up the animation\n    reset();\n\n    element.addClass(animation).css('transition', 'none');\n\n    requestAnimationFrame(function () {\n      element.addClass(initClass);\n      if (isIn) element.show();\n    });\n\n    // Start the animation\n    requestAnimationFrame(function () {\n      element[0].offsetWidth;\n      element.css('transition', '').addClass(activeClass);\n    });\n\n    // Clean up the animation when it finishes\n    element.one(Foundation.transitionend(element), finish);\n\n    // Hides the element (for out animations), resets the element, and runs a callback\n    function finish() {\n      if (!isIn) element.hide();\n      reset();\n      if (cb) cb.apply(element);\n    }\n\n    // Resets transitions and removes motion-specific classes\n    function reset() {\n      element[0].style.transitionDuration = 0;\n      element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n    }\n  }\n\n  Foundation.Move = Move;\n  Foundation.Motion = Motion;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  var Nest = {\n    Feather: function (menu) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'zf';\n\n      menu.attr('role', 'menubar');\n\n      var items = menu.find('li').attr({ 'role': 'menuitem' }),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('a:first').attr('tabindex', 0);\n\n      items.each(function () {\n        var $item = $(this),\n            $sub = $item.children('ul');\n\n        if ($sub.length) {\n          $item.addClass(hasSubClass).attr({\n            'aria-haspopup': true,\n            'aria-expanded': false,\n            'aria-label': $item.children('a:first').text()\n          });\n\n          $sub.addClass('submenu ' + subMenuClass).attr({\n            'data-submenu': '',\n            'aria-hidden': true,\n            'role': 'menu'\n          });\n        }\n\n        if ($item.parent('[data-submenu]').length) {\n          $item.addClass('is-submenu-item ' + subItemClass);\n        }\n      });\n\n      return;\n    },\n    Burn: function (menu, type) {\n      var items = menu.find('li').removeAttr('tabindex'),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('>li, .menu, .menu > li').removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display', '');\n\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n      //           .removeAttr('data-submenu'));\n      // items.each(function(){\n      //   var $item = $(this),\n      //       $sub = $item.children('ul');\n      //   if($item.parent('[data-submenu]').length){\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\n      //   }\n      //   if($sub.length){\n      //     $item.removeClass('has-submenu');\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n      //   }\n      // });\n    }\n  };\n\n  Foundation.Nest = Nest;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false;\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true;\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  }\n\n  /**\n   * Runs a callback function when images are fully loaded.\n   * @param {Object} images - Image(s) to check if loaded.\n   * @param {Func} callback - Function to execute when image is fully loaded.\n   */\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      if (this.complete) {\n        singleImageLoaded();\n      } else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\n        singleImageLoaded();\n      } else {\n        $(this).one('load', function () {\n          singleImageLoaded();\n        });\n      }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);\n//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function ($) {\n\n\t$.spotSwipe = {\n\t\tversion: '1.0.0',\n\t\tenabled: 'ontouchstart' in document.documentElement,\n\t\tpreventDefault: false,\n\t\tmoveThreshold: 75,\n\t\ttimeThreshold: 200\n\t};\n\n\tvar startPosX,\n\t    startPosY,\n\t    startTime,\n\t    elapsedTime,\n\t    isMoving = false;\n\n\tfunction onTouchEnd() {\n\t\t//  alert(this);\n\t\tthis.removeEventListener('touchmove', onTouchMove);\n\t\tthis.removeEventListener('touchend', onTouchEnd);\n\t\tisMoving = false;\n\t}\n\n\tfunction onTouchMove(e) {\n\t\tif ($.spotSwipe.preventDefault) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tif (isMoving) {\n\t\t\tvar x = e.touches[0].pageX;\n\t\t\tvar y = e.touches[0].pageY;\n\t\t\tvar dx = startPosX - x;\n\t\t\tvar dy = startPosY - y;\n\t\t\tvar dir;\n\t\t\telapsedTime = new Date().getTime() - startTime;\n\t\t\tif (Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t\tdir = dx > 0 ? 'left' : 'right';\n\t\t\t}\n\t\t\t// else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t//   dir = dy > 0 ? 'down' : 'up';\n\t\t\t// }\n\t\t\tif (dir) {\n\t\t\t\te.preventDefault();\n\t\t\t\tonTouchEnd.call(this);\n\t\t\t\t$(this).trigger('swipe', dir).trigger('swipe' + dir);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onTouchStart(e) {\n\t\tif (e.touches.length == 1) {\n\t\t\tstartPosX = e.touches[0].pageX;\n\t\t\tstartPosY = e.touches[0].pageY;\n\t\t\tisMoving = true;\n\t\t\tstartTime = new Date().getTime();\n\t\t\tthis.addEventListener('touchmove', onTouchMove, false);\n\t\t\tthis.addEventListener('touchend', onTouchEnd, false);\n\t\t}\n\t}\n\n\tfunction init() {\n\t\tthis.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\n\t}\n\n\tfunction teardown() {\n\t\tthis.removeEventListener('touchstart', onTouchStart);\n\t}\n\n\t$.event.special.swipe = { setup: init };\n\n\t$.each(['left', 'up', 'down', 'right'], function () {\n\t\t$.event.special['swipe' + this] = { setup: function () {\n\t\t\t\t$(this).on('swipe', $.noop);\n\t\t\t} };\n\t});\n})(jQuery);\n/****************************************************\n * Method for adding psuedo drag events to elements *\n ***************************************************/\n!function ($) {\n\t$.fn.addTouch = function () {\n\t\tthis.each(function (i, el) {\n\t\t\t$(el).bind('touchstart touchmove touchend touchcancel', function () {\n\t\t\t\t//we pass the original event object because the jQuery event\n\t\t\t\t//object is normalized to w3c specs and does not provide the TouchList\n\t\t\t\thandleTouch(event);\n\t\t\t});\n\t\t});\n\n\t\tvar handleTouch = function (event) {\n\t\t\tvar touches = event.changedTouches,\n\t\t\t    first = touches[0],\n\t\t\t    eventTypes = {\n\t\t\t\ttouchstart: 'mousedown',\n\t\t\t\ttouchmove: 'mousemove',\n\t\t\t\ttouchend: 'mouseup'\n\t\t\t},\n\t\t\t    type = eventTypes[event.type],\n\t\t\t    simulatedEvent;\n\n\t\t\tif ('MouseEvent' in window && typeof window.MouseEvent === 'function') {\n\t\t\t\tsimulatedEvent = new window.MouseEvent(type, {\n\t\t\t\t\t'bubbles': true,\n\t\t\t\t\t'cancelable': true,\n\t\t\t\t\t'screenX': first.screenX,\n\t\t\t\t\t'screenY': first.screenY,\n\t\t\t\t\t'clientX': first.clientX,\n\t\t\t\t\t'clientY': first.clientY\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsimulatedEvent = document.createEvent('MouseEvent');\n\t\t\t\tsimulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0 /*left*/, null);\n\t\t\t}\n\t\t\tfirst.target.dispatchEvent(simulatedEvent);\n\t\t};\n\t};\n}(jQuery);\n\n//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n\n/* Removing the jQuery function ****\n************************************\n\n(function( $, window, undefined ) {\n\n\tvar $document = $( document ),\n\t\t// supportTouch = $.mobile.support.touch,\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\n\n\t// setup new event shortcuts\n\t$.each( ( \"touchstart touchmove touchend \" +\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\n\n\t\t$.fn[ name ] = function( fn ) {\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\n\t\t};\n\n\t\t// jQuery < 1.8\n\t\tif ( $.attrFn ) {\n\t\t\t$.attrFn[ name ] = true;\n\t\t}\n\t});\n\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\n\t\tvar originalType = event.type;\n\t\tevent.type = eventType;\n\t\tif ( bubble ) {\n\t\t\t$.event.trigger( event, undefined, obj );\n\t\t} else {\n\t\t\t$.event.dispatch.call( obj, event );\n\t\t}\n\t\tevent.type = originalType;\n\t}\n\n\t// also handles taphold\n\n\t// Also handles swipeleft, swiperight\n\t$.event.special.swipe = {\n\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\n\t\tscrollSupressionThreshold: 30,\n\n\t\t// More time than this, and it isn't a swipe.\n\t\tdurationThreshold: 1000,\n\n\t\t// Swipe horizontal displacement must be more than this.\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\t// Swipe vertical displacement must be less than this.\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\tgetLocation: function ( event ) {\n\t\t\tvar winPageX = window.pageXOffset,\n\t\t\t\twinPageY = window.pageYOffset,\n\t\t\t\tx = event.clientX,\n\t\t\t\ty = event.clientY;\n\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\n\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\n\t\t\t\tx = x - winPageX;\n\t\t\t\ty = y - winPageY;\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\n\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\n\t\t\t\tx = event.pageX - winPageX;\n\t\t\t\ty = event.pageY - winPageY;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\tstart: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\n\t\t\t\t\t\torigin: $( event.target )\n\t\t\t\t\t};\n\t\t},\n\n\t\tstop: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\n\t\t\t\t\t};\n\t\t},\n\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\n\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\n\t\t},\n\n\t\t// This serves as a flag to ensure that at most one swipe event event is\n\t\t// in work at any given time\n\t\teventInProgress: false,\n\n\t\tsetup: function() {\n\t\t\tvar events,\n\t\t\t\tthisObject = this,\n\t\t\t\t$this = $( thisObject ),\n\t\t\t\tcontext = {};\n\n\t\t\t// Retrieve the events data for this element and add the swipe context\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( !events ) {\n\t\t\t\tevents = { length: 0 };\n\t\t\t\t$.data( this, \"mobile-events\", events );\n\t\t\t}\n\t\t\tevents.length++;\n\t\t\tevents.swipe = context;\n\n\t\t\tcontext.start = function( event ) {\n\n\t\t\t\t// Bail if we're already working on a swipe event\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\n\n\t\t\t\tvar stop,\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\n\t\t\t\t\torigTarget = event.target,\n\t\t\t\t\temitted = false;\n\n\t\t\t\tcontext.move = function( event ) {\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\n\t\t\t\t\tif ( !emitted ) {\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\n\t\t\t\t\t\tif ( emitted ) {\n\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// prevent scrolling\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tcontext.stop = function() {\n\t\t\t\t\t\temitted = true;\n\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t\t\tcontext.move = null;\n\t\t\t\t};\n\n\t\t\t\t$document.on( touchMoveEvent, context.move )\n\t\t\t\t\t.one( touchStopEvent, context.stop );\n\t\t\t};\n\t\t\t$this.on( touchStartEvent, context.start );\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tvar events, context;\n\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( events ) {\n\t\t\t\tcontext = events.swipe;\n\t\t\t\tdelete events.swipe;\n\t\t\t\tevents.length--;\n\t\t\t\tif ( events.length === 0 ) {\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( context ) {\n\t\t\t\tif ( context.start ) {\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\n\t\t\t\t}\n\t\t\t\tif ( context.move ) {\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t}\n\t\t\t\tif ( context.stop ) {\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t$.each({\n\t\tswipeleft: \"swipe.left\",\n\t\tswiperight: \"swipe.right\"\n\t}, function( event, sourceEvent ) {\n\n\t\t$.event.special[ event ] = {\n\t\t\tsetup: function() {\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\t$( this ).unbind( sourceEvent );\n\t\t\t}\n\t\t};\n\t});\n})( jQuery, this );\n*/\n'use strict';\n\n!function ($) {\n\n  var MutationObserver = function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i = 0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }();\n\n  var triggers = function (el, type) {\n    el.data(type).split(' ').forEach(function (id) {\n      $('#' + id)[type === 'close' ? 'trigger' : 'triggerHandler'](type + '.zf.trigger', [el]);\n    });\n  };\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-open]', function () {\n    triggers($(this), 'open');\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function () {\n    var id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    } else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\n    triggers($(this), 'toggle');\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if (animation !== '') {\n      Foundation.Motion.animateOut($(this), animation, function () {\n        $(this).trigger('closed.zf');\n      });\n    } else {\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  $(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function () {\n    var id = $(this).data('toggle-focus');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  /**\n  * Fires once after all other scripts have loaded\n  * @function\n  * @private\n  */\n  $(window).on('load', function () {\n    checkListeners();\n  });\n\n  function checkListeners() {\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    closemeListener();\n  }\n\n  //******** only fires this function once on load, if there's something to watch ********\n  function closemeListener(pluginName) {\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if (pluginName) {\n      if (typeof pluginName === 'string') {\n        plugNames.push(pluginName);\n      } else if (typeof pluginName === 'object' && typeof pluginName[0] === 'string') {\n        plugNames.concat(pluginName);\n      } else {\n        console.error('Plugin names must be strings');\n      }\n    }\n    if (yetiBoxes.length) {\n      var listeners = plugNames.map(function (name) {\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function () {\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  }\n\n  function resizeListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-resize]');\n    if ($nodes.length) {\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10); //default time to emit resize event\n      });\n    }\n  }\n\n  function scrollListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-scroll]');\n    if ($nodes.length) {\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10); //default time to emit scroll event\n      });\n    }\n  }\n\n  function eventsListener() {\n    if (!MutationObserver) {\n      return false;\n    }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function (mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n      //trigger the event handler for the element depending on type\n      switch ($target.attr(\"data-events\")) {\n\n        case \"resize\":\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n          break;\n\n        case \"scroll\":\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n          break;\n\n        // case \"mutate\" :\n        // console.log('mutate', $target);\n        // $target.triggerHandler('mutate.zf.trigger');\n        //\n        // //make sure we don't get stuck in an infinite loop from sloppy codeing\n        // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n        //   domMutationObserver();\n        // }\n        // break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree: false, attributeFilter: [\"data-events\"] });\n      }\n    }\n  }\n\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Abide module.\n   * @module foundation.abide\n   */\n\n  var Abide = function () {\n    /**\n     * Creates a new instance of Abide.\n     * @class\n     * @fires Abide#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Abide(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Abide);\n\n      this.$element = element;\n      this.options = $.extend({}, Abide.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Abide');\n    }\n\n    /**\n     * Initializes the Abide plugin and calls functions to get Abide functioning on load.\n     * @private\n     */\n\n\n    _createClass(Abide, [{\n      key: '_init',\n      value: function _init() {\n        this.$inputs = this.$element.find('input, textarea, select');\n\n        this._events();\n      }\n\n      /**\n       * Initializes events for Abide.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        this.$element.off('.abide').on('reset.zf.abide', function () {\n          _this2.resetForm();\n        }).on('submit.zf.abide', function () {\n          return _this2.validateForm();\n        });\n\n        if (this.options.validateOn === 'fieldChange') {\n          this.$inputs.off('change.zf.abide').on('change.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.liveValidate) {\n          this.$inputs.off('input.zf.abide').on('input.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n      }\n\n      /**\n       * Calls necessary functions to update Abide upon DOM change\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this._init();\n      }\n\n      /**\n       * Checks whether or not a form element has the required attribute and if it's checked or not\n       * @param {Object} element - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'requiredCheck',\n      value: function requiredCheck($el) {\n        if (!$el.attr('required')) return true;\n\n        var isGood = true;\n\n        switch ($el[0].type) {\n          case 'checkbox':\n            isGood = $el[0].checked;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            var opt = $el.find('option:selected');\n            if (!opt.length || !opt.val()) isGood = false;\n            break;\n\n          default:\n            if (!$el.val() || !$el.val().length) isGood = false;\n        }\n\n        return isGood;\n      }\n\n      /**\n       * Based on $el, get the first element with selector in this order:\n       * 1. The element's direct sibling('s).\n       * 3. The element's parent's children.\n       *\n       * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\n       *\n       * @param {Object} $el - jQuery object to use as reference to find the form error selector.\n       * @returns {Object} jQuery object with the selector.\n       */\n\n    }, {\n      key: 'findFormError',\n      value: function findFormError($el) {\n        var $error = $el.siblings(this.options.formErrorSelector);\n\n        if (!$error.length) {\n          $error = $el.parent().find(this.options.formErrorSelector);\n        }\n\n        return $error;\n      }\n\n      /**\n       * Get the first element in this order:\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\n       * 3. The `.closest()` <label>\n       *\n       * @param {Object} $el - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'findLabel',\n      value: function findLabel($el) {\n        var id = $el[0].id;\n        var $label = this.$element.find('label[for=\"' + id + '\"]');\n\n        if (!$label.length) {\n          return $el.closest('label');\n        }\n\n        return $label;\n      }\n\n      /**\n       * Get the set of labels associated with a set of radio els in this order\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\n       * 3. The `.closest()` <label>\n       *\n       * @param {Object} $el - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'findRadioLabels',\n      value: function findRadioLabels($els) {\n        var _this3 = this;\n\n        var labels = $els.map(function (i, el) {\n          var id = el.id;\n          var $label = _this3.$element.find('label[for=\"' + id + '\"]');\n\n          if (!$label.length) {\n            $label = $(el).closest('label');\n          }\n          return $label[0];\n        });\n\n        return $(labels);\n      }\n\n      /**\n       * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\n       * @param {Object} $el - jQuery object to add the class to\n       */\n\n    }, {\n      key: 'addErrorClasses',\n      value: function addErrorClasses($el) {\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.addClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.addClass(this.options.formErrorClass);\n        }\n\n        $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\n      }\n\n      /**\n       * Remove CSS error classes etc from an entire radio button group\n       * @param {String} groupName - A string that specifies the name of a radio button group\n       *\n       */\n\n    }, {\n      key: 'removeRadioErrorClasses',\n      value: function removeRadioErrorClasses(groupName) {\n        var $els = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var $labels = this.findRadioLabels($els);\n        var $formErrors = this.findFormError($els);\n\n        if ($labels.length) {\n          $labels.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formErrors.length) {\n          $formErrors.removeClass(this.options.formErrorClass);\n        }\n\n        $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\n       * Removes CSS error class as specified by the Abide settings from the label, input, and the form\n       * @param {Object} $el - jQuery object to remove the class from\n       */\n\n    }, {\n      key: 'removeErrorClasses',\n      value: function removeErrorClasses($el) {\n        // radios need to clear all of the els\n        if ($el[0].type == 'radio') {\n          return this.removeRadioErrorClasses($el.attr('name'));\n        }\n\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.removeClass(this.options.formErrorClass);\n        }\n\n        $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\n       * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\n       * @fires Abide#invalid\n       * @fires Abide#valid\n       * @param {Object} element - jQuery object to validate, should be an HTML input\n       * @returns {Boolean} goodToGo - If the input is valid or not.\n       */\n\n    }, {\n      key: 'validateInput',\n      value: function validateInput($el) {\n        var clearRequire = this.requiredCheck($el),\n            validated = false,\n            customValidator = true,\n            validator = $el.attr('data-validator'),\n            equalTo = true;\n\n        // don't validate ignored inputs or hidden inputs\n        if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]')) {\n          return true;\n        }\n\n        switch ($el[0].type) {\n          case 'radio':\n            validated = this.validateRadio($el.attr('name'));\n            break;\n\n          case 'checkbox':\n            validated = clearRequire;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            validated = clearRequire;\n            break;\n\n          default:\n            validated = this.validateText($el);\n        }\n\n        if (validator) {\n          customValidator = this.matchValidation($el, validator, $el.attr('required'));\n        }\n\n        if ($el.attr('data-equalto')) {\n          equalTo = this.options.validators.equalTo($el);\n        }\n\n        var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\n        var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\n\n        this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\n\n        /**\n         * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\n         * Trigger includes the DOM element of the input.\n         * @event Abide#valid\n         * @event Abide#invalid\n         */\n        $el.trigger(message, [$el]);\n\n        return goodToGo;\n      }\n\n      /**\n       * Goes through a form and if there are any invalid inputs, it will display the form error element\n       * @returns {Boolean} noError - true if no errors were detected...\n       * @fires Abide#formvalid\n       * @fires Abide#forminvalid\n       */\n\n    }, {\n      key: 'validateForm',\n      value: function validateForm() {\n        var acc = [];\n        var _this = this;\n\n        this.$inputs.each(function () {\n          acc.push(_this.validateInput($(this)));\n        });\n\n        var noError = acc.indexOf(false) === -1;\n\n        this.$element.find('[data-abide-error]').css('display', noError ? 'none' : 'block');\n\n        /**\n         * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\n         * Trigger includes the element of the form.\n         * @event Abide#formvalid\n         * @event Abide#forminvalid\n         */\n        this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\n\n        return noError;\n      }\n\n      /**\n       * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\n       * @param {Object} $el - jQuery object to validate, should be a text input HTML element\n       * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\n       * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\n       */\n\n    }, {\n      key: 'validateText',\n      value: function validateText($el, pattern) {\n        // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\n        pattern = pattern || $el.attr('pattern') || $el.attr('type');\n        var inputText = $el.val();\n        var valid = false;\n\n        if (inputText.length) {\n          // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\n          if (this.options.patterns.hasOwnProperty(pattern)) {\n            valid = this.options.patterns[pattern].test(inputText);\n          }\n          // If the pattern name isn't also the type attribute of the field, then test it as a regexp\n          else if (pattern !== $el.attr('type')) {\n              valid = new RegExp(pattern).test(inputText);\n            } else {\n              valid = true;\n            }\n        }\n        // An empty field is valid if it's not required\n        else if (!$el.prop('required')) {\n            valid = true;\n          }\n\n        return valid;\n      }\n\n      /**\n       * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\n       * @param {String} groupName - A string that specifies the name of a radio button group\n       * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\n       */\n\n    }, {\n      key: 'validateRadio',\n      value: function validateRadio(groupName) {\n        // If at least one radio in the group has the `required` attribute, the group is considered required\n        // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\n        var $group = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var valid = false,\n            required = false;\n\n        // For the group to be required, at least one radio needs to be required\n        $group.each(function (i, e) {\n          if ($(e).attr('required')) {\n            required = true;\n          }\n        });\n        if (!required) valid = true;\n\n        if (!valid) {\n          // For the group to be valid, at least one radio needs to be checked\n          $group.each(function (i, e) {\n            if ($(e).prop('checked')) {\n              valid = true;\n            }\n          });\n        };\n\n        return valid;\n      }\n\n      /**\n       * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\n       * @param {Object} $el - jQuery input element.\n       * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\n       * @param {Boolean} required - self explanatory?\n       * @returns {Boolean} - true if validations passed.\n       */\n\n    }, {\n      key: 'matchValidation',\n      value: function matchValidation($el, validators, required) {\n        var _this4 = this;\n\n        required = required ? true : false;\n\n        var clear = validators.split(' ').map(function (v) {\n          return _this4.options.validators[v]($el, required, $el.parent());\n        });\n        return clear.indexOf(false) === -1;\n      }\n\n      /**\n       * Resets form inputs and styles\n       * @fires Abide#formreset\n       */\n\n    }, {\n      key: 'resetForm',\n      value: function resetForm() {\n        var $form = this.$element,\n            opts = this.options;\n\n        $('.' + opts.labelErrorClass, $form).not('small').removeClass(opts.labelErrorClass);\n        $('.' + opts.inputErrorClass, $form).not('small').removeClass(opts.inputErrorClass);\n        $(opts.formErrorSelector + '.' + opts.formErrorClass).removeClass(opts.formErrorClass);\n        $form.find('[data-abide-error]').css('display', 'none');\n        $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\n        $(':input:radio', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        /**\n         * Fires when the form has been reset.\n         * @event Abide#formreset\n         */\n        $form.trigger('formreset.zf.abide', [$form]);\n      }\n\n      /**\n       * Destroys an instance of Abide.\n       * Removes error styles and classes from elements, without resetting their values.\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var _this = this;\n        this.$element.off('.abide').find('[data-abide-error]').css('display', 'none');\n\n        this.$inputs.off('.abide').each(function () {\n          _this.removeErrorClasses($(this));\n        });\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Abide;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Abide.defaults = {\n    /**\n     * The default event to validate inputs. Checkboxes and radios validate immediately.\n     * Remove or change this value for manual validation.\n     * @option\n     * @example 'fieldChange'\n     */\n    validateOn: 'fieldChange',\n\n    /**\n     * Class to be applied to input labels on failed validation.\n     * @option\n     * @example 'is-invalid-label'\n     */\n    labelErrorClass: 'is-invalid-label',\n\n    /**\n     * Class to be applied to inputs on failed validation.\n     * @option\n     * @example 'is-invalid-input'\n     */\n    inputErrorClass: 'is-invalid-input',\n\n    /**\n     * Class selector to use to target Form Errors for show/hide.\n     * @option\n     * @example '.form-error'\n     */\n    formErrorSelector: '.form-error',\n\n    /**\n     * Class added to Form Errors on failed validation.\n     * @option\n     * @example 'is-visible'\n     */\n    formErrorClass: 'is-visible',\n\n    /**\n     * Set to true to validate text inputs on any value change.\n     * @option\n     * @example false\n     */\n    liveValidate: false,\n\n    patterns: {\n      alpha: /^[a-zA-Z]+$/,\n      alpha_numeric: /^[a-zA-Z0-9]+$/,\n      integer: /^[-+]?\\d+$/,\n      number: /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\n\n      // amex, visa, diners\n      card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n      cvv: /^([0-9]){3,4}$/,\n\n      // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n      email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\n\n      url: /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\n      // abc.de\n      domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\n\n      datetime: /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\n      // YYYY-MM-DD\n      date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\n      // HH:MM:SS\n      time: /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\n      dateISO: /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\n      // MM/DD/YYYY\n      month_day_year: /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\n      // DD/MM/YYYY\n      day_month_year: /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\n\n      // #FFF or #FFFFFF\n      color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n    },\n\n    /**\n     * Optional validation functions to be used. `equalTo` being the only default included function.\n     * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\n     * el : The jQuery element to validate.\n     * required : Boolean value of the required attribute be present or not.\n     * parent : The direct parent of the input.\n     * @option\n     */\n    validators: {\n      equalTo: function (el, required, parent) {\n        return $('#' + el.attr('data-equalto')).val() === el.val();\n      }\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(Abide, 'Abide');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveToggle module.\n   * @module foundation.responsiveToggle\n   * @requires foundation.util.mediaQuery\n   */\n\n  var ResponsiveToggle = function () {\n    /**\n     * Creates a new instance of Tab Bar.\n     * @class\n     * @fires ResponsiveToggle#init\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n\n    /**\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveToggle, [{\n      key: '_init',\n      value: function _init() {\n        var targetID = this.$element.data('responsive-toggle');\n        if (!targetID) {\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n        }\n\n        this.$targetMenu = $('#' + targetID);\n        this.$toggler = this.$element.find('[data-toggle]');\n\n        this._update();\n      }\n\n      /**\n       * Adds necessary event handlers for the tab bar to work.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this._updateMqHandler = this._update.bind(this);\n\n        $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n      }\n\n      /**\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        // Mobile\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$element.show();\n          this.$targetMenu.hide();\n        }\n\n        // Desktop\n        else {\n            this.$element.hide();\n            this.$targetMenu.show();\n          }\n      }\n\n      /**\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n       * @function\n       * @fires ResponsiveToggle#toggled\n       */\n\n    }, {\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$targetMenu.toggle(0);\n\n          /**\n           * Fires when the element attached to the tab bar toggles.\n           * @event ResponsiveToggle#toggled\n           */\n          this.$element.trigger('toggled.zf.responsiveToggle');\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.responsiveToggle');\n        this.$toggler.off('.zf.responsiveToggle');\n\n        $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n     * @option\n     * @example 'medium'\n     */\n    hideFor: 'medium'\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Reveal module.\n   * @module foundation.reveal\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.motion if using animations\n   */\n\n  var Reveal = function () {\n    /**\n     * Creates a new instance of Reveal.\n     * @class\n     * @param {jQuery} element - jQuery object to use for the modal.\n     * @param {Object} options - optional parameters.\n     */\n    function Reveal(element, options) {\n      _classCallCheck(this, Reveal);\n\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Reveal');\n      Foundation.Keyboard.register('Reveal', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\n     * @private\n     */\n\n\n    _createClass(Reveal, [{\n      key: '_init',\n      value: function _init() {\n        this.id = this.$element.attr('id');\n        this.isActive = false;\n        this.cached = { mq: Foundation.MediaQuery.current };\n        this.isMobile = mobileSniff();\n\n        this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': this.id,\n          'aria-haspopup': true,\n          'tabindex': 0\n        });\n\n        if (this.options.fullScreen || this.$element.hasClass('full')) {\n          this.options.fullScreen = true;\n          this.options.overlay = false;\n        }\n        if (this.options.overlay && !this.$overlay) {\n          this.$overlay = this._makeOverlay(this.id);\n        }\n\n        this.$element.attr({\n          'role': 'dialog',\n          'aria-hidden': true,\n          'data-yeti-box': this.id,\n          'data-resize': this.id\n        });\n\n        if (this.$overlay) {\n          this.$element.detach().appendTo(this.$overlay);\n        } else {\n          this.$element.detach().appendTo($('body'));\n          this.$element.addClass('without-overlay');\n        }\n        this._events();\n        if (this.options.deepLink && window.location.hash === '#' + this.id) {\n          $(window).one('load.zf.reveal', this.open.bind(this));\n        }\n      }\n\n      /**\n       * Creates an overlay div to display behind the modal.\n       * @private\n       */\n\n    }, {\n      key: '_makeOverlay',\n      value: function _makeOverlay(id) {\n        var $overlay = $('<div></div>').addClass('reveal-overlay').appendTo('body');\n        return $overlay;\n      }\n\n      /**\n       * Updates position of modal\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n       * @private\n       */\n\n    }, {\n      key: '_updatePosition',\n      value: function _updatePosition() {\n        var width = this.$element.outerWidth();\n        var outerWidth = $(window).width();\n        var height = this.$element.outerHeight();\n        var outerHeight = $(window).height();\n        var left, top;\n        if (this.options.hOffset === 'auto') {\n          left = parseInt((outerWidth - width) / 2, 10);\n        } else {\n          left = parseInt(this.options.hOffset, 10);\n        }\n        if (this.options.vOffset === 'auto') {\n          if (height > outerHeight) {\n            top = parseInt(Math.min(100, outerHeight / 10), 10);\n          } else {\n            top = parseInt((outerHeight - height) / 4, 10);\n          }\n        } else {\n          top = parseInt(this.options.vOffset, 10);\n        }\n        this.$element.css({ top: top + 'px' });\n        // only worry about left if we don't have an overlay or we havea  horizontal offset,\n        // otherwise we're perfectly in the middle\n        if (!this.$overlay || this.options.hOffset !== 'auto') {\n          this.$element.css({ left: left + 'px' });\n          this.$element.css({ margin: '0px' });\n        }\n      }\n\n      /**\n       * Adds event handlers for the modal.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        var _this = this;\n\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': function (event, $element) {\n            if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\n              // only close reveal when it's explicitly called\n              return _this2.close.apply(_this2);\n            }\n          },\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': function () {\n            _this._updatePosition();\n          }\n        });\n\n        if (this.$anchor.length) {\n          this.$anchor.on('keydown.zf.reveal', function (e) {\n            if (e.which === 13 || e.which === 32) {\n              e.stopPropagation();\n              e.preventDefault();\n              _this.open();\n            }\n          });\n        }\n\n        if (this.options.closeOnClick && this.options.overlay) {\n          this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n        if (this.options.deepLink) {\n          $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n        }\n      }\n\n      /**\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n       * @private\n       */\n\n    }, {\n      key: '_handleState',\n      value: function _handleState(e) {\n        if (window.location.hash === '#' + this.id && !this.isActive) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      /**\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n       * @function\n       * @fires Reveal#closeme\n       * @fires Reveal#open\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        var _this3 = this;\n\n        if (this.options.deepLink) {\n          var hash = '#' + this.id;\n\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.isActive = true;\n\n        // Make elements invisible, but remove display: none so we can get size and positioning\n        this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n        if (this.options.overlay) {\n          this.$overlay.css({ 'visibility': 'hidden' }).show();\n        }\n\n        this._updatePosition();\n\n        this.$element.hide().css({ 'visibility': '' });\n\n        if (this.$overlay) {\n          this.$overlay.css({ 'visibility': '' }).hide();\n          if (this.$element.hasClass('fast')) {\n            this.$overlay.addClass('fast');\n          } else if (this.$element.hasClass('slow')) {\n            this.$overlay.addClass('slow');\n          }\n        }\n\n        if (!this.options.multipleOpened) {\n          /**\n           * Fires immediately before the modal opens.\n           * Closes any other modals that are currently open\n           * @event Reveal#closeme\n           */\n          this.$element.trigger('closeme.zf.reveal', this.id);\n        }\n        // Motion UI method of reveal\n        if (this.options.animationIn) {\n          var _this;\n\n          (function () {\n            var afterAnimationFocus = function () {\n              _this.$element.attr({\n                'aria-hidden': false,\n                'tabindex': -1\n              }).focus();\n            };\n\n            _this = _this3;\n\n            if (_this3.options.overlay) {\n              Foundation.Motion.animateIn(_this3.$overlay, 'fade-in');\n            }\n            Foundation.Motion.animateIn(_this3.$element, _this3.options.animationIn, function () {\n              _this3.focusableElements = Foundation.Keyboard.findFocusable(_this3.$element);\n              afterAnimationFocus();\n            });\n          })();\n        }\n        // jQuery method of reveal\n        else {\n            if (this.options.overlay) {\n              this.$overlay.show(0);\n            }\n            this.$element.show(this.options.showDelay);\n          }\n\n        // handle accessibility\n        this.$element.attr({\n          'aria-hidden': false,\n          'tabindex': -1\n        }).focus();\n\n        /**\n         * Fires when the modal has successfully opened.\n         * @event Reveal#open\n         */\n        this.$element.trigger('open.zf.reveal');\n\n        if (this.isMobile) {\n          this.originalScrollPos = window.pageYOffset;\n          $('html, body').addClass('is-reveal-open');\n        } else {\n          $('body').addClass('is-reveal-open');\n        }\n\n        setTimeout(function () {\n          _this3._extraHandlers();\n        }, 0);\n      }\n\n      /**\n       * Adds extra event handlers for the body and window if necessary.\n       * @private\n       */\n\n    }, {\n      key: '_extraHandlers',\n      value: function _extraHandlers() {\n        var _this = this;\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n        if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n          $('body').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n\n        if (this.options.closeOnEsc) {\n          $(window).on('keydown.zf.reveal', function (e) {\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\n              close: function () {\n                if (_this.options.closeOnEsc) {\n                  _this.close();\n                  _this.$anchor.focus();\n                }\n              }\n            });\n          });\n        }\n\n        // lock focus within modal while tabbing\n        this.$element.on('keydown.zf.reveal', function (e) {\n          var $target = $(this);\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Reveal', {\n            tab_forward: function () {\n              _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                _this.focusableElements.eq(0).focus();\n                return true;\n              }\n              if (_this.focusableElements.length === 0) {\n                // no focusable elements inside the modal at all, prevent tabbing in general\n                return true;\n              }\n            },\n            tab_backward: function () {\n              _this.focusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                _this.focusableElements.eq(-1).focus();\n                return true;\n              }\n              if (_this.focusableElements.length === 0) {\n                // no focusable elements inside the modal at all, prevent tabbing in general\n                return true;\n              }\n            },\n            open: function () {\n              if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n                setTimeout(function () {\n                  // set focus back to anchor if close button has been activated\n                  _this.$anchor.focus();\n                }, 1);\n              } else if ($target.is(_this.focusableElements)) {\n                // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n                _this.open();\n              }\n            },\n            close: function () {\n              if (_this.options.closeOnEsc) {\n                _this.close();\n                _this.$anchor.focus();\n              }\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n            }\n          });\n        });\n      }\n\n      /**\n       * Closes the modal.\n       * @function\n       * @fires Reveal#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.isActive || !this.$element.is(':visible')) {\n          return false;\n        }\n        var _this = this;\n\n        // Motion UI method of hiding\n        if (this.options.animationOut) {\n          if (this.options.overlay) {\n            Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n          } else {\n            finishUp();\n          }\n\n          Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n        }\n        // jQuery method of hiding\n        else {\n            if (this.options.overlay) {\n              this.$overlay.hide(0, finishUp);\n            } else {\n              finishUp();\n            }\n\n            this.$element.hide(this.options.hideDelay);\n          }\n\n        // Conditionals to remove extra event listeners added on open\n        if (this.options.closeOnEsc) {\n          $(window).off('keydown.zf.reveal');\n        }\n\n        if (!this.options.overlay && this.options.closeOnClick) {\n          $('body').off('click.zf.reveal');\n        }\n\n        this.$element.off('keydown.zf.reveal');\n\n        function finishUp() {\n          if (_this.isMobile) {\n            $('html, body').removeClass('is-reveal-open');\n            if (_this.originalScrollPos) {\n              $('body').scrollTop(_this.originalScrollPos);\n              _this.originalScrollPos = null;\n            }\n          } else {\n            $('body').removeClass('is-reveal-open');\n          }\n\n          _this.$element.attr('aria-hidden', true);\n\n          /**\n          * Fires when the modal is done closing.\n          * @event Reveal#closed\n          */\n          _this.$element.trigger('closed.zf.reveal');\n        }\n\n        /**\n        * Resets the modal content\n        * This prevents a running video to keep going in the background\n        */\n        if (this.options.resetOnClose) {\n          this.$element.html(this.$element.html());\n        }\n\n        this.isActive = false;\n        if (_this.options.deepLink) {\n          if (window.history.replaceState) {\n            window.history.replaceState(\"\", document.title, window.location.pathname);\n          } else {\n            window.location.hash = '';\n          }\n        }\n      }\n\n      /**\n       * Toggles the open/closed state of a modal.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n    }, {\n      key: 'destroy',\n\n\n      /**\n       * Destroys an instance of a modal.\n       * @function\n       */\n      value: function destroy() {\n        if (this.options.overlay) {\n          this.$element.appendTo($('body')); // move $element outside of $overlay to prevent error unregisterPlugin()\n          this.$overlay.hide().off().remove();\n        }\n        this.$element.hide().off();\n        this.$anchor.off('.zf');\n        $(window).off('.zf.reveal:' + this.id);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Reveal;\n  }();\n\n  Reveal.defaults = {\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-in-left'\n     */\n    animationIn: '',\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-out-right'\n     */\n    animationOut: '',\n    /**\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    showDelay: 0,\n    /**\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    hideDelay: 0,\n    /**\n     * Allows a click on the body/overlay to close the modal.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allows the modal to close if the user presses the `ESCAPE` key.\n     * @option\n     * @example true\n     */\n    closeOnEsc: true,\n    /**\n     * If true, allows multiple modals to be displayed at once.\n     * @option\n     * @example false\n     */\n    multipleOpened: false,\n    /**\n     * Distance, in pixels, the modal should push down from the top of the screen.\n     * @option\n     * @example auto\n     */\n    vOffset: 'auto',\n    /**\n     * Distance, in pixels, the modal should push in from the side of the screen.\n     * @option\n     * @example auto\n     */\n    hOffset: 'auto',\n    /**\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n     * @option\n     * @example false\n     */\n    fullScreen: false,\n    /**\n     * Percentage of screen height the modal should push up from the bottom of the view.\n     * @option\n     * @example 10\n     */\n    btmOffsetPct: 10,\n    /**\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n     * @option\n     * @example true\n     */\n    overlay: true,\n    /**\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n     * @option\n     * @example false\n     */\n    resetOnClose: false,\n    /**\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n     * @option\n     * @example false\n     */\n    deepLink: false\n  };\n\n  // Window exports\n  Foundation.plugin(Reveal, 'Reveal');\n\n  function iPhoneSniff() {\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n    );\n  }\n\n  function androidSniff() {\n    return (/Android/.test(window.navigator.userAgent)\n    );\n  }\n\n  function mobileSniff() {\n    return iPhoneSniff() || androidSniff();\n  }\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Toggler module.\n   * @module foundation.toggler\n   * @requires foundation.util.motion\n   * @requires foundation.util.triggers\n   */\n\n  var Toggler = function () {\n    /**\n     * Creates a new instance of Toggler.\n     * @class\n     * @fires Toggler#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Toggler(element, options) {\n      _classCallCheck(this, Toggler);\n\n      this.$element = element;\n      this.options = $.extend({}, Toggler.defaults, element.data(), options);\n      this.className = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Toggler');\n    }\n\n    /**\n     * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Toggler, [{\n      key: '_init',\n      value: function _init() {\n        var input;\n        // Parse animation classes if they were set\n        if (this.options.animate) {\n          input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n        // Otherwise, parse toggle class\n        else {\n            input = this.$element.data('toggler');\n            // Allow for a . at the beginning of the string\n            this.className = input[0] === '.' ? input.slice(1) : input;\n          }\n\n        // Add ARIA attributes to triggers\n        var id = this.$element[0].id;\n        $('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-controls', id);\n        // If the target is hidden, add aria-hidden\n        this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n      }\n\n      /**\n       * Initializes events for the toggle trigger.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n      }\n\n      /**\n       * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n       * @function\n       * @fires Toggler#on\n       * @fires Toggler#off\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        this[this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n      }\n    }, {\n      key: '_toggleClass',\n      value: function _toggleClass() {\n        this.$element.toggleClass(this.className);\n\n        var isOn = this.$element.hasClass(this.className);\n        if (isOn) {\n          /**\n           * Fires if the target element has the class after a toggle.\n           * @event Toggler#on\n           */\n          this.$element.trigger('on.zf.toggler');\n        } else {\n          /**\n           * Fires if the target element does not have the class after a toggle.\n           * @event Toggler#off\n           */\n          this.$element.trigger('off.zf.toggler');\n        }\n\n        this._updateARIA(isOn);\n      }\n    }, {\n      key: '_toggleAnimate',\n      value: function _toggleAnimate() {\n        var _this = this;\n\n        if (this.$element.is(':hidden')) {\n          Foundation.Motion.animateIn(this.$element, this.animationIn, function () {\n            _this._updateARIA(true);\n            this.trigger('on.zf.toggler');\n          });\n        } else {\n          Foundation.Motion.animateOut(this.$element, this.animationOut, function () {\n            _this._updateARIA(false);\n            this.trigger('off.zf.toggler');\n          });\n        }\n      }\n    }, {\n      key: '_updateARIA',\n      value: function _updateARIA(isOn) {\n        this.$element.attr('aria-expanded', isOn ? true : false);\n      }\n\n      /**\n       * Destroys the instance of Toggler on the element.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.toggler');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Toggler;\n  }();\n\n  Toggler.defaults = {\n    /**\n     * Tells the plugin if the element should animated when toggled.\n     * @option\n     * @example false\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(Toggler, 'Toggler');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tooltip module.\n   * @module foundation.tooltip\n   * @requires foundation.util.box\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.triggers\n   */\n\n  var Tooltip = function () {\n    /**\n     * Creates a new instance of a Tooltip.\n     * @class\n     * @fires Tooltip#init\n     * @param {jQuery} element - jQuery object to attach a tooltip to.\n     * @param {Object} options - object to extend the default configuration.\n     */\n    function Tooltip(element, options) {\n      _classCallCheck(this, Tooltip);\n\n      this.$element = element;\n      this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n      this.isActive = false;\n      this.isClick = false;\n      this._init();\n\n      Foundation.registerPlugin(this, 'Tooltip');\n    }\n\n    /**\n     * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n     * @private\n     */\n\n\n    _createClass(Tooltip, [{\n      key: '_init',\n      value: function _init() {\n        var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n        this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\n        this.options.tipText = this.options.tipText || this.$element.attr('title');\n        this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n        this.template.appendTo(document.body).text(this.options.tipText).hide();\n\n        this.$element.attr({\n          'title': '',\n          'aria-describedby': elemId,\n          'data-yeti-box': elemId,\n          'data-toggle': elemId,\n          'data-resize': elemId\n        }).addClass(this.options.triggerClass);\n\n        //helper variables to track movement on collisions\n        this.usedPositions = [];\n        this.counter = 4;\n        this.classChanged = false;\n\n        this._events();\n      }\n\n      /**\n       * Grabs the current positioning class, if present, and returns the value or an empty string.\n       * @private\n       */\n\n    }, {\n      key: '_getPositionClass',\n      value: function _getPositionClass(element) {\n        if (!element) {\n          return '';\n        }\n        // var position = element.attr('class').match(/top|left|right/g);\n        var position = element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n        return position;\n      }\n    }, {\n      key: '_buildTemplate',\n\n      /**\n       * builds the tooltip element, adds attributes, and returns the template.\n       * @private\n       */\n      value: function _buildTemplate(id) {\n        var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass + ' ' + this.options.templateClasses).trim();\n        var $template = $('<div></div>').addClass(templateClasses).attr({\n          'role': 'tooltip',\n          'aria-hidden': true,\n          'data-is-active': false,\n          'data-is-focus': false,\n          'id': id\n        });\n        return $template;\n      }\n\n      /**\n       * Function that gets called if a collision event is detected.\n       * @param {String} position - positioning class to try\n       * @private\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.template.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.template.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.template.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.template.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.template.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n       * if the tooltip is larger than the screen width, default to full width - any user selected margin\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        var position = this._getPositionClass(this.template),\n            $tipDims = Foundation.Box.GetDimensions(this.template),\n            $anchorDims = Foundation.Box.GetDimensions(this.$element),\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset,\n            _this = this;\n\n        if ($tipDims.width >= $tipDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.template)) {\n          this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $anchorDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          return false;\n        }\n\n        this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * reveals the tooltip, and fires an event to close any other open tooltips on the page\n       * @fires Tooltip#closeme\n       * @fires Tooltip#show\n       * @function\n       */\n\n    }, {\n      key: 'show',\n      value: function show() {\n        if (this.options.showOn !== 'all' && !Foundation.MediaQuery.atLeast(this.options.showOn)) {\n          // console.error('The screen is too small to display this tooltip');\n          return false;\n        }\n\n        var _this = this;\n        this.template.css('visibility', 'hidden').show();\n        this._setPosition();\n\n        /**\n         * Fires to close all other open tooltips on the page\n         * @event Closeme#tooltip\n         */\n        this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n        this.template.attr({\n          'data-is-active': true,\n          'aria-hidden': false\n        });\n        _this.isActive = true;\n        // console.log(this.template);\n        this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {\n          //maybe do stuff?\n        });\n        /**\n         * Fires when the tooltip is shown\n         * @event Tooltip#show\n         */\n        this.$element.trigger('show.zf.tooltip');\n      }\n\n      /**\n       * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n       * @fires Tooltip#hide\n       * @function\n       */\n\n    }, {\n      key: 'hide',\n      value: function hide() {\n        // console.log('hiding', this.$element.data('yeti-box'));\n        var _this = this;\n        this.template.stop().attr({\n          'aria-hidden': true,\n          'data-is-active': false\n        }).fadeOut(this.options.fadeOutDuration, function () {\n          _this.isActive = false;\n          _this.isClick = false;\n          if (_this.classChanged) {\n            _this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);\n\n            _this.usedPositions = [];\n            _this.counter = 4;\n            _this.classChanged = false;\n          }\n        });\n        /**\n         * fires when the tooltip is hidden\n         * @event Tooltip#hide\n         */\n        this.$element.trigger('hide.zf.tooltip');\n      }\n\n      /**\n       * adds event listeners for the tooltip and its anchor\n       * TODO combine some of the listeners like focus and mouseenter, etc.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        var $template = this.template;\n        var isFocus = false;\n\n        if (!this.options.disableHover) {\n\n          this.$element.on('mouseenter.zf.tooltip', function (e) {\n            if (!_this.isActive) {\n              _this.timeout = setTimeout(function () {\n                _this.show();\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.tooltip', function (e) {\n            clearTimeout(_this.timeout);\n            if (!isFocus || _this.isClick && !_this.options.clickOpen) {\n              _this.hide();\n            }\n          });\n        }\n\n        if (this.options.clickOpen) {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            if (_this.isClick) {\n              //_this.hide();\n              // _this.isClick = false;\n            } else {\n              _this.isClick = true;\n              if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n                _this.show();\n              }\n            }\n          });\n        } else {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            _this.isClick = true;\n          });\n        }\n\n        if (!this.options.disableForTouch) {\n          this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\n            _this.isActive ? _this.hide() : _this.show();\n          });\n        }\n\n        this.$element.on({\n          // 'toggle.zf.trigger': this.toggle.bind(this),\n          // 'close.zf.trigger': this.hide.bind(this)\n          'close.zf.trigger': this.hide.bind(this)\n        });\n\n        this.$element.on('focus.zf.tooltip', function (e) {\n          isFocus = true;\n          if (_this.isClick) {\n            // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\n            // a real focus, otherwise on hover and come back we get bad behavior\n            if (!_this.options.clickOpen) {\n              isFocus = false;\n            }\n            return false;\n          } else {\n            _this.show();\n          }\n        }).on('focusout.zf.tooltip', function (e) {\n          isFocus = false;\n          _this.isClick = false;\n          _this.hide();\n        }).on('resizeme.zf.trigger', function () {\n          if (_this.isActive) {\n            _this._setPosition();\n          }\n        });\n      }\n\n      /**\n       * adds a toggle method, in addition to the static show() & hide() functions\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n\n      /**\n       * Destroys an instance of tooltip, removes template element from the view.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tootip')\n        //  .removeClass('has-tip')\n        .removeAttr('aria-describedby').removeAttr('data-yeti-box').removeAttr('data-toggle').removeAttr('data-resize');\n\n        this.template.remove();\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tooltip;\n  }();\n\n  Tooltip.defaults = {\n    disableForTouch: false,\n    /**\n     * Time, in ms, before a tooltip should open on hover.\n     * @option\n     * @example 200\n     */\n    hoverDelay: 200,\n    /**\n     * Time, in ms, a tooltip should take to fade into view.\n     * @option\n     * @example 150\n     */\n    fadeInDuration: 150,\n    /**\n     * Time, in ms, a tooltip should take to fade out of view.\n     * @option\n     * @example 150\n     */\n    fadeOutDuration: 150,\n    /**\n     * Disables hover events from opening the tooltip if set to true\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Optional addtional classes to apply to the tooltip template on init.\n     * @option\n     * @example 'my-cool-tip-class'\n     */\n    templateClasses: '',\n    /**\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n     * @option\n     * @example 'tooltip'\n     */\n    tooltipClass: 'tooltip',\n    /**\n     * Class applied to the tooltip anchor element.\n     * @option\n     * @example 'has-tip'\n     */\n    triggerClass: 'has-tip',\n    /**\n     * Minimum breakpoint size at which to open the tooltip.\n     * @option\n     * @example 'small'\n     */\n    showOn: 'small',\n    /**\n     * Custom template to be used to generate markup for tooltip.\n     * @option\n     * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\n     */\n    template: '',\n    /**\n     * Text displayed in the tooltip template on open.\n     * @option\n     * @example 'Some cool space fact here.'\n     */\n    tipText: '',\n    touchCloseText: 'Tap to close.',\n    /**\n     * Allows the tooltip to remain open if triggered with a click or touch event.\n     * @option\n     * @example true\n     */\n    clickOpen: true,\n    /**\n     * Additional positioning classes, set by the JS\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\n     * @option\n     * @example 10\n     */\n    vOffset: 10,\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n     * @option\n     * @example 12\n     */\n    hOffset: 12\n  };\n\n  /**\n   * TODO utilize resize event trigger\n   */\n\n  // Window exports\n  Foundation.plugin(Tooltip, 'Tooltip');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Dropdown module.\n   * @module foundation.dropdown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Dropdown = function () {\n    /**\n     * Creates a new instance of a dropdown.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a dropdown.\n     *        Object should be of the dropdown panel, rather than its anchor.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Dropdown(element, options) {\n      _classCallCheck(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Dropdown, [{\n      key: '_init',\n      value: function _init() {\n        var $id = this.$element.attr('id');\n\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]').length ? $('[data-toggle=\"' + $id + '\"]') : $('[data-open=\"' + $id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': $id,\n          'data-is-focus': false,\n          'data-yeti-box': $id,\n          'aria-haspopup': true,\n          'aria-expanded': false\n\n        });\n\n        this.options.positionClass = this.getPositionClass();\n        this.counter = 4;\n        this.usedPositions = [];\n        this.$element.attr({\n          'aria-hidden': 'true',\n          'data-yeti-box': $id,\n          'data-resize': $id,\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n        });\n        this._events();\n      }\n\n      /**\n       * Helper function to determine current orientation of dropdown pane.\n       * @function\n       * @returns {String} position - string value of a position class.\n       */\n\n    }, {\n      key: 'getPositionClass',\n      value: function getPositionClass() {\n        var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n        var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n        var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n\n        return position;\n      }\n\n      /**\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n       * @function\n       * @private\n       * @param {String} position - position class to remove.\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.$element.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.$element.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.$element.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.$element.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.$element.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\n       * Recursively calls itself if a collision is detected, with a new position class.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        if (this.$anchor.attr('aria-expanded') === 'false') {\n          return false;\n        }\n        var position = this.getPositionClass(),\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n            _this = this,\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element)) {\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $eleDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          this.classChanged = true;\n          return false;\n        }\n\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.$element, false, true) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * Adds event listeners to the element utilizing the triggers utility library.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': this._setPosition.bind(this)\n        });\n\n        if (this.options.hover) {\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            if ($('body[data-whatinput=\"mouse\"]').is('*')) {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.open();\n                _this.$anchor.data('hover', true);\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n          if (this.options.hoverPane) {\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n          }\n        }\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n          var $target = $(this),\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\n            tab_forward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(0).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            tab_backward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(-1).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            open: function () {\n              if ($target.is(_this.$anchor)) {\n                _this.open();\n                _this.$element.attr('tabindex', -1).focus();\n                e.preventDefault();\n              }\n            },\n            close: function () {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          });\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body).not(this.$element),\n            _this = this;\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n            return;\n          }\n          if (_this.$element.find(e.target).length) {\n            return;\n          }\n          _this.close();\n          $body.off('click.zf.dropdown');\n        });\n      }\n\n      /**\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n       * @function\n       * @fires Dropdown#closeme\n       * @fires Dropdown#show\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        // var _this = this;\n        /**\n         * Fires to close other open dropdowns\n         * @event Dropdown#closeme\n         */\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n        // this.$element/*.show()*/;\n        this._setPosition();\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n        if (this.options.autoFocus) {\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n          if ($focusable.length) {\n            $focusable.eq(0).focus();\n          }\n        }\n\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n\n        /**\n         * Fires once the dropdown is visible.\n         * @event Dropdown#show\n         */\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Closes the open dropdown pane.\n       * @function\n       * @fires Dropdown#hide\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.$element.hasClass('is-open')) {\n          return false;\n        }\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n        if (this.classChanged) {\n          var curPositionClass = this.getPositionClass();\n          if (curPositionClass) {\n            this.$element.removeClass(curPositionClass);\n          }\n          this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({ height: '', width: '' });\n          this.classChanged = false;\n          this.counter = 4;\n          this.usedPositions.length = 0;\n        }\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Toggles the dropdown pane's visibility.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.$element.hasClass('is-open')) {\n          if (this.$anchor.data('hover')) return;\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n\n      /**\n       * Destroys the dropdown.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger').hide();\n        this.$anchor.off('.zf.dropdown');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 250\n     */\n    hoverDelay: 250,\n    /**\n     * Allow submenus to open on hover events\n     * @option\n     * @example false\n     */\n    hover: false,\n    /**\n     * Don't close dropdown when hovering over dropdown pane\n     * @option\n     * @example true\n     */\n    hoverPane: false,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    vOffset: 1,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    hOffset: 1,\n    /**\n     * Class applied to adjust open position. JS will test and fill this in.\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n     * @option\n     * @example false\n     */\n    trapFocus: false,\n    /**\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n     * @option\n     * @example true\n     */\n    autoFocus: false,\n    /**\n     * Allows a click on the body to close the dropdown.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);\n//# sourceMappingURL=foundation.js.map\n"],"names":["this"],"mappings":";;;AAAA,CAAC,UAAU,CAAC,EAAE;;EAEZ,YAAY,CAAC;;EAEb,IAAI,kBAAkB,GAAG,OAAO,CAAC;;;;EAIjC,IAAI,UAAU,GAAG;IACf,OAAO,EAAE,kBAAkB;;;;;IAK3B,QAAQ,EAAE,EAAE;;;;;IAKZ,MAAM,EAAE,EAAE;;;;;IAKV,GAAG,EAAE,YAAY;MACf,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;KACxC;;;;;IAKD,MAAM,EAAE,UAAU,MAAM,EAAE,IAAI,EAAE;;;MAG9B,IAAI,SAAS,GAAG,IAAI,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;;;MAG7C,IAAI,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;;;MAGpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;KACpD;;;;;;;;;;IAUD,cAAc,EAAE,UAAU,MAAM,EAAE,IAAI,EAAE;MACtC,IAAI,UAAU,GAAG,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC;MACzF,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;;MAE9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE;QAC/C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;OACzD;MACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;QACrC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;OAC1C;;;;;MAKD,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;;MAEjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;MAE9B,OAAO;KACR;;;;;;;;;IASD,gBAAgB,EAAE,UAAU,MAAM,EAAE;MAClC,IAAI,UAAU,GAAG,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;;MAEvF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;MACxD,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC;;;;;OAKtE,OAAO,CAAC,eAAe,GAAG,UAAU,CAAC,CAAC;MACvC,KAAK,IAAI,IAAI,IAAI,MAAM,EAAE;QACvB,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;OACrB;MACD,OAAO;KACR;;;;;;;;IAQD,MAAM,EAAE,UAAU,OAAO,EAAE;MACzB,IAAI,IAAI,GAAG,OAAO,YAAY,CAAC,CAAC;MAChC,IAAI;QACF,IAAI,IAAI,EAAE;UACR,OAAO,CAAC,IAAI,CAAC,YAAY;YACvB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;WAClC,CAAC,CAAC;SACJ,MAAM;UACL,IAAI,IAAI,GAAG,OAAO,OAAO;cACrB,KAAK,GAAG,IAAI;cACZ,GAAG,GAAG;YACR,QAAQ,EAAE,UAAU,IAAI,EAAE;cACxB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gBACxB,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;eAC3C,CAAC,CAAC;aACJ;YACD,QAAQ,EAAE,YAAY;cACpB,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;cAC7B,CAAC,CAAC,QAAQ,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACjD;YACD,WAAW,EAAE,YAAY;cACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC7C;WACF,CAAC;UACF,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;SACpB;OACF,CAAC,OAAO,GAAG,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;OACpB,SAAS;QACR,OAAO,OAAO,CAAC;OAChB;KACF;;;;;;;;;;IAUD,WAAW,EAAE,UAAU,MAAM,EAAE,SAAS,EAAE;MACxC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;MACrB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;KAC/I;;;;;;IAMD,MAAM,EAAE,UAAU,IAAI,EAAE,OAAO,EAAE;;;MAG/B,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;QAClC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtC;;WAEI,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;UAClC,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;SACrB;;MAEH,IAAI,KAAK,GAAG,IAAI,CAAC;;;MAGjB,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,IAAI,EAAE;;QAEjC,IAAI,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;;QAGlC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;;;QAG/E,KAAK,CAAC,IAAI,CAAC,YAAY;UACrB,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;cACb,IAAI,GAAG,EAAE,CAAC;;UAEd,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACxB,OAAO,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,GAAG,sDAAsD,CAAC,CAAC;YACrG,OAAO;WACR;;UAED,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;YAC5B,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;cACtE,IAAI,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE;gBACvC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC;eAClB,CAAC,CAAC;cACH,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,EAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAA;aAC/C,CAAC,CAAC;WACJ;UACD,IAAI;YACF,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;WACjD,CAAC,OAAO,EAAE,EAAE;YACX,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;WACnB,SAAS;YACR,OAAO;WACR;SACF,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;IACD,SAAS,EAAE,YAAY;IACvB,aAAa,EAAE,UAAU,KAAK,EAAE;MAC9B,IAAI,WAAW,GAAG;QAChB,YAAY,EAAE,eAAe;QAC7B,kBAAkB,EAAE,qBAAqB;QACzC,eAAe,EAAE,eAAe;QAChC,aAAa,EAAE,gBAAgB;OAChC,CAAC;MACF,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;UACpC,GAAG,CAAC;;MAER,KAAK,IAAI,CAAC,IAAI,WAAW,EAAE;QACzB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;UACxC,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;SACtB;OACF;MACD,IAAI,GAAG,EAAE;QACP,OAAO,GAAG,CAAC;OACZ,MAAM;QACL,GAAG,GAAG,UAAU,CAAC,YAAY;UAC3B,KAAK,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;SAChD,EAAE,CAAC,CAAC,CAAC;QACN,OAAO,eAAe,CAAC;OACxB;KACF;GACF,CAAC;;EAEF,UAAU,CAAC,IAAI,GAAG;;;;;;;;IAQhB,QAAQ,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE;MAC/B,IAAI,KAAK,GAAG,IAAI,CAAC;;MAEjB,OAAO,YAAY;QACjB,IAAI,OAAO,GAAG,IAAI;YACd,IAAI,GAAG,SAAS,CAAC;;QAErB,IAAI,KAAK,KAAK,IAAI,EAAE;UAClB,KAAK,GAAG,UAAU,CAAC,YAAY;YAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAC1B,KAAK,GAAG,IAAI,CAAC;WACd,EAAE,KAAK,CAAC,CAAC;SACX;OACF,CAAC;KACH;GACF,CAAC;;;;;;;;EAQF,IAAI,UAAU,GAAG,UAAU,MAAM,EAAE;IACjC,IAAI,IAAI,GAAG,OAAO,MAAM;QACpB,KAAK,GAAG,CAAC,CAAC,oBAAoB,CAAC;QAC/B,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAExB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;MACjB,CAAC,CAAC,8BAA8B,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC3D;IACD,IAAI,KAAK,CAAC,MAAM,EAAE;MAChB,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KAC5B;;IAED,IAAI,IAAI,KAAK,WAAW,EAAE;;MAExB,UAAU,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;MAC9B,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACzB,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;;MAE5B,IAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;MACpD,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;MAEtC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,CAAC,MAAM,CAAC,KAAK,SAAS,EAAE;;QAE9D,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;;UAErB,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SAC1C,MAAM;UACL,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE;;YAEzB,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;WACvD,CAAC,CAAC;SACJ;OACF,MAAM;;QAEL,MAAM,IAAI,cAAc,CAAC,gBAAgB,GAAG,MAAM,GAAG,mCAAmC,GAAG,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,CAAC;OAC1J;KACF,MAAM;;MAEL,MAAM,IAAI,SAAS,CAAC,gBAAgB,GAAG,IAAI,GAAG,8FAA8F,CAAC,CAAC;KAC/I;IACD,OAAO,IAAI,CAAC;GACb,CAAC;;EAEF,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;EAC/B,CAAC,CAAC,EAAE,CAAC,UAAU,GAAG,UAAU,CAAC;;;EAG7B,CAAC,YAAY;IACX,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAA,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,YAAY;MAC1E,OAAO,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;KAC7B,CAAC,EAAA;;IAEF,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,CAAC,EAAE;MACxE,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;MACpB,MAAM,CAAC,qBAAqB,GAAG,MAAM,CAAC,EAAE,GAAG,uBAAuB,CAAC,CAAC;MACpE,MAAM,CAAC,oBAAoB,GAAG,MAAM,CAAC,EAAE,GAAG,sBAAsB,CAAC,IAAI,MAAM,CAAC,EAAE,GAAG,6BAA6B,CAAC,CAAC;KACjH;IACD,IAAI,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;MAC5H,IAAI,QAAQ,GAAG,CAAC,CAAC;MACjB,MAAM,CAAC,qBAAqB,GAAG,UAAU,QAAQ,EAAE;QACjD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACrB,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;QAC5C,OAAO,UAAU,CAAC,YAAY;UAC5B,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;SAC/B,EAAE,QAAQ,GAAG,GAAG,CAAC,CAAC;OACpB,CAAC;MACF,MAAM,CAAC,oBAAoB,GAAG,YAAY,CAAC;KAC5C;;;;IAID,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE;MAClD,MAAM,CAAC,WAAW,GAAG;QACnB,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;QACjB,GAAG,EAAE,YAAY;UACf,OAAO,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;SAChC;OACF,CAAC;KACH;GACF,CAAC,EAAE,CAAC;EACL,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE;IAC5B,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,KAAK,EAAE;MACzC,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;;;QAG9B,MAAM,IAAI,SAAS,CAAC,sEAAsE,CAAC,CAAC;OAC7F;;MAED,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;UAChD,OAAO,GAAG,IAAI;UACd,IAAI,GAAG,YAAY,EAAE;UACrB,MAAM,GAAG,YAAY;QACvB,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,YAAY,IAAI,GAAG,IAAI,GAAG,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;OAChH,CAAC;;MAEF,IAAI,IAAI,CAAC,SAAS,EAAE;;QAElB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;OACjC;MACD,MAAM,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;;MAE9B,OAAO,MAAM,CAAC;KACf,CAAC;GACH;;EAED,SAAS,YAAY,CAAC,EAAE,EAAE;IACxB,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,KAAK,SAAS,EAAE;MACzC,IAAI,aAAa,GAAG,wBAAwB,CAAC;MAC7C,IAAI,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;MAChD,OAAO,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;KAC/D,MAAM,IAAI,EAAE,CAAC,SAAS,KAAK,SAAS,EAAE;MACrC,OAAO,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;KAC5B,MAAM;MACL,OAAO,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC;KACtC;GACF;EACD,SAAS,UAAU,CAAC,GAAG,EAAE;IACvB,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAA,OAAO,IAAI,CAAC,EAAA,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAA,OAAO,KAAK,CAAC,EAAA,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAA,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,EAAA;IAC5H,OAAO,GAAG,CAAC;GACZ;;;EAGD,SAAS,SAAS,CAAC,GAAG,EAAE;IACtB,OAAO,GAAG,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;GAC9D;CACF,CAAC,MAAM,CAAC,CAAC;AACV,CAEC,UAAU,CAAC,EAAE;;;EAGZ,IAAI,cAAc,GAAG;IACnB,SAAS,EAAE,aAAa;IACxB,SAAS,EAAE,0CAA0C;IACrD,QAAQ,EAAE,yCAAyC;IACnD,MAAM,EAAE,sDAAsD,GAAG,mDAAmD,GAAG,mDAAmD,GAAG,8CAA8C,GAAG,2CAA2C,GAAG,yCAAyC;GACtT,CAAC;;EAEF,IAAI,UAAU,GAAG;IACf,OAAO,EAAE,EAAE;;IAEX,OAAO,EAAE,EAAE;;;;;;;IAOX,KAAK,EAAE,YAAY;MACjB,IAAI,IAAI,GAAG,IAAI,CAAC;MAChB,IAAI,eAAe,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;MAC7D,IAAI,YAAY,CAAC;;MAEjB,YAAY,GAAG,kBAAkB,CAAC,eAAe,CAAC,CAAC;;MAEnD,KAAK,IAAI,GAAG,IAAI,YAAY,EAAE;QAC5B,IAAI,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;UACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAChB,IAAI,EAAE,GAAG;YACT,KAAK,EAAE,8BAA8B,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,GAAG;WAChE,CAAC,CAAC;SACJ;OACF;;MAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;MAEtC,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;;;;;;;;;IASD,OAAO,EAAE,UAAU,IAAI,EAAE;MACvB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;MAE3B,IAAI,KAAK,EAAE;QACT,OAAO,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;OACzC;;MAED,OAAO,KAAK,CAAC;KACd;;;;;;;;;IASD,GAAG,EAAE,UAAU,IAAI,EAAE;;;MACnB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;QAC1B,IAAIA,MAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;UAClC,IAAI,KAAK,GAAGA,MAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;UAC5B,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE,EAAA,OAAO,KAAK,CAAC,KAAK,CAAC,EAAA;SAC7C;OACF;;MAED,OAAO,IAAI,CAAC;KACb;;;;;;;;;IASD,eAAe,EAAE,YAAY;;;MAC3B,IAAI,OAAO,CAAC;;MAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC5C,IAAI,KAAK,GAAGA,MAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;QAE5B,IAAI,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;UAC1C,OAAO,GAAG,KAAK,CAAC;SACjB;OACF;;MAED,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,OAAO,OAAO,CAAC,IAAI,CAAC;OACrB,MAAM;QACL,OAAO,OAAO,CAAC;OAChB;KACF;;;;;;;;IAQD,QAAQ,EAAE,YAAY;MACpB,IAAI,KAAK,GAAG,IAAI,CAAC;;MAEjB,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,sBAAsB,EAAE,YAAY;QAC/C,IAAI,OAAO,GAAG,KAAK,CAAC,eAAe,EAAE;YACjC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;;QAEhC,IAAI,OAAO,KAAK,WAAW,EAAE;;UAE3B,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;;;UAGxB,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;SACpE;OACF,CAAC,CAAC;KACJ;GACF,CAAC;;EAEF,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;;;;EAInC,MAAM,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,YAAY;IACpD,YAAY,CAAC;;;;IAIb,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,KAAK,CAAC;;;IAGnD,IAAI,CAAC,UAAU,EAAE;MACf,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;UACvC,MAAM,GAAG,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;UACnD,IAAI,GAAG,IAAI,CAAC;;MAEhB,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;MACxB,KAAK,CAAC,EAAE,GAAG,mBAAmB,CAAC;;MAE/B,MAAM,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;MAG7E,IAAI,GAAG,kBAAkB,IAAI,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC;;MAElG,UAAU,GAAG;QACX,WAAW,EAAE,UAAU,KAAK,EAAE;UAC5B,IAAI,IAAI,GAAG,SAAS,GAAG,KAAK,GAAG,wCAAwC,CAAC;;;UAGxE,IAAI,KAAK,CAAC,UAAU,EAAE;YACpB,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;WACjC,MAAM;YACL,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;WAC1B;;;UAGD,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC;SAC7B;OACF,CAAC;KACH;;IAED,OAAO,UAAU,KAAK,EAAE;MACtB,OAAO;QACL,OAAO,EAAE,UAAU,CAAC,WAAW,CAAC,KAAK,IAAI,KAAK,CAAC;QAC/C,KAAK,EAAE,KAAK,IAAI,KAAK;OACtB,CAAC;KACH,CAAC;GACH,EAAE,CAAC,CAAC;;;EAGL,SAAS,kBAAkB,CAAC,GAAG,EAAE;IAC/B,IAAI,WAAW,GAAG,EAAE,CAAC;;IAErB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;MAC3B,OAAO,WAAW,CAAC;KACpB;;IAED,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE9B,IAAI,CAAC,GAAG,EAAE;MACR,OAAO,WAAW,CAAC;KACpB;;IAED,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,KAAK,EAAE;MACxD,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;MACjD,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;MACnB,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;MACnB,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;;;;MAI9B,GAAG,GAAG,GAAG,KAAK,SAAS,GAAG,IAAI,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;;MAEzD,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QAC5B,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;OAChB,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;QAClC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;OACpB,MAAM;QACL,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;OAC5B;MACD,OAAO,GAAG,CAAC;KACZ,EAAE,EAAE,CAAC,CAAC;;IAEP,OAAO,WAAW,CAAC;GACpB;;EAED,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;CACpC,CAAC,MAAM,CAAC,CAAC;AACV,CAEC,UAAU,CAAC,EAAE;;EAEZ,UAAU,CAAC,GAAG,GAAG;IACf,gBAAgB,EAAE,gBAAgB;IAClC,aAAa,EAAE,aAAa;IAC5B,UAAU,EAAE,UAAU;GACvB,CAAC;;;;;;;;;;;;EAYF,SAAS,gBAAgB,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IACzD,IAAI,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;QAChC,GAAG;QACH,MAAM;QACN,IAAI;QACJ,KAAK,CAAC;;IAEV,IAAI,MAAM,EAAE;MACV,IAAI,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;;MAEpC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;MACpF,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;MAC/C,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;MAClD,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;KACpF,MAAM;MACL,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC;MAC1G,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC;MAC1D,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC;MAC7D,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC;KACzE;;IAED,IAAI,OAAO,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;IAEzC,IAAI,MAAM,EAAE;MACV,OAAO,IAAI,KAAK,KAAK,KAAK,IAAI,CAAC;KAChC;;IAED,IAAI,MAAM,EAAE;MACV,OAAO,GAAG,KAAK,MAAM,KAAK,IAAI,CAAC;KAChC;;IAED,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;GACtC;;;;;;;;;EASD,SAAS,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE;IACjC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;;IAEpC,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;MACxC,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;KACjE;;IAED,IAAI,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE;QACnC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,qBAAqB,EAAE;QACjD,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE;QAC/C,IAAI,GAAG,MAAM,CAAC,WAAW;QACzB,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC;;IAE9B,OAAO;MACL,KAAK,EAAE,IAAI,CAAC,KAAK;MACjB,MAAM,EAAE,IAAI,CAAC,MAAM;MACnB,MAAM,EAAE;QACN,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI;QACpB,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI;OACvB;MACD,UAAU,EAAE;QACV,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,MAAM,EAAE;UACN,GAAG,EAAE,OAAO,CAAC,GAAG,GAAG,IAAI;UACvB,IAAI,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI;SAC1B;OACF;MACD,UAAU,EAAE;QACV,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,MAAM,EAAE;UACN,GAAG,EAAE,IAAI;UACT,IAAI,EAAE,IAAI;SACX;OACF;KACF,CAAC;GACH;;;;;;;;;;;;;;EAcD,SAAS,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE;IAC3E,IAAI,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC;QACjC,WAAW,GAAG,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;;IAExD,QAAQ,QAAQ;MACd,KAAK,KAAK;QACR,OAAO;UACL,IAAI,EAAE,UAAU,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI;UAC/G,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;SAC1D,CAAC;QACF,MAAM;MACR,KAAK,MAAM;QACT,OAAO;UACL,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC;UAC1D,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG;SAC5B,CAAC;QACF,MAAM;MACR,KAAK,OAAO;QACV,OAAO;UACL,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,GAAG,OAAO;UAC3D,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG;SAC5B,CAAC;QACF,MAAM;MACR,KAAK,YAAY;QACf,OAAO;UACL,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC;UAC1E,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;SAC1D,CAAC;QACF,MAAM;MACR,KAAK,eAAe;QAClB,OAAO;UACL,IAAI,EAAE,UAAU,GAAG,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC;UACjG,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM,GAAG,OAAO;SAC3D,CAAC;QACF,MAAM;MACR,KAAK,aAAa;QAChB,OAAO;UACL,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC;UAC1D,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;SAC3E,CAAC;QACF,MAAM;MACR,KAAK,cAAc;QACjB,OAAO;UACL,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,GAAG,OAAO,GAAG,CAAC;UAC/D,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;SAC3E,CAAC;QACF,MAAM;MACR,KAAK,QAAQ;QACX,OAAO;UACL,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC;UAC1F,GAAG,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;SAC3F,CAAC;QACF,MAAM;MACR,KAAK,QAAQ;QACX,OAAO;UACL,IAAI,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;UACtD,GAAG,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,GAAG,OAAO;SAC9C,CAAC;MACJ,KAAK,aAAa;QAChB,OAAO;UACL,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI;UACrC,GAAG,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG;SACpC,CAAC;QACF,MAAM;MACR,KAAK,aAAa;QAChB,OAAO;UACL,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI;UAC7B,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM;SACjD,CAAC;QACF,MAAM;MACR,KAAK,cAAc;QACjB,OAAO;UACL,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,GAAG,OAAO,GAAG,QAAQ,CAAC,KAAK;UAC5E,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM;SACjD,CAAC;QACF,MAAM;MACR;QACE,OAAO;UACL,IAAI,EAAE,UAAU,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO;UACzH,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM,GAAG,OAAO;SAC3D,CAAC;KACL;GACF;CACF,CAAC,MAAM,CAAC,CAAC;CAWT,UAAU,CAAC,EAAE;;EAEZ,IAAI,QAAQ,GAAG;IACb,CAAC,EAAE,KAAK;IACR,EAAE,EAAE,OAAO;IACX,EAAE,EAAE,QAAQ;IACZ,EAAE,EAAE,OAAO;IACX,EAAE,EAAE,YAAY;IAChB,EAAE,EAAE,UAAU;IACd,EAAE,EAAE,aAAa;IACjB,EAAE,EAAE,YAAY;GACjB,CAAC;;EAEF,IAAI,QAAQ,GAAG,EAAE,CAAC;;EAElB,IAAI,QAAQ,GAAG;IACb,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC;;;;;;;;IAQ3B,QAAQ,EAAE,UAAU,KAAK,EAAE;MACzB,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;MACnG,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAA,GAAG,GAAG,QAAQ,GAAG,GAAG,CAAC,EAAA;MACzC,IAAI,KAAK,CAAC,OAAO,EAAE,EAAA,GAAG,GAAG,OAAO,GAAG,GAAG,CAAC,EAAA;MACvC,IAAI,KAAK,CAAC,MAAM,EAAE,EAAA,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC,EAAA;MACrC,OAAO,GAAG,CAAC;KACZ;;;;;;;;;IASD,SAAS,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE;MAChD,IAAI,WAAW,GAAG,QAAQ,CAAC,SAAS,CAAC;UACjC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;UAC9B,IAAI;UACJ,OAAO;UACP,EAAE,CAAC;;MAEP,IAAI,CAAC,WAAW,EAAE,EAAA,OAAO,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAA;;MAEhE,IAAI,OAAO,WAAW,CAAC,GAAG,KAAK,WAAW,EAAE;;QAE1C,IAAI,GAAG,WAAW,CAAC;OACpB,MAAM;;QAEL,IAAI,UAAU,CAAC,GAAG,EAAE,EAAE,EAAA,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,EAAA,KAAK,EAAA,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,EAAA;OACxI;MACD,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;;MAExB,EAAE,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;MACxB,IAAI,EAAE,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;;QAElC,IAAI,WAAW,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,SAAS,CAAC,OAAO,IAAI,OAAO,SAAS,CAAC,OAAO,KAAK,UAAU,EAAE;;UAEhE,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAChC;OACF,MAAM;QACL,IAAI,SAAS,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,SAAS,KAAK,UAAU,EAAE;;UAEpE,SAAS,CAAC,SAAS,EAAE,CAAC;SACvB;OACF;KACF;;;;;;;;IAQD,aAAa,EAAE,UAAU,QAAQ,EAAE;MACjC,OAAO,QAAQ,CAAC,IAAI,CAAC,8KAA8K,CAAC,CAAC,MAAM,CAAC,YAAY;QACtN,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;UAC3D,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;OACb,CAAC,CAAC;KACJ;;;;;;;;;IASD,QAAQ,EAAE,UAAU,aAAa,EAAE,IAAI,EAAE;MACvC,QAAQ,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;KAChC;GACF,CAAC;;;;;;EAMF,SAAS,WAAW,CAAC,GAAG,EAAE;IACxB,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,KAAK,IAAI,EAAE,IAAI,GAAG,EAAE;MAClB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;KACtB,OAAO,CAAC,CAAC;GACX;;EAED,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;CAChC,CAAC,MAAM,CAAC,CAAC;AACV,CAEC,UAAU,CAAC,EAAE;;;;;;;EAOZ,IAAI,WAAW,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;EAC7C,IAAI,aAAa,GAAG,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;;EAE7D,IAAI,MAAM,GAAG;IACX,SAAS,EAAE,UAAU,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE;MAC3C,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;KACvC;;IAED,UAAU,EAAE,UAAU,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE;MAC5C,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;KACxC;GACF,CAAC;;EAEF,SAAS,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE;IAChC,IAAI,IAAI;QACJ,IAAI;QACJ,KAAK,GAAG,IAAI,CAAC;;;IAGjB,SAAS,IAAI,CAAC,EAAE,EAAE;MAChB,IAAI,CAAC,KAAK,EAAE,EAAA,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,EAAA;;MAE7C,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;MAClB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;MAEf,IAAI,IAAI,GAAG,QAAQ,EAAE;QACnB,IAAI,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;OACjD,MAAM;QACL,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;OAC3F;KACF;IACD,IAAI,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;GAC3C;;;;;;;;;;;EAWD,SAAS,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE;IAC7C,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE3B,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAA,OAAO,EAAA;;IAE5B,IAAI,SAAS,GAAG,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IACvD,IAAI,WAAW,GAAG,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;;;IAG7D,KAAK,EAAE,CAAC;;IAER,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;;IAEtD,qBAAqB,CAAC,YAAY;MAChC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;MAC5B,IAAI,IAAI,EAAE,EAAA,OAAO,CAAC,IAAI,EAAE,CAAC,EAAA;KAC1B,CAAC,CAAC;;;IAGH,qBAAqB,CAAC,YAAY;MAChC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;MACvB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;KACrD,CAAC,CAAC;;;IAGH,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,CAAC;;;IAGvD,SAAS,MAAM,GAAG;MAChB,IAAI,CAAC,IAAI,EAAE,EAAA,OAAO,CAAC,IAAI,EAAE,CAAC,EAAA;MAC1B,KAAK,EAAE,CAAC;MACR,IAAI,EAAE,EAAE,EAAA,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAA;KAC3B;;;IAGD,SAAS,KAAK,GAAG;MACf,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,kBAAkB,GAAG,CAAC,CAAC;MACxC,OAAO,CAAC,WAAW,CAAC,SAAS,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,SAAS,CAAC,CAAC;KACtE;GACF;;EAED,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;EACvB,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;CAC5B,CAAC,MAAM,CAAC,CAAC;AACV,CAEC,UAAU,CAAC,EAAE;;EAEZ,IAAI,IAAI,GAAG;IACT,OAAO,EAAE,UAAU,IAAI,EAAE;MACvB,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;;MAEpF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;;MAE7B,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;UACpD,YAAY,GAAG,KAAK,GAAG,IAAI,GAAG,UAAU;UACxC,YAAY,GAAG,YAAY,GAAG,OAAO;UACrC,WAAW,GAAG,KAAK,GAAG,IAAI,GAAG,iBAAiB,CAAC;;MAEnD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;;MAEzC,KAAK,CAAC,IAAI,CAAC,YAAY;QACrB,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;YACf,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;QAEhC,IAAI,IAAI,CAAC,MAAM,EAAE;UACf,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;YAC/B,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,KAAK;YACtB,YAAY,EAAE,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE;WAC/C,CAAC,CAAC;;UAEH,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC,IAAI,CAAC;YAC5C,cAAc,EAAE,EAAE;YAClB,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,MAAM;WACf,CAAC,CAAC;SACJ;;QAED,IAAI,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE;UACzC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,GAAG,YAAY,CAAC,CAAC;SACnD;OACF,CAAC,CAAC;;MAEH,OAAO;KACR;IACD,IAAI,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE;MAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC;UAC9C,YAAY,GAAG,KAAK,GAAG,IAAI,GAAG,UAAU;UACxC,YAAY,GAAG,YAAY,GAAG,OAAO;UACrC,WAAW,GAAG,KAAK,GAAG,IAAI,GAAG,iBAAiB,CAAC;;MAEnD,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,WAAW,CAAC,YAAY,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,WAAW,GAAG,oCAAoC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;;;;;;;;;;;;;;;;KAgB7L;GACF,CAAC;;EAEF,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;CACxB,CAAC,MAAM,CAAC,CAAC;AACV,CAEC,UAAU,CAAC,EAAE;;EAEZ,SAAS,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;IAChC,IAAI,KAAK,GAAG,IAAI;QACZ,QAAQ,GAAG,OAAO,CAAC,QAAQ;;IAE/B,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO;QAC9C,MAAM,GAAG,CAAC,CAAC;QACX,KAAK;QACL,KAAK,CAAC;;IAEV,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;IAEtB,IAAI,CAAC,OAAO,GAAG,YAAY;MACzB,MAAM,GAAG,CAAC,CAAC,CAAC;MACZ,YAAY,CAAC,KAAK,CAAC,CAAC;MACpB,IAAI,CAAC,KAAK,EAAE,CAAC;KACd,CAAC;;IAEF,IAAI,CAAC,KAAK,GAAG,YAAY;MACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;MAEtB,YAAY,CAAC,KAAK,CAAC,CAAC;MACpB,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,QAAQ,GAAG,MAAM,CAAC;MACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;MAC3B,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACnB,KAAK,GAAG,UAAU,CAAC,YAAY;QAC7B,IAAI,OAAO,CAAC,QAAQ,EAAE;UACpB,KAAK,CAAC,OAAO,EAAE,CAAC;SACjB;QACD,IAAI,EAAE,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;UAClC,EAAE,EAAE,CAAC;SACN;OACF,EAAE,MAAM,CAAC,CAAC;MACX,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,SAAS,CAAC,CAAC;KAC5C,CAAC;;IAEF,IAAI,CAAC,KAAK,GAAG,YAAY;MACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;MAErB,YAAY,CAAC,KAAK,CAAC,CAAC;MACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;MAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MACrB,MAAM,GAAG,MAAM,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;MAChC,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,SAAS,CAAC,CAAC;KAC7C,CAAC;GACH;;;;;;;EAOD,SAAS,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE;IACxC,IAAI,IAAI,GAAG,IAAI;QACX,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC;;IAE7B,IAAI,QAAQ,KAAK,CAAC,EAAE;MAClB,QAAQ,EAAE,CAAC;KACZ;;IAED,MAAM,CAAC,IAAI,CAAC,YAAY;MACtB,IAAI,IAAI,CAAC,QAAQ,EAAE;QACjB,iBAAiB,EAAE,CAAC;OACrB,MAAM,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;QAC5E,iBAAiB,EAAE,CAAC;OACrB,MAAM;QACL,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY;UAC9B,iBAAiB,EAAE,CAAC;SACrB,CAAC,CAAC;OACJ;KACF,CAAC,CAAC;;IAEH,SAAS,iBAAiB,GAAG;MAC3B,QAAQ,EAAE,CAAC;MACX,IAAI,QAAQ,KAAK,CAAC,EAAE;QAClB,QAAQ,EAAE,CAAC;OACZ;KACF;GACF;;EAED,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;EACzB,UAAU,CAAC,cAAc,GAAG,cAAc,CAAC;CAC5C,CAAC,MAAM,CAAC,CAAC;;;;;AAKV,CAAC,UAAU,CAAC,EAAE;;CAEb,CAAC,CAAC,SAAS,GAAG;EACb,OAAO,EAAE,OAAO;EAChB,OAAO,EAAE,cAAc,IAAI,QAAQ,CAAC,eAAe;EACnD,cAAc,EAAE,KAAK;EACrB,aAAa,EAAE,EAAE;EACjB,aAAa,EAAE,GAAG;EAClB,CAAC;;CAEF,IAAI,SAAS;KACT,SAAS;KACT,SAAS;KACT,WAAW;KACX,QAAQ,GAAG,KAAK,CAAC;;CAErB,SAAS,UAAU,GAAG;;EAErB,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;EACnD,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;EACjD,QAAQ,GAAG,KAAK,CAAC;EACjB;;CAED,SAAS,WAAW,CAAC,CAAC,EAAE;EACvB,IAAI,CAAC,CAAC,SAAS,CAAC,cAAc,EAAE;GAC/B,CAAC,CAAC,cAAc,EAAE,CAAC;GACnB;EACD,IAAI,QAAQ,EAAE;GACb,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;GAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;GAC3B,IAAI,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC;GACvB,IAAI,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC;GACvB,IAAI,GAAG,CAAC;GACR,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC;GAC/C,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAa,IAAI,WAAW,IAAI,CAAC,CAAC,SAAS,CAAC,aAAa,EAAE;IAC1F,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC;IAChC;;;;GAID,IAAI,GAAG,EAAE;IACR,CAAC,CAAC,cAAc,EAAE,CAAC;IACnB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;IACrD;GACD;EACD;;CAED,SAAS,YAAY,CAAC,CAAC,EAAE;EACxB,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;GAC1B,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;GAC/B,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;GAC/B,QAAQ,GAAG,IAAI,CAAC;GAChB,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;GACjC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;GACvD,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;GACrD;EACD;;CAED,SAAS,IAAI,GAAG;EACf,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;EAClF;;CAED,SAAS,QAAQ,GAAG;EACnB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;EACrD;;CAED,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;CAExC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,YAAY;EACnD,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,YAAY;IACrD,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IAC5B,EAAE,CAAC;EACL,CAAC,CAAC;CACH,CAAC,CAAC,MAAM,CAAC,CAAC;;;;AAIX,CAAC,UAAU,CAAC,EAAE;CACb,CAAC,CAAC,EAAE,CAAC,QAAQ,GAAG,YAAY;EAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE;GAC1B,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,2CAA2C,EAAE,YAAY;;;IAGnE,WAAW,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC,CAAC;GACH,CAAC,CAAC;;EAEH,IAAI,WAAW,GAAG,UAAU,KAAK,EAAE;GAClC,IAAI,OAAO,GAAG,KAAK,CAAC,cAAc;OAC9B,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC;OAClB,UAAU,GAAG;IAChB,UAAU,EAAE,WAAW;IACvB,SAAS,EAAE,WAAW;IACtB,QAAQ,EAAE,SAAS;IACnB;OACG,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC;OAC7B,cAAc,CAAC;;GAEnB,IAAI,YAAY,IAAI,MAAM,IAAI,OAAO,MAAM,CAAC,UAAU,KAAK,UAAU,EAAE;IACtE,cAAc,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE;KAC5C,SAAS,EAAE,IAAI;KACf,YAAY,EAAE,IAAI;KAClB,SAAS,EAAE,KAAK,CAAC,OAAO;KACxB,SAAS,EAAE,KAAK,CAAC,OAAO;KACxB,SAAS,EAAE,KAAK,CAAC,OAAO;KACxB,SAAS,EAAE,KAAK,CAAC,OAAO;KACxB,CAAC,CAAC;IACH,MAAM;IACN,cAAc,GAAG,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IACpD,cAAc,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,WAAW,IAAI,CAAC,CAAC;IACrK;GACD,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;GAC3C,CAAC;EACF,CAAC;CACF,CAAC,MAAM,CAAC,CAAC;;CA2OT,UAAU,CAAC,EAAE;;EAEZ,IAAI,gBAAgB,GAAG,YAAY;IACjC,IAAI,QAAQ,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACxC,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,kBAAkB,IAAI,MAAM,EAAE;QAC9C,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC;OACjD;KACF;IACD,OAAO,KAAK,CAAC;GACd,EAAE,CAAC;;EAEJ,IAAI,QAAQ,GAAG,UAAU,EAAE,EAAE,IAAI,EAAE;IACjC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;MAC7C,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,gBAAgB,CAAC,CAAC,IAAI,GAAG,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAC1F,CAAC,CAAC;GACJ,CAAC;;EAEF,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,kBAAkB,EAAE,aAAa,EAAE,YAAY;IAC5D,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;GAC3B,CAAC,CAAC;;;;EAIH,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,kBAAkB,EAAE,cAAc,EAAE,YAAY;IAC7D,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,IAAI,EAAE,EAAE;MACN,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;KAC5B,MAAM;MACL,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;KACrC;GACF,CAAC,CAAC;;;EAGH,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,kBAAkB,EAAE,eAAe,EAAE,YAAY;IAC9D,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;GAC7B,CAAC,CAAC;;;EAGH,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,kBAAkB,EAAE,iBAAiB,EAAE,UAAU,CAAC,EAAE;IACjE,CAAC,CAAC,eAAe,EAAE,CAAC;IACpB,IAAI,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;IAEzC,IAAI,SAAS,KAAK,EAAE,EAAE;MACpB,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,YAAY;QAC3D,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;OAC9B,CAAC,CAAC;KACJ,MAAM;MACL,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;KACxC;GACF,CAAC,CAAC;;EAEH,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,kCAAkC,EAAE,qBAAqB,EAAE,YAAY;IACpF,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACtC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GAC5D,CAAC,CAAC;;;;;;;EAOH,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY;IAC/B,cAAc,EAAE,CAAC;GAClB,CAAC,CAAC;;EAEH,SAAS,cAAc,GAAG;IACxB,cAAc,EAAE,CAAC;IACjB,cAAc,EAAE,CAAC;IACjB,cAAc,EAAE,CAAC;IACjB,eAAe,EAAE,CAAC;GACnB;;;EAGD,SAAS,eAAe,CAAC,UAAU,EAAE;IACnC,IAAI,SAAS,GAAG,CAAC,CAAC,iBAAiB,CAAC;QAChC,SAAS,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;;IAElD,IAAI,UAAU,EAAE;MACd,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAClC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;OAC5B,MAAM,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC9E,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;OAC9B,MAAM;QACL,OAAO,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;OAC/C;KACF;IACD,IAAI,SAAS,CAAC,MAAM,EAAE;MACpB,IAAI,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;QAC5C,OAAO,aAAa,GAAG,IAAI,CAAC;OAC7B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;MAEb,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE,QAAQ,EAAE;QAC5D,IAAI,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,GAAG,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,kBAAkB,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;;QAEnF,OAAO,CAAC,IAAI,CAAC,YAAY;UACvB,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;;UAEpB,KAAK,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;SACnD,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;GACF;;EAED,SAAS,cAAc,CAAC,QAAQ,EAAE;IAChC,IAAI,KAAK,GAAG,KAAK,CAAC;QACd,MAAM,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC;IAChC,IAAI,MAAM,CAAC,MAAM,EAAE;MACjB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAE;QACtE,IAAI,KAAK,EAAE;UACT,YAAY,CAAC,KAAK,CAAC,CAAC;SACrB;;QAED,KAAK,GAAG,UAAU,CAAC,YAAY;;UAE7B,IAAI,CAAC,gBAAgB,EAAE;;YAErB,MAAM,CAAC,IAAI,CAAC,YAAY;cACtB,CAAC,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC;aAC/C,CAAC,CAAC;WACJ;;UAED,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;SACtC,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;OACpB,CAAC,CAAC;KACJ;GACF;;EAED,SAAS,cAAc,CAAC,QAAQ,EAAE;IAChC,IAAI,KAAK,GAAG,KAAK,CAAC;QACd,MAAM,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC;IAChC,IAAI,MAAM,CAAC,MAAM,EAAE;MACjB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAE;QACtE,IAAI,KAAK,EAAE;UACT,YAAY,CAAC,KAAK,CAAC,CAAC;SACrB;;QAED,KAAK,GAAG,UAAU,CAAC,YAAY;;UAE7B,IAAI,CAAC,gBAAgB,EAAE;;YAErB,MAAM,CAAC,IAAI,CAAC,YAAY;cACtB,CAAC,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC;aAC/C,CAAC,CAAC;WACJ;;UAED,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;SACtC,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;OACpB,CAAC,CAAC;KACJ;GACF;;EAED,SAAS,cAAc,GAAG;IACxB,IAAI,CAAC,gBAAgB,EAAE;MACrB,OAAO,KAAK,CAAC;KACd;IACD,IAAI,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,6CAA6C,CAAC,CAAC;;;IAGrF,IAAI,yBAAyB,GAAG,UAAU,mBAAmB,EAAE;MAC7D,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;;MAE/C,QAAQ,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC;;QAEjC,KAAK,QAAQ;UACX,OAAO,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;UACzD,MAAM;;QAER,KAAK,QAAQ;UACX,OAAO,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;UAC7E,MAAM;;;;;;;;;;;;QAYR;UACE,OAAO,KAAK,CAAC;;OAEhB;KACF,CAAC;;IAEF,IAAI,KAAK,CAAC,MAAM,EAAE;;MAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1C,IAAI,eAAe,GAAG,IAAI,gBAAgB,CAAC,yBAAyB,CAAC,CAAC;QACtE,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;OACnJ;KACF;GACF;;;;;;EAMD,UAAU,CAAC,QAAQ,GAAG,cAAc,CAAC;;;CAGtC,CAAC,MAAM,CAAC,CAAC;;IAsCN,YAAY,GAAG,YAAY,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,OAAO,IAAI,UAAU,EAAE,EAAA,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAA,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,UAAU,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,IAAI,UAAU,EAAE,EAAA,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,EAAA,CAAC,IAAI,WAAW,EAAE,EAAA,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,EAAA,CAAC,OAAO,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;;AAEpjB,CAEC,UAAU,CAAC,EAAE;;;;;;;EAOZ,IAAI,KAAK,GAAG,YAAY;;;;;;;;IAQtB,SAAS,KAAK,CAAC,OAAO,EAAE;MACtB,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;;MAErF,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;MAE7B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;MACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;;MAE3E,IAAI,CAAC,KAAK,EAAE,CAAC;;MAEb,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KAC1C;;;;;;;;IAQD,YAAY,CAAC,KAAK,EAAE,CAAC;MACnB,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,SAAS,KAAK,GAAG;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;;QAE7D,IAAI,CAAC,OAAO,EAAE,CAAC;OAChB;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,MAAM,GAAG,IAAI,CAAC;;QAElB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,gBAAgB,EAAE,YAAY;UAC3D,MAAM,CAAC,SAAS,EAAE,CAAC;SACpB,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,YAAY;UACnC,OAAO,MAAM,CAAC,YAAY,EAAE,CAAC;SAC9B,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,aAAa,EAAE;UAC7C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAU,CAAC,EAAE;YACrE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;WACnC,CAAC,CAAC;SACJ;;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;UAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAU,CAAC,EAAE;YACnE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;WACnC,CAAC,CAAC;SACJ;OACF;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,CAAC,KAAK,EAAE,CAAC;OACd;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,eAAe;MACpB,KAAK,EAAE,SAAS,aAAa,CAAC,GAAG,EAAE;QACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAA,OAAO,IAAI,CAAC,EAAA;;QAEvC,IAAI,MAAM,GAAG,IAAI,CAAC;;QAElB,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI;UACjB,KAAK,UAAU;YACb,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACxB,MAAM;;UAER,KAAK,QAAQ,CAAC;UACd,KAAK,YAAY,CAAC;UAClB,KAAK,iBAAiB;YACpB,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,EAAA,MAAM,GAAG,KAAK,CAAC,EAAA;YAC9C,MAAM;;UAER;YACE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,EAAA,MAAM,GAAG,KAAK,CAAC,EAAA;SACvD;;QAED,OAAO,MAAM,CAAC;OACf;;;;;;;;;;;;;KAaF,EAAE;MACD,GAAG,EAAE,eAAe;MACpB,KAAK,EAAE,SAAS,aAAa,CAAC,GAAG,EAAE;QACjC,IAAI,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;;QAE1D,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;UAClB,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;SAC5D;;QAED,OAAO,MAAM,CAAC;OACf;;;;;;;;;;;KAWF,EAAE;MACD,GAAG,EAAE,WAAW;MAChB,KAAK,EAAE,SAAS,SAAS,CAAC,GAAG,EAAE;QAC7B,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACnB,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;QAE3D,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;UAClB,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC7B;;QAED,OAAO,MAAM,CAAC;OACf;;;;;;;;;;;KAWF,EAAE;MACD,GAAG,EAAE,iBAAiB;MACtB,KAAK,EAAE,SAAS,eAAe,CAAC,IAAI,EAAE;QACpC,IAAI,MAAM,GAAG,IAAI,CAAC;;QAElB,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE;UACrC,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;UACf,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;UAE7D,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;WACjC;UACD,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;SAClB,CAAC,CAAC;;QAEH,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC;OAClB;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,iBAAiB;MACtB,KAAK,EAAE,SAAS,eAAe,CAAC,GAAG,EAAE;QACnC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;;QAEzC,IAAI,MAAM,CAAC,MAAM,EAAE;UACjB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAC/C;;QAED,IAAI,UAAU,CAAC,MAAM,EAAE;UACrB,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;SAClD;;QAED,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;OACrE;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,yBAAyB;MAC9B,KAAK,EAAE,SAAS,uBAAuB,CAAC,SAAS,EAAE;QACjD,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;QAE3C,IAAI,OAAO,CAAC,MAAM,EAAE;UAClB,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SACnD;;QAED,IAAI,WAAW,CAAC,MAAM,EAAE;UACtB,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;SACtD;;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;OAC3E;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,oBAAoB;MACzB,KAAK,EAAE,SAAS,kBAAkB,CAAC,GAAG,EAAE;;QAEtC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,EAAE;UAC1B,OAAO,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACvD;;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;;QAEzC,IAAI,MAAM,CAAC,MAAM,EAAE;UACjB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAClD;;QAED,IAAI,UAAU,CAAC,MAAM,EAAE;UACrB,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;SACrD;;QAED,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;OAC1E;;;;;;;;;;KAUF,EAAE;MACD,GAAG,EAAE,eAAe;MACpB,KAAK,EAAE,SAAS,aAAa,CAAC,GAAG,EAAE;QACjC,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC;YACtC,SAAS,GAAG,KAAK;YACjB,eAAe,GAAG,IAAI;YACtB,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACtC,OAAO,GAAG,IAAI,CAAC;;;QAGnB,IAAI,GAAG,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE;UAC9D,OAAO,IAAI,CAAC;SACb;;QAED,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI;UACjB,KAAK,OAAO;YACV,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACjD,MAAM;;UAER,KAAK,UAAU;YACb,SAAS,GAAG,YAAY,CAAC;YACzB,MAAM;;UAER,KAAK,QAAQ,CAAC;UACd,KAAK,YAAY,CAAC;UAClB,KAAK,iBAAiB;YACpB,SAAS,GAAG,YAAY,CAAC;YACzB,MAAM;;UAER;YACE,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;SACtC;;QAED,IAAI,SAAS,EAAE;UACb,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;SAC9E;;QAED,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;UAC5B,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAChD;;QAED,IAAI,QAAQ,GAAG,CAAC,YAAY,EAAE,SAAS,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACzF,IAAI,OAAO,GAAG,CAAC,QAAQ,GAAG,OAAO,GAAG,SAAS,CAAC,GAAG,WAAW,CAAC;;QAE7D,IAAI,CAAC,QAAQ,GAAG,oBAAoB,GAAG,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;;;;;;;;QAQ/D,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;;QAE5B,OAAO,QAAQ,CAAC;OACjB;;;;;;;;;KASF,EAAE;MACD,GAAG,EAAE,cAAc;MACnB,KAAK,EAAE,SAAS,YAAY,GAAG;QAC7B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,CAAC;;QAEjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY;UAC5B,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACxC,CAAC,CAAC;;QAEH,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;;QAExC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;;;;;;;;QAQpF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,GAAG,WAAW,GAAG,aAAa,CAAC,GAAG,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;QAE9F,OAAO,OAAO,CAAC;OAChB;;;;;;;;;KASF,EAAE;MACD,GAAG,EAAE,cAAc;MACnB,KAAK,EAAE,SAAS,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE;;QAEzC,OAAO,GAAG,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,IAAI,SAAS,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,KAAK,GAAG,KAAK,CAAC;;QAElB,IAAI,SAAS,CAAC,MAAM,EAAE;;UAEpB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;YACjD,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;WACxD;;eAEI,IAAI,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;cACnC,KAAK,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC7C,MAAM;cACL,KAAK,GAAG,IAAI,CAAC;aACd;SACJ;;aAEI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAC5B,KAAK,GAAG,IAAI,CAAC;WACd;;QAEH,OAAO,KAAK,CAAC;OACd;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,eAAe;MACpB,KAAK,EAAE,SAAS,aAAa,CAAC,SAAS,EAAE;;;QAGvC,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC;QACpE,IAAI,KAAK,GAAG,KAAK;YACb,QAAQ,GAAG,KAAK,CAAC;;;QAGrB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;UAC1B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACzB,QAAQ,GAAG,IAAI,CAAC;WACjB;SACF,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,EAAE,EAAA,KAAK,GAAG,IAAI,CAAC,EAAA;;QAE5B,IAAI,CAAC,KAAK,EAAE;;UAEV,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;YAC1B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;cACxB,KAAK,GAAG,IAAI,CAAC;aACd;WACF,CAAC,CAAC;SACJ;;QAED,OAAO,KAAK,CAAC;OACd;;;;;;;;;;KAUF,EAAE;MACD,GAAG,EAAE,iBAAiB;MACtB,KAAK,EAAE,SAAS,eAAe,CAAC,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;QACzD,IAAI,MAAM,GAAG,IAAI,CAAC;;QAElB,QAAQ,GAAG,QAAQ,GAAG,IAAI,GAAG,KAAK,CAAC;;QAEnC,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;UACjD,OAAO,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;SAClE,CAAC,CAAC;QACH,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;OACpC;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,WAAW;MAChB,KAAK,EAAE,SAAS,SAAS,GAAG;QAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ;YACrB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;;QAExB,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpF,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpF,CAAC,CAAC,IAAI,CAAC,iBAAiB,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACvF,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACxD,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,2EAA2E,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACvI,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACtG,CAAC,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;;;;;QAKzG,KAAK,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;OAC9C;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;;QAE9E,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,YAAY;UAC1C,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SACnC,CAAC,CAAC;;QAEH,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;OACnC;KACF,CAAC,CAAC,CAAC;;IAEJ,OAAO,KAAK,CAAC;GACd,EAAE,CAAC;;;;;;;EAOJ,KAAK,CAAC,QAAQ,GAAG;;;;;;;IAOf,UAAU,EAAE,aAAa;;;;;;;IAOzB,eAAe,EAAE,kBAAkB;;;;;;;IAOnC,eAAe,EAAE,kBAAkB;;;;;;;IAOnC,iBAAiB,EAAE,aAAa;;;;;;;IAOhC,cAAc,EAAE,YAAY;;;;;;;IAO5B,YAAY,EAAE,KAAK;;IAEnB,QAAQ,EAAE;MACR,KAAK,EAAE,aAAa;MACpB,aAAa,EAAE,gBAAgB;MAC/B,OAAO,EAAE,YAAY;MACrB,MAAM,EAAE,0BAA0B;;;MAGlC,IAAI,EAAE,uJAAuJ;MAC7J,GAAG,EAAE,gBAAgB;;;MAGrB,KAAK,EAAE,uIAAuI;;MAE9I,GAAG,EAAE,otCAAotC;;MAEztC,MAAM,EAAE,kEAAkE;;MAE1E,QAAQ,EAAE,oHAAoH;;MAE9H,IAAI,EAAE,gIAAgI;;MAEtI,IAAI,EAAE,0CAA0C;MAChD,OAAO,EAAE,mCAAmC;;MAE5C,cAAc,EAAE,8DAA8D;;MAE9E,cAAc,EAAE,8DAA8D;;;MAG9E,KAAK,EAAE,qCAAqC;KAC7C;;;;;;;;;;IAUD,UAAU,EAAE;MACV,OAAO,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;QACvC,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC;OAC5D;KACF;GACF,CAAC;;;EAGF,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;CACnC,CAAC,MAAM,CAAC,CAAC;AACV,IAEI,YAAY,GAAG,YAAY,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,OAAO,IAAI,UAAU,EAAE,EAAA,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAA,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,UAAU,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,IAAI,UAAU,EAAE,EAAA,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,EAAA,CAAC,IAAI,WAAW,EAAE,EAAA,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,EAAA,CAAC,OAAO,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;;AAEpjB,CAEC,UAAU,CAAC,EAAE;;;;;;;;EAQZ,IAAI,gBAAgB,GAAG,YAAY;;;;;;;;IAQjC,SAAS,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE;MAC1C,eAAe,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;;MAExC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;MAC3B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;;MAEtF,IAAI,CAAC,KAAK,EAAE,CAAC;MACb,IAAI,CAAC,OAAO,EAAE,CAAC;;MAEf,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;KACrD;;;;;;;;;IASD,YAAY,CAAC,gBAAgB,EAAE,CAAC;MAC9B,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,SAAS,KAAK,GAAG;QACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,EAAE;UACb,OAAO,CAAC,KAAK,CAAC,kEAAkE,CAAC,CAAC;SACnF;;QAED,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;QAEpD,IAAI,CAAC,OAAO,EAAE,CAAC;OAChB;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC;;QAEjB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAEhD,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;;QAE7D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,2BAA2B,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;OAC3E;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;;QAExB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;UACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;UACrB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACzB;;;aAGI;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;WACzB;OACJ;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,YAAY;MACjB,KAAK,EAAE,SAAS,UAAU,GAAG;QAC3B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;UACxD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;;;;UAM3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;SACtD;OACF;KACF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;;QAE1C,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;;QAE9D,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;OACnC;KACF,CAAC,CAAC,CAAC;;IAEJ,OAAO,gBAAgB,CAAC;GACzB,EAAE,CAAC;;EAEJ,gBAAgB,CAAC,QAAQ,GAAG;;;;;;IAM1B,OAAO,EAAE,QAAQ;GAClB,CAAC;;;EAGF,UAAU,CAAC,MAAM,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;CACzD,CAAC,MAAM,CAAC,CAAC;AACV,IAEI,YAAY,GAAG,YAAY,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,OAAO,IAAI,UAAU,EAAE,EAAA,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAA,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,UAAU,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,IAAI,UAAU,EAAE,EAAA,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,EAAA,CAAC,IAAI,WAAW,EAAE,EAAA,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,EAAA,CAAC,OAAO,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;;AAEpjB,CAEC,UAAU,CAAC,EAAE;;;;;;;;;;;;EAYZ,IAAI,MAAM,GAAG,YAAY;;;;;;;IAOvB,SAAS,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;MAChC,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;MAE9B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;MACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;MAC5E,IAAI,CAAC,KAAK,EAAE,CAAC;;MAEb,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;MAC1C,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE;QACrC,OAAO,EAAE,MAAM;QACf,OAAO,EAAE,MAAM;QACf,QAAQ,EAAE,OAAO;QACjB,KAAK,EAAE,aAAa;QACpB,WAAW,EAAE,cAAc;OAC5B,CAAC,CAAC;KACJ;;;;;;;;IAQD,YAAY,CAAC,MAAM,EAAE,CAAC;MACpB,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,SAAS,KAAK,GAAG;QACtB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE,EAAE,UAAU,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,WAAW,EAAE,CAAC;;QAE9B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QACrI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;UAChB,eAAe,EAAE,IAAI,CAAC,EAAE;UACxB,eAAe,EAAE,IAAI;UACrB,UAAU,EAAE,CAAC;SACd,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;UAC7D,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;UAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;UAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC5C;;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;UACjB,MAAM,EAAE,QAAQ;UAChB,aAAa,EAAE,IAAI;UACnB,eAAe,EAAE,IAAI,CAAC,EAAE;UACxB,aAAa,EAAE,IAAI,CAAC,EAAE;SACvB,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,QAAQ,EAAE;UACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChD,MAAM;UACL,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;UAC3C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE;UACnE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACvD;OACF;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,cAAc;MACnB,KAAK,EAAE,SAAS,YAAY,CAAC,EAAE,EAAE;QAC/B,IAAI,QAAQ,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC5E,OAAO,QAAQ,CAAC;OACjB;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,iBAAiB;MACtB,KAAK,EAAE,SAAS,eAAe,GAAG;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QACvC,IAAI,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;QACnC,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;QACrC,IAAI,IAAI,EAAE,GAAG,CAAC;QACd,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,MAAM,EAAE;UACnC,IAAI,GAAG,QAAQ,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;SAC/C,MAAM;UACL,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;SAC3C;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,MAAM,EAAE;UACnC,IAAI,MAAM,GAAG,WAAW,EAAE;YACxB,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;WACrD,MAAM;YACL,GAAG,GAAG,QAAQ,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;WAChD;SACF,MAAM;UACL,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;SAC1C;QACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;;;QAGvC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,MAAM,EAAE;UACrD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC;UACzC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;SACtC;OACF;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,MAAM,GAAG,IAAI,CAAC;;QAElB,IAAI,KAAK,GAAG,IAAI,CAAC;;QAEjB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;UACf,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;UACvC,kBAAkB,EAAE,UAAU,KAAK,EAAE,QAAQ,EAAE;YAC7C,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;;cAEpG,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACnC;WACF;UACD,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;UAC3C,qBAAqB,EAAE,YAAY;YACjC,KAAK,CAAC,eAAe,EAAE,CAAC;WACzB;SACF,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;UACvB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAE;YAChD,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,EAAE;cACpC,CAAC,CAAC,eAAe,EAAE,CAAC;cACpB,CAAC,CAAC,cAAc,EAAE,CAAC;cACnB,KAAK,CAAC,IAAI,EAAE,CAAC;aACd;WACF,CAAC,CAAC;SACJ;;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;UACrD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAU,CAAC,EAAE;YACjE,IAAI,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE;cAChH,OAAO;aACR;YACD,KAAK,CAAC,KAAK,EAAE,CAAC;WACf,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;UACzB,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,qBAAqB,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7E;OACF;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,cAAc;MACnB,KAAK,EAAE,SAAS,YAAY,CAAC,CAAC,EAAE;QAC9B,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;UAC5D,IAAI,CAAC,IAAI,EAAE,CAAC;SACb,MAAM;UACL,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;OACF;;;;;;;;;KASF,EAAE;MACD,GAAG,EAAE,MAAM;MACX,KAAK,EAAE,SAAS,IAAI,GAAG;QACrB,IAAI,MAAM,GAAG,IAAI,CAAC;;QAElB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;UACzB,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;;UAEzB,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE;YAC5B,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;WAC5C,MAAM;YACL,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;WAC7B;SACF;;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;;QAGrB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;UACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;SACtD;;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;;QAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;;QAE/C,IAAI,IAAI,CAAC,QAAQ,EAAE;UACjB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;UAC/C,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAClC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;WAChC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;WAChC;SACF;;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;;;;;;UAMhC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SACrD;;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;UAC5B,IAAI,KAAK,CAAC;;UAEV,CAAC,YAAY;YACX,IAAI,mBAAmB,GAAG,YAAY;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;gBAClB,aAAa,EAAE,KAAK;gBACpB,UAAU,EAAE,CAAC,CAAC;eACf,CAAC,CAAC,KAAK,EAAE,CAAC;aACZ,CAAC;;YAEF,KAAK,GAAG,MAAM,CAAC;;YAEf,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;cAC1B,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;aACzD;YACD,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,YAAY;cACnF,MAAM,CAAC,iBAAiB,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;cAC9E,mBAAmB,EAAE,CAAC;aACvB,CAAC,CAAC;WACJ,CAAC,EAAE,CAAC;SACN;;aAEI;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;cACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACvB;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;WAC5C;;;QAGH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;UACjB,aAAa,EAAE,KAAK;UACpB,UAAU,EAAE,CAAC,CAAC;SACf,CAAC,CAAC,KAAK,EAAE,CAAC;;;;;;QAMX,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;;QAExC,IAAI,IAAI,CAAC,QAAQ,EAAE;UACjB,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,WAAW,CAAC;UAC5C,CAAC,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;SAC5C,MAAM;UACL,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;SACtC;;QAED,UAAU,CAAC,YAAY;UACrB,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB,EAAE,CAAC,CAAC,CAAC;OACP;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,gBAAgB;MACrB,KAAK,EAAE,SAAS,cAAc,GAAG;QAC/B,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;QAE1E,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;UAClF,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAU,CAAC,EAAE;YAC3C,IAAI,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE;cAChH,OAAO;aACR;YACD,KAAK,CAAC,KAAK,EAAE,CAAC;WACf,CAAC,CAAC;SACJ;;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;UAC3B,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAE;YAC7C,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,EAAE;cACzC,KAAK,EAAE,YAAY;gBACjB,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE;kBAC5B,KAAK,CAAC,KAAK,EAAE,CAAC;kBACd,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;iBACvB;eACF;aACF,CAAC,CAAC;WACJ,CAAC,CAAC;SACJ;;;QAGD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAE;UACjD,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;;UAEtB,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,EAAE;YACzC,WAAW,EAAE,YAAY;cACvB,KAAK,CAAC,iBAAiB,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;cAC5E,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;;gBAEpE,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;gBACtC,OAAO,IAAI,CAAC;eACb;cACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;;gBAExC,OAAO,IAAI,CAAC;eACb;aACF;YACD,YAAY,EAAE,YAAY;cACxB,KAAK,CAAC,iBAAiB,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;cAC5E,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;;gBAElG,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;gBACvC,OAAO,IAAI,CAAC;eACb;cACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;;gBAExC,OAAO,IAAI,CAAC;eACb;aACF;YACD,IAAI,EAAE,YAAY;cAChB,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE;gBACzE,UAAU,CAAC,YAAY;;kBAErB,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;iBACvB,EAAE,CAAC,CAAC,CAAC;eACP,MAAM,IAAI,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE;;gBAE9C,KAAK,CAAC,IAAI,EAAE,CAAC;eACd;aACF;YACD,KAAK,EAAE,YAAY;cACjB,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE;gBAC5B,KAAK,CAAC,KAAK,EAAE,CAAC;gBACd,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;eACvB;aACF;YACD,OAAO,EAAE,UAAU,cAAc,EAAE;cACjC,IAAI,cAAc,EAAE;gBAClB,CAAC,CAAC,cAAc,EAAE,CAAC;eACpB;aACF;WACF,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,SAAS,KAAK,GAAG;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;UACnD,OAAO,KAAK,CAAC;SACd;QACD,IAAI,KAAK,GAAG,IAAI,CAAC;;;QAGjB,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;UAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACxB,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;WACnE,MAAM;YACL,QAAQ,EAAE,CAAC;WACZ;;UAED,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACxE;;aAEI;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;cACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;aACjC,MAAM;cACL,QAAQ,EAAE,CAAC;aACZ;;YAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;WAC5C;;;QAGH,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;UAC3B,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SACpC;;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;UACtD,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;SAClC;;QAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;;QAEvC,SAAS,QAAQ,GAAG;UAClB,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;YAC9C,IAAI,KAAK,CAAC,iBAAiB,EAAE;cAC3B,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;cAC7C,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAChC;WACF,MAAM;YACL,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;WACzC;;UAED,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;;;;;;UAMzC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;SAC5C;;;;;;QAMD,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;UAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;SAC1C;;QAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE;UAC1B,IAAI,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;YAC/B,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;WAC3E,MAAM;YACL,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAE,CAAC;WAC3B;SACF;OACF;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,QAAQ;MACb,KAAK,EAAE,SAAS,MAAM,GAAG;QACvB,IAAI,IAAI,CAAC,QAAQ,EAAE;UACjB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd,MAAM;UACL,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;OACF;KACF,EAAE;MACD,GAAG,EAAE,SAAS;;;;;;;MAOd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;UACxB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;UAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;SACrC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;;QAEvC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;OACnC;KACF,CAAC,CAAC,CAAC;;IAEJ,OAAO,MAAM,CAAC;GACf,EAAE,CAAC;;EAEJ,MAAM,CAAC,QAAQ,GAAG;;;;;;IAMhB,WAAW,EAAE,EAAE;;;;;;IAMf,YAAY,EAAE,EAAE;;;;;;IAMhB,SAAS,EAAE,CAAC;;;;;;IAMZ,SAAS,EAAE,CAAC;;;;;;IAMZ,YAAY,EAAE,IAAI;;;;;;IAMlB,UAAU,EAAE,IAAI;;;;;;IAMhB,cAAc,EAAE,KAAK;;;;;;IAMrB,OAAO,EAAE,MAAM;;;;;;IAMf,OAAO,EAAE,MAAM;;;;;;IAMf,UAAU,EAAE,KAAK;;;;;;IAMjB,YAAY,EAAE,EAAE;;;;;;IAMhB,OAAO,EAAE,IAAI;;;;;;IAMb,YAAY,EAAE,KAAK;;;;;;IAMnB,QAAQ,EAAE,KAAK;GAChB,CAAC;;;EAGF,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;EAEpC,SAAS,WAAW,GAAG;IACrB,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;KAC5D,CAAC;GACH;;EAED,SAAS,YAAY,GAAG;IACtB,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;KACjD,CAAC;GACH;;EAED,SAAS,WAAW,GAAG;IACrB,OAAO,WAAW,EAAE,IAAI,YAAY,EAAE,CAAC;GACxC;CACF,CAAC,MAAM,CAAC,CAAC;AACV,IAEI,YAAY,GAAG,YAAY,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,OAAO,IAAI,UAAU,EAAE,EAAA,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAA,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,UAAU,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,IAAI,UAAU,EAAE,EAAA,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,EAAA,CAAC,IAAI,WAAW,EAAE,EAAA,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,EAAA,CAAC,OAAO,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;;AAEpjB,CAEC,UAAU,CAAC,EAAE;;;;;;;;;EASZ,IAAI,OAAO,GAAG,YAAY;;;;;;;;IAQxB,SAAS,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE;MACjC,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;MAE/B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;MACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;MACvE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;MAEpB,IAAI,CAAC,KAAK,EAAE,CAAC;MACb,IAAI,CAAC,OAAO,EAAE,CAAC;;MAEf,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KAC5C;;;;;;;;;IASD,YAAY,CAAC,OAAO,EAAE,CAAC;MACrB,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,SAAS,KAAK,GAAG;QACtB,IAAI,KAAK,CAAC;;QAEV,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;UACxB,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;UAExC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;UAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;SACtC;;aAEI;YACD,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;YAEtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;WAC5D;;;QAGH,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7B,CAAC,CAAC,cAAc,GAAG,EAAE,GAAG,mBAAmB,GAAG,EAAE,GAAG,oBAAoB,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;;QAE/G,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;OACjF;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;OACxF;;;;;;;;;KASF,EAAE;MACD,GAAG,EAAE,QAAQ;MACb,KAAK,EAAE,SAAS,MAAM,GAAG;QACvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,gBAAgB,GAAG,cAAc,CAAC,EAAE,CAAC;OAClE;KACF,EAAE;MACD,GAAG,EAAE,cAAc;MACnB,KAAK,EAAE,SAAS,YAAY,GAAG;QAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;QAE1C,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,IAAI,EAAE;;;;;UAKR,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SACxC,MAAM;;;;;UAKL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACzC;;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;OACxB;KACF,EAAE;MACD,GAAG,EAAE,gBAAgB;MACrB,KAAK,EAAE,SAAS,cAAc,GAAG;QAC/B,IAAI,KAAK,GAAG,IAAI,CAAC;;QAEjB,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;UAC/B,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,YAAY;YACvE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;WAC/B,CAAC,CAAC;SACJ,MAAM;UACL,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,YAAY;YACzE,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;WAChC,CAAC,CAAC;SACJ;OACF;KACF,EAAE;MACD,GAAG,EAAE,aAAa;MAClB,KAAK,EAAE,SAAS,WAAW,CAAC,IAAI,EAAE;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;OAC1D;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACjC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;OACnC;KACF,CAAC,CAAC,CAAC;;IAEJ,OAAO,OAAO,CAAC;GAChB,EAAE,CAAC;;EAEJ,OAAO,CAAC,QAAQ,GAAG;;;;;;IAMjB,OAAO,EAAE,KAAK;GACf,CAAC;;;EAGF,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;CACvC,CAAC,MAAM,CAAC,CAAC;AACV,IAEI,YAAY,GAAG,YAAY,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,OAAO,IAAI,UAAU,EAAE,EAAA,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAA,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,UAAU,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,IAAI,UAAU,EAAE,EAAA,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,EAAA,CAAC,IAAI,WAAW,EAAE,EAAA,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,EAAA,CAAC,OAAO,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;;AAEpjB,CAEC,UAAU,CAAC,EAAE;;;;;;;;;;EAUZ,IAAI,OAAO,GAAG,YAAY;;;;;;;;IAQxB,SAAS,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE;MACjC,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;MAE/B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;MACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;;MAE7E,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;MACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;MACrB,IAAI,CAAC,KAAK,EAAE,CAAC;;MAEb,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KAC5C;;;;;;;;IAQD,YAAY,CAAC,OAAO,EAAE,CAAC;MACrB,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,SAAS,KAAK,GAAG;QACtB,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;;QAE5F,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;;QAE/F,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;;QAExE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;UACjB,OAAO,EAAE,EAAE;UACX,kBAAkB,EAAE,MAAM;UAC1B,eAAe,EAAE,MAAM;UACvB,aAAa,EAAE,MAAM;UACrB,aAAa,EAAE,MAAM;SACtB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;;;QAGvC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;;QAE1B,IAAI,CAAC,OAAO,EAAE,CAAC;OAChB;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,mBAAmB;MACxB,KAAK,EAAE,SAAS,iBAAiB,CAAC,OAAO,EAAE;QACzC,IAAI,CAAC,OAAO,EAAE;UACZ,OAAO,EAAE,CAAC;SACX;;QAED,IAAI,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACnE,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACvC,OAAO,QAAQ,CAAC;OACjB;KACF,EAAE;MACD,GAAG,EAAE,gBAAgB;;;;;;MAMrB,KAAK,EAAE,SAAS,cAAc,CAAC,EAAE,EAAE;QACjC,IAAI,eAAe,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC;QACjI,IAAI,SAAS,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;UAC9D,MAAM,EAAE,SAAS;UACjB,aAAa,EAAE,IAAI;UACnB,gBAAgB,EAAE,KAAK;UACvB,eAAe,EAAE,KAAK;UACtB,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;OAClB;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,aAAa;MAClB,KAAK,EAAE,SAAS,WAAW,CAAC,QAAQ,EAAE;QACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;;;QAGxD,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;UACtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC/B,MAAM,IAAI,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;UACzE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACrC,MAAM,IAAI,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;UACzE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SACvD,MAAM,IAAI,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;UACzE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACtD;;;aAGI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;WAChC,MAAM,IAAI,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;WACtD,MAAM,IAAI,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;WACrC,MAAM,IAAI,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;WACrC;;eAEI;cACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;aACrC;QACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,EAAE,CAAC;OAChB;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,cAAc;MACnB,KAAK,EAAE,SAAS,YAAY,GAAG;;;QAC7B,IAAI,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC;YAChD,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;YACtD,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;YACzD,SAAS,GAAG,QAAQ,KAAK,MAAM,GAAG,MAAM,GAAG,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,KAAK;YAChF,KAAK,GAAG,SAAS,KAAK,KAAK,GAAG,QAAQ,GAAG,OAAO;YAChD,MAAM,GAAG,KAAK,KAAK,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO;YACzE,KAAK,GAAG,IAAI,CAAC;;QAEjB,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;UACnH,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;;YAEnJ,OAAO,EAAE,WAAW,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC;YAChE,QAAQ,EAAE,MAAM;WACjB,CAAC,CAAC;UACH,OAAO,KAAK,CAAC;SACd;;QAED,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,SAAS,GAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;QAE9J,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;UACtEA,MAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAC3BA,MAAI,CAAC,YAAY,EAAE,CAAC;SACrB;OACF;;;;;;;;;KASF,EAAE;MACD,GAAG,EAAE,MAAM;MACX,KAAK,EAAE,SAAS,IAAI,GAAG;QACrB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;UAExF,OAAO,KAAK,CAAC;SACd;;QAED,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;QACjD,IAAI,CAAC,YAAY,EAAE,CAAC;;;;;;QAMpB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;QAEtE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;UACjB,gBAAgB,EAAE,IAAI;UACtB,aAAa,EAAE,KAAK;SACrB,CAAC,CAAC;QACH,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;;QAEtB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,YAAY;;SAEjG,CAAC,CAAC;;;;;QAKH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;OAC1C;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,MAAM;MACX,KAAK,EAAE,SAAS,IAAI,GAAG;;QAErB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;UACxB,aAAa,EAAE,IAAI;UACnB,gBAAgB,EAAE,KAAK;SACxB,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,YAAY;UACnD,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;UACvB,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;UACtB,IAAI,KAAK,CAAC,YAAY,EAAE;YACtB,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;;YAE1G,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;YACzB,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;YAClB,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC;WAC5B;SACF,CAAC,CAAC;;;;;QAKH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;OAC1C;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,OAAO,GAAG,KAAK,CAAC;;QAEpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;;UAE9B,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,uBAAuB,EAAE,UAAU,CAAC,EAAE;YACrD,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;cACnB,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,YAAY;gBACrC,KAAK,CAAC,IAAI,EAAE,CAAC;eACd,EAAE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAC9B;WACF,CAAC,CAAC,EAAE,CAAC,uBAAuB,EAAE,UAAU,CAAC,EAAE;YAC1C,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;cACzD,KAAK,CAAC,IAAI,EAAE,CAAC;aACd;WACF,CAAC,CAAC;SACJ;;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;UAC1B,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,sBAAsB,EAAE,UAAU,CAAC,EAAE;YACpD,CAAC,CAAC,wBAAwB,EAAE,CAAC;YAC7B,IAAI,KAAK,CAAC,OAAO,EAAE;;;aAGlB,MAAM;cACL,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;cACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvF,KAAK,CAAC,IAAI,EAAE,CAAC;eACd;aACF;WACF,CAAC,CAAC;SACJ,MAAM;UACL,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,sBAAsB,EAAE,UAAU,CAAC,EAAE;YACpD,CAAC,CAAC,wBAAwB,EAAE,CAAC;YAC7B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;WACtB,CAAC,CAAC;SACJ;;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;UACjC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,oCAAoC,EAAE,UAAU,CAAC,EAAE;YAClE,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;WAC9C,CAAC,CAAC;SACJ;;QAED,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;;;UAGf,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;SACzC,CAAC,CAAC;;QAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAU,CAAC,EAAE;UAChD,OAAO,GAAG,IAAI,CAAC;UACf,IAAI,KAAK,CAAC,OAAO,EAAE;;;YAGjB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;cAC5B,OAAO,GAAG,KAAK,CAAC;aACjB;YACD,OAAO,KAAK,CAAC;WACd,MAAM;YACL,KAAK,CAAC,IAAI,EAAE,CAAC;WACd;SACF,CAAC,CAAC,EAAE,CAAC,qBAAqB,EAAE,UAAU,CAAC,EAAE;UACxC,OAAO,GAAG,KAAK,CAAC;UAChB,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;UACtB,KAAK,CAAC,IAAI,EAAE,CAAC;SACd,CAAC,CAAC,EAAE,CAAC,qBAAqB,EAAE,YAAY;UACvC,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,YAAY,EAAE,CAAC;WACtB;SACF,CAAC,CAAC;OACJ;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,QAAQ;MACb,KAAK,EAAE,SAAS,MAAM,GAAG;QACvB,IAAI,IAAI,CAAC,QAAQ,EAAE;UACjB,IAAI,CAAC,IAAI,EAAE,CAAC;SACb,MAAM;UACL,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;OACF;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,wBAAwB,CAAC;;SAE9E,UAAU,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;;QAEhH,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;;QAEvB,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;OACnC;KACF,CAAC,CAAC,CAAC;;IAEJ,OAAO,OAAO,CAAC;GAChB,EAAE,CAAC;;EAEJ,OAAO,CAAC,QAAQ,GAAG;IACjB,eAAe,EAAE,KAAK;;;;;;IAMtB,UAAU,EAAE,GAAG;;;;;;IAMf,cAAc,EAAE,GAAG;;;;;;IAMnB,eAAe,EAAE,GAAG;;;;;;IAMpB,YAAY,EAAE,KAAK;;;;;;IAMnB,eAAe,EAAE,EAAE;;;;;;IAMnB,YAAY,EAAE,SAAS;;;;;;IAMvB,YAAY,EAAE,SAAS;;;;;;IAMvB,MAAM,EAAE,OAAO;;;;;;IAMf,QAAQ,EAAE,EAAE;;;;;;IAMZ,OAAO,EAAE,EAAE;IACX,cAAc,EAAE,eAAe;;;;;;IAM/B,SAAS,EAAE,IAAI;;;;;;IAMf,aAAa,EAAE,EAAE;;;;;;IAMjB,OAAO,EAAE,EAAE;;;;;;IAMX,OAAO,EAAE,EAAE;GACZ,CAAC;;;;;;;EAOF,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;CACvC,CAAC,MAAM,CAAC,CAAC;AACV,IAEI,YAAY,GAAG,YAAY,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,IAAI,OAAO,IAAI,UAAU,EAAE,EAAA,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAA,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,UAAU,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,IAAI,UAAU,EAAE,EAAA,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,EAAA,CAAC,IAAI,WAAW,EAAE,EAAA,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,EAAA,CAAC,OAAO,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;;AAEpjB,SAAS,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC,QAAQ,YAAY,WAAW,CAAC,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,CAAC,EAAE,EAAE;;AAEzJ,CAAC,UAAU,CAAC,EAAE;;;;;;;;;;EAUZ,IAAI,QAAQ,GAAG,YAAY;;;;;;;;IAQzB,SAAS,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE;MAClC,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;MAEhC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;MACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;MAC9E,IAAI,CAAC,KAAK,EAAE,CAAC;;MAEb,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;MAC5C,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE;QACvC,OAAO,EAAE,MAAM;QACf,OAAO,EAAE,MAAM;QACf,QAAQ,EAAE,OAAO;QACjB,KAAK,EAAE,aAAa;QACpB,WAAW,EAAE,cAAc;OAC5B,CAAC,CAAC;KACJ;;;;;;;;;IASD,YAAY,CAAC,QAAQ,EAAE,CAAC;MACtB,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,SAAS,KAAK,GAAG;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAEnC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,gBAAgB,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,gBAAgB,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;QAC3H,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;UAChB,eAAe,EAAE,GAAG;UACpB,eAAe,EAAE,KAAK;UACtB,eAAe,EAAE,GAAG;UACpB,eAAe,EAAE,IAAI;UACrB,eAAe,EAAE,KAAK;;SAEvB,CAAC,CAAC;;QAEH,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;UACjB,aAAa,EAAE,MAAM;UACrB,eAAe,EAAE,GAAG;UACpB,aAAa,EAAE,GAAG;UAClB,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC;SAChF,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;OAChB;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,kBAAkB;MACvB,KAAK,EAAE,SAAS,gBAAgB,GAAG;QACjC,IAAI,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;QACpF,gBAAgB,GAAG,gBAAgB,GAAG,gBAAgB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAC/D,IAAI,kBAAkB,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QACvE,kBAAkB,GAAG,kBAAkB,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACrE,IAAI,QAAQ,GAAG,kBAAkB,GAAG,kBAAkB,GAAG,GAAG,GAAG,gBAAgB,GAAG,gBAAgB,CAAC;;QAEnG,OAAO,QAAQ,CAAC;OACjB;;;;;;;;;KASF,EAAE;MACD,GAAG,EAAE,aAAa;MAClB,KAAK,EAAE,SAAS,WAAW,CAAC,QAAQ,EAAE;QACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;;QAExD,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;UACtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC/B,MAAM,IAAI,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;UACzE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACrC,MAAM,IAAI,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;UACzE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SACvD,MAAM,IAAI,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;UACzE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACtD;;;aAGI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;WAChC,MAAM,IAAI,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;WACtD,MAAM,IAAI,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;WACrC,MAAM,IAAI,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;WACrC;;eAEI;cACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;aACrC;QACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,EAAE,CAAC;OAChB;;;;;;;;;KASF,EAAE;MACD,GAAG,EAAE,cAAc;MACnB,KAAK,EAAE,SAAS,YAAY,GAAG;;;QAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,OAAO,EAAE;UAClD,OAAO,KAAK,CAAC;SACd;QACD,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE;YAClC,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;YACtD,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;YACxD,KAAK,GAAG,IAAI;YACZ,SAAS,GAAG,QAAQ,KAAK,MAAM,GAAG,MAAM,GAAG,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,KAAK;YAChF,KAAK,GAAG,SAAS,KAAK,KAAK,GAAG,QAAQ,GAAG,OAAO;YAChD,MAAM,GAAG,KAAK,KAAK,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;;QAE9E,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;UACnH,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;YAClJ,OAAO,EAAE,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC;YAC7D,QAAQ,EAAE,MAAM;WACjB,CAAC,CAAC;UACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;UACzB,OAAO,KAAK,CAAC;SACd;;QAED,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;QAEnI,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;UACnFA,MAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAC3BA,MAAI,CAAC,YAAY,EAAE,CAAC;SACrB;OACF;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;UACf,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;UACvC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;UACzC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;UAC3C,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;SACpD,CAAC,CAAC;;QAEH,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;UACtB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC,EAAE,CAAC,wBAAwB,EAAE,YAAY;YACzG,IAAI,CAAC,CAAC,8BAA8B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;cAC7C,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;cAC5B,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,YAAY;gBACrC,KAAK,CAAC,IAAI,EAAE,CAAC;gBACb,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;eACnC,EAAE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAC9B;WACF,CAAC,CAAC,EAAE,CAAC,wBAAwB,EAAE,YAAY;YAC1C,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,YAAY;cACrC,KAAK,CAAC,KAAK,EAAE,CAAC;cACd,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aACpC,EAAE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;WAC9B,CAAC,CAAC;UACH,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC,EAAE,CAAC,wBAAwB,EAAE,YAAY;cAC1G,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAC7B,CAAC,CAAC,EAAE,CAAC,wBAAwB,EAAE,YAAY;cAC1C,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;cAC5B,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,YAAY;gBACrC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACd,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;eACpC,EAAE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAC9B,CAAC,CAAC;WACJ;SACF;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,qBAAqB,EAAE,UAAU,CAAC,EAAE;;UAErE,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC;cACjB,wBAAwB,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;;UAEjF,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,EAAE;YAC3C,WAAW,EAAE,YAAY;cACvB,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;;gBAErE,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;;kBAE3B,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;kBACvC,CAAC,CAAC,cAAc,EAAE,CAAC;iBACpB,MAAM;;kBAEL,KAAK,CAAC,KAAK,EAAE,CAAC;iBACf;eACF;aACF;YACD,YAAY,EAAE,YAAY;cACxB,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;;gBAEnG,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;;kBAE3B,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;kBACxC,CAAC,CAAC,cAAc,EAAE,CAAC;iBACpB,MAAM;;kBAEL,KAAK,CAAC,KAAK,EAAE,CAAC;iBACf;eACF;aACF;YACD,IAAI,EAAE,YAAY;cAChB,IAAI,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gBAC7B,KAAK,CAAC,IAAI,EAAE,CAAC;gBACb,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;gBAC5C,CAAC,CAAC,cAAc,EAAE,CAAC;eACpB;aACF;YACD,KAAK,EAAE,YAAY;cACjB,KAAK,CAAC,KAAK,EAAE,CAAC;cACd,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aACvB;WACF,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,iBAAiB;MACtB,KAAK,EAAE,SAAS,eAAe,GAAG;QAChC,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC3C,KAAK,GAAG,IAAI,CAAC;QACjB,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAAE;UAClE,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;YACrE,OAAO;WACR;UACD,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;YACxC,OAAO;WACR;UACD,KAAK,CAAC,KAAK,EAAE,CAAC;UACd,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SAChC,CAAC,CAAC;OACJ;;;;;;;;;KASF,EAAE;MACD,GAAG,EAAE,MAAM;MACX,KAAK,EAAE,SAAS,IAAI,GAAG;;;;;;QAMrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,qBAAqB,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;;QAE/D,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,CAAC;;QAEjE,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;UAC1B,IAAI,UAAU,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAClE,IAAI,UAAU,CAAC,MAAM,EAAE;YACrB,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;WAC1B;SACF;;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;UAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;;;;;;QAMD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;OAC5D;;;;;;;;KAQF,EAAE;MACD,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,SAAS,KAAK,GAAG;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;UACtC,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;;QAEnE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;;QAE/D,IAAI,IAAI,CAAC,YAAY,EAAE;UACrB,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;UAC/C,IAAI,gBAAgB,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;WAC7C;UACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;sBACtC,GAAG,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;UAC3C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;UAC1B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;UACjB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;SAC/B;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;OAC5D;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,QAAQ;MACb,KAAK,EAAE,SAAS,MAAM,GAAG;QACvB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;UACrC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAA,OAAO,EAAA;UACvC,IAAI,CAAC,KAAK,EAAE,CAAC;SACd,MAAM;UACL,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;OACF;;;;;;;KAOF,EAAE;MACD,GAAG,EAAE,SAAS;MACd,KAAK,EAAE,SAAS,OAAO,GAAG;QACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;;QAEjC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;OACnC;KACF,CAAC,CAAC,CAAC;;IAEJ,OAAO,QAAQ,CAAC;GACjB,EAAE,CAAC;;EAEJ,QAAQ,CAAC,QAAQ,GAAG;;;;;;IAMlB,UAAU,EAAE,GAAG;;;;;;IAMf,KAAK,EAAE,KAAK;;;;;;IAMZ,SAAS,EAAE,KAAK;;;;;;IAMhB,OAAO,EAAE,CAAC;;;;;;IAMV,OAAO,EAAE,CAAC;;;;;;IAMV,aAAa,EAAE,EAAE;;;;;;IAMjB,SAAS,EAAE,KAAK;;;;;;IAMhB,SAAS,EAAE,KAAK;;;;;;IAMhB,YAAY,EAAE,KAAK;GACpB,CAAC;;;EAGF,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;CACzC,CAAC,MAAM,CAAC,CAAC;;","preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}