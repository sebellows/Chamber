{"version":3,"file":"media-block.babel.js","sources":["resources/assets/js/lazy-image-loading.js","resources/assets/js/media-block.js"],"sourcesContent":["// ------------- lazy-image-loading.js ------------- //\n\nexport default class LazyImages {\n\n    constructor() {\n        this.lazy = document.querySelectorAll('.lazy');\n    }\n\n    lazyLoad() {\n        let images = this.lazy;\n\n        for (let i = 0; i < images.length; i++){\n            if(this.isInViewport(images[i])){\n                if (images[i].getAttribute('data-src')){\n                    images[i].src = images[i].getAttribute('data-src');\n                    images[i].removeAttribute('data-src');\n                }\n                if (images[i].getAttribute('data-srcset')){\n                    images[i].srcset = images[i].getAttribute('data-srcset');\n                    images[i].removeAttribute('data-srcset');\n                }\n                images[i].classList.add(\"is-loaded\");\n            }\n        }\n\n        this.cleanLazy();\n    }\n\n    cleanLazy() {\n        Array.prototype.filter.call(this.lazy, function(l) { \n            return l.getAttribute('data-src');\n        });\n    }\n\n    isInViewport(lazy) {\n        let rect = lazy.getBoundingClientRect();\n        \n        return (\n            rect.bottom >= 0 && \n            rect.right  >= 0 && \n            rect.top    <= (window.innerHeight || document.documentElement.clientHeight) && \n            rect.left   <= (window.innerWidth || document.documentElement.clientWidth)\n         );\n    }\n\n    onChange(...args) {\n        return args;\n    }\n\n}","import LazyImages from './lazy-image-loading.js';\n\n/**\n * media-block.js.\n *\n * Add videoPoster image from YouTube video to media-block stripe.\n */\n( function () {\n\n    \"use strict\";\n\n    // if ( ! document.querySelector('.stripe.media-block') ) {\n    //     return;\n    // }\n\n    if ( ! document.querySelector('.stripe.media-block .flex-video') ) {\n        return;\n    }\n\n    const MEDIABLOCK  = document.querySelector('.stripe.media-block');\n    const VIDEOBLOCK  = MEDIABLOCK.querySelector('.flex-video');\n\n    mediaID    = typeof mediaID === \"undefined\" ? '' : mediaID;\n    mediaAttrs = typeof mediaAttrs === \"undefined\" ? '' : mediaAttrs;\n\n    /**\n     * Set multiple attributes on an element.\n     *\n     * @source http://stackoverflowu\n     * \n     * .com/questions/12274748/setting-multiple-attributes-for-an-element-at-once-with-javascript\n     * \n     * @param {[object]} el\n     * @param {[array]} attrs\n     */\n    function setAttributes(el, attrs) {\n        for(let key in attrs) {\n            el.setAttribute(key, attrs[key]);\n        }\n    }\n\n    /**\n     * Add the image `src` for the video poster.\n     * \n     * @return {Object}\n     */\n    function setVideoPosterImage() {\n        let poster = '';\n\n        poster = '<img class=\"lazy video-poster\" data-src=\"https://i.ytimg.com/vi/' + mediaID + '/sddefault.jpg\" />';\n\n        return poster;\n    }\n\n    /**\n     * Add the SVG play arrow icon to the play button.\n     */\n    function addPlayButtonSVG() {\n        let svg            = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        let pathBG         = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        let pathPlayArrow1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        let pathPlayArrow2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\n        setAttributes( svg, {\n            'viewBox': '0 0 68 48', \n            'height': '100%', \n            'style': 'pointer-events:none;'\n        } );\n\n        setAttributes( pathBG, {\n            'd': 'm .66,37.62 c 0,0 .66,4.70 2.70,6.77 2.58,2.71 5.98,2.63 7.49,2.91 5.43,.52 23.10,.68 23.12,.68 .00,-1.3e-5 14.29,-0.02 23.81,-0.71 1.32,-0.15 4.22,-0.17 6.81,-2.89 2.03,-2.07 2.70,-6.77 2.70,-6.77 0,0 .67,-5.52 .67,-11.04 l 0,-5.17 c 0,-5.52 -0.67,-11.04 -0.67,-11.04 0,0 -0.66,-4.70 -2.70,-6.77 C 62.03,.86 59.13,.84 57.80,.69 48.28,0 34.00,0 34.00,0 33.97,0 19.69,0 10.18,.69 8.85,.84 5.95,.86 3.36,3.58 1.32,5.65 .66,10.35 .66,10.35 c 0,0 -0.55,4.50 -0.66,9.45 l 0,8.36 c .10,4.94 .66,9.45 .66,9.45 z',\n            'fill': '#1f1f1e',\n            'fill-opacity': '0.81'\n        } );\n\n        setAttributes( pathPlayArrow1, {\n            'd': 'm 26.96,13.67 18.37,9.62 -18.37,9.55 -0.00,-19.17 z',\n            'fill': '#fff'\n        } );\n\n        setAttributes( pathPlayArrow2, {\n            'd': 'M 45.02,23.46 45.32,23.28 26.96,13.67 43.32,24.34 45.02,23.46 z',\n            'fill': '#ccc'\n        } );\n        \n        svg.appendChild(pathBG);\n        svg.appendChild(pathPlayArrow1);\n        svg.appendChild(pathPlayArrow2);\n\n        return svg;\n    }\n\n    /**\n     * Add the play button to the video slot atop the videoPoster image.\n     * \n     * @param {[array]} attrs\n     */\n    function addVideoButton( attrs ) {\n        let videoButton     = document.createElement(\"button\");\n        let videoButtonIcon = addPlayButtonSVG();\n\n        setAttributes(\n            videoButton,\n            {\n                \"class\": \"playButton\",\n                \"aria-label\": \"Play video in modal window\",\n                \"data-open\": \"videoPlayerReveal\",\n                \"data-media\": '\"' + attrs + '\"'\n            }\n        );\n\n        videoButton.appendChild(videoButtonIcon);\n\n        return videoButton;\n    }\n\n    /**\n     * Create the videoPoster image and play button which will inject \n     * the real video into a modal when clicked.\n     * \n     * @return object\n     */\n    function videoPoster( attrs ) {\n        let videoSlot        = document.querySelector('.media-block .flex-video');\n        let videoPosterImage = setVideoPosterImage();\n        let videoPlayButton  = addVideoButton( attrs );\n\n        videoSlot.insertAdjacentHTML('afterbegin', videoPosterImage);\n        videoSlot.appendChild(videoPlayButton);\n\n        return videoSlot;\n    }\n\n    if ( VIDEOBLOCK ) {\n        videoPoster( mediaAttrs );\n    }\n\n    // Add YouTube video to modal to prevent it from slowing down page rendering\n    if ( document.querySelector( \".mediabox .media\" ) ) {\n        createReveal();\n    }\n\n    /**\n     * Create the markup required to use Foundation's Reveal modal.\n     * \n     * @return {object} the Reveal module\n     */\n    function createReveal() {\n        let videoBox = `\n            <div id=\"videoBox\" class=\"flex-video widescreen media\"></div>\n        `;\n\n        let closeButton =  `\n            <button class=\"close-button\" data-close aria-label=\"Close modal\">\n                <span class=\"screen-reader-text\">Close modal</span>\n                <span class=\"icon\" m-Icon=\"close large\" aria-hidden=\"true\">\n                    <svg role=\"presentation\" viewBox=\"0 1 24 24\"><use xlink:href=\"#icon-close\"></use></svg>\n                </span>\n            </button>\n        `;\n\n        let reveal = document.createElement(\"div\");\n\n        setAttributes(reveal, {\n            \"class\": \"reveal\",\n            \"id\": \"videoPlayerReveal\",\n            \"data-reveal\": \"\"\n        });\n\n        reveal.innerHTML = videoBox;\n\n        document.body.appendChild(reveal);\n\n        // Use `setTimeout` due to delay in `.reveal` getting wrapped by overlay\n        // Close button was moved to prevent it overlapping the video.\n        setTimeout(function() {\n            document.querySelector('.reveal-overlay').insertAdjacentHTML('afterbegin', closeButton);\n        }, 500);\n    };\n\n    /**\n     * Generate a new iframe from the modified pieces set in our ACF oEmbed\n     * object, using a decoded set of attributes that were encoded via PHP\n     * in our template.\n     * \n     * @param  {object} target The playButton's target\n     * @return {object}        The new iframe\n     */\n    function generateIframe( target ) {\n        let targetObj  = target.getAttribute(\"data-open\");\n        let attrs = decodeURIComponent(escape(window.atob(mediaAttrs)));\n\n        // Append the iframe attributes to an iframe in the `#videoBox`\n        document.querySelector(\"#\" + targetObj).style.cssText +=\";\"+ \"opacity:1;\";\n\n        let iframeTemplate = `\n            <iframe ${attrs}></iframe>\n        `;\n\n        if (document.querySelector(\"#videoBox\")) {\n            document.querySelector(\"#videoBox\").innerHTML = iframeTemplate;\n        }\n    }\n\n    // Add the event listener that will generate the iframe.\n    document.addEventListener(\"click\", function(e) {\n        if ( e.target.hasAttribute(\"data-open\") ) {\n            generateIframe(e.target);\n        }\n    });\n\n} )();\n\n( function () {\n    const LAZY = new LazyImages;\n    const loadLazily = _ => { LAZY.lazyLoad(); };\n\n    window.addEventListener('load', loadLazily, false);\n    window.addEventListener('resize', loadLazily, false);\n    window.addEventListener('scroll', loadLazily, false);\n\n    // window.removeEventListener('load', loadLazily, false);\n    // window.removeEventListener('resize', loadLazily, false);\n    // window.removeEventListener('scroll', loadLazily, false);\n})();\n\n"],"names":["let","this","const"],"mappings":"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","preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9ob21lL2pvZWwvRGVza3RvcC9jdXJyZW50IHByb2plY3RzL2NoYW1iZXIvd3AtY29udGVudC90aGVtZXMvQ2hhbWJlci9yZXNvdXJjZXMvYXNzZXRzL2pzL2xhenktaW1hZ2UtbG9hZGluZy5qcyIsIi9ob21lL2pvZWwvRGVza3RvcC9jdXJyZW50IHByb2plY3RzL2NoYW1iZXIvd3AtY29udGVudC90aGVtZXMvQ2hhbWJlci9yZXNvdXJjZXMvYXNzZXRzL2pzL21lZGlhLWJsb2NrLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIC0tLS0tLS0tLS0tLS0gbGF6eS1pbWFnZS1sb2FkaW5nLmpzIC0tLS0tLS0tLS0tLS0gLy9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGF6eUltYWdlcyB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5sYXp5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmxhenknKTtcbiAgICB9XG5cbiAgICBsYXp5TG9hZCgpIHtcbiAgICAgICAgbGV0IGltYWdlcyA9IHRoaXMubGF6eTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGltYWdlcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICBpZih0aGlzLmlzSW5WaWV3cG9ydChpbWFnZXNbaV0pKXtcbiAgICAgICAgICAgICAgICBpZiAoaW1hZ2VzW2ldLmdldEF0dHJpYnV0ZSgnZGF0YS1zcmMnKSl7XG4gICAgICAgICAgICAgICAgICAgIGltYWdlc1tpXS5zcmMgPSBpbWFnZXNbaV0uZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpO1xuICAgICAgICAgICAgICAgICAgICBpbWFnZXNbaV0ucmVtb3ZlQXR0cmlidXRlKCdkYXRhLXNyYycpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaW1hZ2VzW2ldLmdldEF0dHJpYnV0ZSgnZGF0YS1zcmNzZXQnKSl7XG4gICAgICAgICAgICAgICAgICAgIGltYWdlc1tpXS5zcmNzZXQgPSBpbWFnZXNbaV0uZ2V0QXR0cmlidXRlKCdkYXRhLXNyY3NldCcpO1xuICAgICAgICAgICAgICAgICAgICBpbWFnZXNbaV0ucmVtb3ZlQXR0cmlidXRlKCdkYXRhLXNyY3NldCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpbWFnZXNbaV0uY2xhc3NMaXN0LmFkZChcImlzLWxvYWRlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuY2xlYW5MYXp5KCk7XG4gICAgfVxuXG4gICAgY2xlYW5MYXp5KCkge1xuICAgICAgICBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwodGhpcy5sYXp5LCBmdW5jdGlvbihsKSB7IFxuICAgICAgICAgICAgcmV0dXJuIGwuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpc0luVmlld3BvcnQobGF6eSkge1xuICAgICAgICBsZXQgcmVjdCA9IGxhenkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgcmVjdC5ib3R0b20gPj0gMCAmJiBcbiAgICAgICAgICAgIHJlY3QucmlnaHQgID49IDAgJiYgXG4gICAgICAgICAgICByZWN0LnRvcCAgICA8PSAod2luZG93LmlubmVySGVpZ2h0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQpICYmIFxuICAgICAgICAgICAgcmVjdC5sZWZ0ICAgPD0gKHdpbmRvdy5pbm5lcldpZHRoIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aClcbiAgICAgICAgICk7XG4gICAgfVxuXG4gICAgb25DaGFuZ2UoLi4uYXJncykge1xuICAgICAgICByZXR1cm4gYXJncztcbiAgICB9XG5cbn0iLCJpbXBvcnQgTGF6eUltYWdlcyBmcm9tICcuL2xhenktaW1hZ2UtbG9hZGluZy5qcyc7XG5cbi8qKlxuICogbWVkaWEtYmxvY2suanMuXG4gKlxuICogQWRkIHZpZGVvUG9zdGVyIGltYWdlIGZyb20gWW91VHViZSB2aWRlbyB0byBtZWRpYS1ibG9jayBzdHJpcGUuXG4gKi9cbiggZnVuY3Rpb24gKCkge1xuXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICAvLyBpZiAoICEgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN0cmlwZS5tZWRpYS1ibG9jaycpICkge1xuICAgIC8vICAgICByZXR1cm47XG4gICAgLy8gfVxuXG4gICAgaWYgKCAhIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zdHJpcGUubWVkaWEtYmxvY2sgLmZsZXgtdmlkZW8nKSApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IE1FRElBQkxPQ0sgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN0cmlwZS5tZWRpYS1ibG9jaycpO1xuICAgIGNvbnN0IFZJREVPQkxPQ0sgID0gTUVESUFCTE9DSy5xdWVyeVNlbGVjdG9yKCcuZmxleC12aWRlbycpO1xuXG4gICAgbWVkaWFJRCAgICA9IHR5cGVvZiBtZWRpYUlEID09PSBcInVuZGVmaW5lZFwiID8gJycgOiBtZWRpYUlEO1xuICAgIG1lZGlhQXR0cnMgPSB0eXBlb2YgbWVkaWFBdHRycyA9PT0gXCJ1bmRlZmluZWRcIiA/ICcnIDogbWVkaWFBdHRycztcblxuICAgIC8qKlxuICAgICAqIFNldCBtdWx0aXBsZSBhdHRyaWJ1dGVzIG9uIGFuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBAc291cmNlIGh0dHA6Ly9zdGFja292ZXJmbG93dVxuICAgICAqIFxuICAgICAqIC5jb20vcXVlc3Rpb25zLzEyMjc0NzQ4L3NldHRpbmctbXVsdGlwbGUtYXR0cmlidXRlcy1mb3ItYW4tZWxlbWVudC1hdC1vbmNlLXdpdGgtamF2YXNjcmlwdFxuICAgICAqIFxuICAgICAqIEBwYXJhbSB7W29iamVjdF19IGVsXG4gICAgICogQHBhcmFtIHtbYXJyYXldfSBhdHRyc1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNldEF0dHJpYnV0ZXMoZWwsIGF0dHJzKSB7XG4gICAgICAgIGZvcihsZXQga2V5IGluIGF0dHJzKSB7XG4gICAgICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgaW1hZ2UgYHNyY2AgZm9yIHRoZSB2aWRlbyBwb3N0ZXIuXG4gICAgICogXG4gICAgICogQHJldHVybiB7T2JqZWN0fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNldFZpZGVvUG9zdGVySW1hZ2UoKSB7XG4gICAgICAgIGxldCBwb3N0ZXIgPSAnJztcblxuICAgICAgICBwb3N0ZXIgPSAnPGltZyBjbGFzcz1cImxhenkgdmlkZW8tcG9zdGVyXCIgZGF0YS1zcmM9XCJodHRwczovL2kueXRpbWcuY29tL3ZpLycgKyBtZWRpYUlEICsgJy9zZGRlZmF1bHQuanBnXCIgLz4nO1xuXG4gICAgICAgIHJldHVybiBwb3N0ZXI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBTVkcgcGxheSBhcnJvdyBpY29uIHRvIHRoZSBwbGF5IGJ1dHRvbi5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBhZGRQbGF5QnV0dG9uU1ZHKCkge1xuICAgICAgICBsZXQgc3ZnICAgICAgICAgICAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInN2Z1wiKTtcbiAgICAgICAgbGV0IHBhdGhCRyAgICAgICAgID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJwYXRoXCIpO1xuICAgICAgICBsZXQgcGF0aFBsYXlBcnJvdzEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInBhdGhcIik7XG4gICAgICAgIGxldCBwYXRoUGxheUFycm93MiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwicGF0aFwiKTtcblxuICAgICAgICBzZXRBdHRyaWJ1dGVzKCBzdmcsIHtcbiAgICAgICAgICAgICd2aWV3Qm94JzogJzAgMCA2OCA0OCcsIFxuICAgICAgICAgICAgJ2hlaWdodCc6ICcxMDAlJywgXG4gICAgICAgICAgICAnc3R5bGUnOiAncG9pbnRlci1ldmVudHM6bm9uZTsnXG4gICAgICAgIH0gKTtcblxuICAgICAgICBzZXRBdHRyaWJ1dGVzKCBwYXRoQkcsIHtcbiAgICAgICAgICAgICdkJzogJ20gLjY2LDM3LjYyIGMgMCwwIC42Niw0LjcwIDIuNzAsNi43NyAyLjU4LDIuNzEgNS45OCwyLjYzIDcuNDksMi45MSA1LjQzLC41MiAyMy4xMCwuNjggMjMuMTIsLjY4IC4wMCwtMS4zZS01IDE0LjI5LC0wLjAyIDIzLjgxLC0wLjcxIDEuMzIsLTAuMTUgNC4yMiwtMC4xNyA2LjgxLC0yLjg5IDIuMDMsLTIuMDcgMi43MCwtNi43NyAyLjcwLC02Ljc3IDAsMCAuNjcsLTUuNTIgLjY3LC0xMS4wNCBsIDAsLTUuMTcgYyAwLC01LjUyIC0wLjY3LC0xMS4wNCAtMC42NywtMTEuMDQgMCwwIC0wLjY2LC00LjcwIC0yLjcwLC02Ljc3IEMgNjIuMDMsLjg2IDU5LjEzLC44NCA1Ny44MCwuNjkgNDguMjgsMCAzNC4wMCwwIDM0LjAwLDAgMzMuOTcsMCAxOS42OSwwIDEwLjE4LC42OSA4Ljg1LC44NCA1Ljk1LC44NiAzLjM2LDMuNTggMS4zMiw1LjY1IC42NiwxMC4zNSAuNjYsMTAuMzUgYyAwLDAgLTAuNTUsNC41MCAtMC42Niw5LjQ1IGwgMCw4LjM2IGMgLjEwLDQuOTQgLjY2LDkuNDUgLjY2LDkuNDUgeicsXG4gICAgICAgICAgICAnZmlsbCc6ICcjMWYxZjFlJyxcbiAgICAgICAgICAgICdmaWxsLW9wYWNpdHknOiAnMC44MSdcbiAgICAgICAgfSApO1xuXG4gICAgICAgIHNldEF0dHJpYnV0ZXMoIHBhdGhQbGF5QXJyb3cxLCB7XG4gICAgICAgICAgICAnZCc6ICdtIDI2Ljk2LDEzLjY3IDE4LjM3LDkuNjIgLTE4LjM3LDkuNTUgLTAuMDAsLTE5LjE3IHonLFxuICAgICAgICAgICAgJ2ZpbGwnOiAnI2ZmZidcbiAgICAgICAgfSApO1xuXG4gICAgICAgIHNldEF0dHJpYnV0ZXMoIHBhdGhQbGF5QXJyb3cyLCB7XG4gICAgICAgICAgICAnZCc6ICdNIDQ1LjAyLDIzLjQ2IDQ1LjMyLDIzLjI4IDI2Ljk2LDEzLjY3IDQzLjMyLDI0LjM0IDQ1LjAyLDIzLjQ2IHonLFxuICAgICAgICAgICAgJ2ZpbGwnOiAnI2NjYydcbiAgICAgICAgfSApO1xuICAgICAgICBcbiAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHBhdGhCRyk7XG4gICAgICAgIHN2Zy5hcHBlbmRDaGlsZChwYXRoUGxheUFycm93MSk7XG4gICAgICAgIHN2Zy5hcHBlbmRDaGlsZChwYXRoUGxheUFycm93Mik7XG5cbiAgICAgICAgcmV0dXJuIHN2ZztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIHBsYXkgYnV0dG9uIHRvIHRoZSB2aWRlbyBzbG90IGF0b3AgdGhlIHZpZGVvUG9zdGVyIGltYWdlLlxuICAgICAqIFxuICAgICAqIEBwYXJhbSB7W2FycmF5XX0gYXR0cnNcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBhZGRWaWRlb0J1dHRvbiggYXR0cnMgKSB7XG4gICAgICAgIGxldCB2aWRlb0J1dHRvbiAgICAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICBsZXQgdmlkZW9CdXR0b25JY29uID0gYWRkUGxheUJ1dHRvblNWRygpO1xuXG4gICAgICAgIHNldEF0dHJpYnV0ZXMoXG4gICAgICAgICAgICB2aWRlb0J1dHRvbixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcImNsYXNzXCI6IFwicGxheUJ1dHRvblwiLFxuICAgICAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiBcIlBsYXkgdmlkZW8gaW4gbW9kYWwgd2luZG93XCIsXG4gICAgICAgICAgICAgICAgXCJkYXRhLW9wZW5cIjogXCJ2aWRlb1BsYXllclJldmVhbFwiLFxuICAgICAgICAgICAgICAgIFwiZGF0YS1tZWRpYVwiOiAnXCInICsgYXR0cnMgKyAnXCInXG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgdmlkZW9CdXR0b24uYXBwZW5kQ2hpbGQodmlkZW9CdXR0b25JY29uKTtcblxuICAgICAgICByZXR1cm4gdmlkZW9CdXR0b247XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIHRoZSB2aWRlb1Bvc3RlciBpbWFnZSBhbmQgcGxheSBidXR0b24gd2hpY2ggd2lsbCBpbmplY3QgXG4gICAgICogdGhlIHJlYWwgdmlkZW8gaW50byBhIG1vZGFsIHdoZW4gY2xpY2tlZC5cbiAgICAgKiBcbiAgICAgKiBAcmV0dXJuIG9iamVjdFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHZpZGVvUG9zdGVyKCBhdHRycyApIHtcbiAgICAgICAgbGV0IHZpZGVvU2xvdCAgICAgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVkaWEtYmxvY2sgLmZsZXgtdmlkZW8nKTtcbiAgICAgICAgbGV0IHZpZGVvUG9zdGVySW1hZ2UgPSBzZXRWaWRlb1Bvc3RlckltYWdlKCk7XG4gICAgICAgIGxldCB2aWRlb1BsYXlCdXR0b24gID0gYWRkVmlkZW9CdXR0b24oIGF0dHJzICk7XG5cbiAgICAgICAgdmlkZW9TbG90Lmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJiZWdpbicsIHZpZGVvUG9zdGVySW1hZ2UpO1xuICAgICAgICB2aWRlb1Nsb3QuYXBwZW5kQ2hpbGQodmlkZW9QbGF5QnV0dG9uKTtcblxuICAgICAgICByZXR1cm4gdmlkZW9TbG90O1xuICAgIH1cblxuICAgIGlmICggVklERU9CTE9DSyApIHtcbiAgICAgICAgdmlkZW9Qb3N0ZXIoIG1lZGlhQXR0cnMgKTtcbiAgICB9XG5cbiAgICAvLyBBZGQgWW91VHViZSB2aWRlbyB0byBtb2RhbCB0byBwcmV2ZW50IGl0IGZyb20gc2xvd2luZyBkb3duIHBhZ2UgcmVuZGVyaW5nXG4gICAgaWYgKCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCBcIi5tZWRpYWJveCAubWVkaWFcIiApICkge1xuICAgICAgICBjcmVhdGVSZXZlYWwoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgdGhlIG1hcmt1cCByZXF1aXJlZCB0byB1c2UgRm91bmRhdGlvbidzIFJldmVhbCBtb2RhbC5cbiAgICAgKiBcbiAgICAgKiBAcmV0dXJuIHtvYmplY3R9IHRoZSBSZXZlYWwgbW9kdWxlXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlUmV2ZWFsKCkge1xuICAgICAgICBsZXQgdmlkZW9Cb3ggPSBgXG4gICAgICAgICAgICA8ZGl2IGlkPVwidmlkZW9Cb3hcIiBjbGFzcz1cImZsZXgtdmlkZW8gd2lkZXNjcmVlbiBtZWRpYVwiPjwvZGl2PlxuICAgICAgICBgO1xuXG4gICAgICAgIGxldCBjbG9zZUJ1dHRvbiA9ICBgXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiY2xvc2UtYnV0dG9uXCIgZGF0YS1jbG9zZSBhcmlhLWxhYmVsPVwiQ2xvc2UgbW9kYWxcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInNjcmVlbi1yZWFkZXItdGV4dFwiPkNsb3NlIG1vZGFsPC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvblwiIG0tSWNvbj1cImNsb3NlIGxhcmdlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzdmcgcm9sZT1cInByZXNlbnRhdGlvblwiIHZpZXdCb3g9XCIwIDEgMjQgMjRcIj48dXNlIHhsaW5rOmhyZWY9XCIjaWNvbi1jbG9zZVwiPjwvdXNlPjwvc3ZnPlxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICBgO1xuXG4gICAgICAgIGxldCByZXZlYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgICAgIHNldEF0dHJpYnV0ZXMocmV2ZWFsLCB7XG4gICAgICAgICAgICBcImNsYXNzXCI6IFwicmV2ZWFsXCIsXG4gICAgICAgICAgICBcImlkXCI6IFwidmlkZW9QbGF5ZXJSZXZlYWxcIixcbiAgICAgICAgICAgIFwiZGF0YS1yZXZlYWxcIjogXCJcIlxuICAgICAgICB9KTtcblxuICAgICAgICByZXZlYWwuaW5uZXJIVE1MID0gdmlkZW9Cb3g7XG5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChyZXZlYWwpO1xuXG4gICAgICAgIC8vIFVzZSBgc2V0VGltZW91dGAgZHVlIHRvIGRlbGF5IGluIGAucmV2ZWFsYCBnZXR0aW5nIHdyYXBwZWQgYnkgb3ZlcmxheVxuICAgICAgICAvLyBDbG9zZSBidXR0b24gd2FzIG1vdmVkIHRvIHByZXZlbnQgaXQgb3ZlcmxhcHBpbmcgdGhlIHZpZGVvLlxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJldmVhbC1vdmVybGF5JykuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgY2xvc2VCdXR0b24pO1xuICAgICAgICB9LCA1MDApO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyBpZnJhbWUgZnJvbSB0aGUgbW9kaWZpZWQgcGllY2VzIHNldCBpbiBvdXIgQUNGIG9FbWJlZFxuICAgICAqIG9iamVjdCwgdXNpbmcgYSBkZWNvZGVkIHNldCBvZiBhdHRyaWJ1dGVzIHRoYXQgd2VyZSBlbmNvZGVkIHZpYSBQSFBcbiAgICAgKiBpbiBvdXIgdGVtcGxhdGUuXG4gICAgICogXG4gICAgICogQHBhcmFtICB7b2JqZWN0fSB0YXJnZXQgVGhlIHBsYXlCdXR0b24ncyB0YXJnZXRcbiAgICAgKiBAcmV0dXJuIHtvYmplY3R9ICAgICAgICBUaGUgbmV3IGlmcmFtZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdlbmVyYXRlSWZyYW1lKCB0YXJnZXQgKSB7XG4gICAgICAgIGxldCB0YXJnZXRPYmogID0gdGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtb3BlblwiKTtcbiAgICAgICAgbGV0IGF0dHJzID0gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZSh3aW5kb3cuYXRvYihtZWRpYUF0dHJzKSkpO1xuXG4gICAgICAgIC8vIEFwcGVuZCB0aGUgaWZyYW1lIGF0dHJpYnV0ZXMgdG8gYW4gaWZyYW1lIGluIHRoZSBgI3ZpZGVvQm94YFxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiICsgdGFyZ2V0T2JqKS5zdHlsZS5jc3NUZXh0ICs9XCI7XCIrIFwib3BhY2l0eToxO1wiO1xuXG4gICAgICAgIGxldCBpZnJhbWVUZW1wbGF0ZSA9IGBcbiAgICAgICAgICAgIDxpZnJhbWUgJHthdHRyc30+PC9pZnJhbWU+XG4gICAgICAgIGA7XG5cbiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdmlkZW9Cb3hcIikpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdmlkZW9Cb3hcIikuaW5uZXJIVE1MID0gaWZyYW1lVGVtcGxhdGU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBZGQgdGhlIGV2ZW50IGxpc3RlbmVyIHRoYXQgd2lsbCBnZW5lcmF0ZSB0aGUgaWZyYW1lLlxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmICggZS50YXJnZXQuaGFzQXR0cmlidXRlKFwiZGF0YS1vcGVuXCIpICkge1xuICAgICAgICAgICAgZ2VuZXJhdGVJZnJhbWUoZS50YXJnZXQpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbn0gKSgpO1xuXG4oIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBMQVpZID0gbmV3IExhenlJbWFnZXM7XG4gICAgY29uc3QgbG9hZExhemlseSA9IF8gPT4geyBMQVpZLmxhenlMb2FkKCk7IH07XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGxvYWRMYXppbHksIGZhbHNlKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgbG9hZExhemlseSwgZmFsc2UpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBsb2FkTGF6aWx5LCBmYWxzZSk7XG5cbiAgICAvLyB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZCcsIGxvYWRMYXppbHksIGZhbHNlKTtcbiAgICAvLyB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgbG9hZExhemlseSwgZmFsc2UpO1xuICAgIC8vIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBsb2FkTGF6aWx5LCBmYWxzZSk7XG59KSgpO1xuXG4iXSwibmFtZXMiOlsibGV0IiwidGhpcyIsImNvbnN0Il0sIm1hcHBpbmdzIjoiOzs7QUFBQTs7QUFFQSxJQUFxQixVQUFVLEdBQUMsbUJBRWpCLEdBQUc7SUFDZCxJQUFRLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztDQUNsRCxDQUFBOztBQUVMLHFCQUFJLFFBQVEsd0JBQUc7OztJQUNYLElBQVEsTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7O0lBRTNCLEtBQVNBLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUN2QyxHQUFPQyxNQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLElBQVEsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDdkMsTUFB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"}